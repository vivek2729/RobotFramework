<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.1 on win32)" generated="20200402 20:30:03.193" rpa="false">
<suite id="s1" name="NBC" source="C:\Users\Administrator\Desktop\Code\NBC.robot">
<test id="s1-t1" name="NBC_Saturady_Live">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>nbcu_pilot</arg>
<arg>vivekkumar.pandey</arg>
<arg>MMaXm83dZD18A4AA</arg>
<arg>dev-scraper.csoaie2kvgsc.us-east-1.rds.amazonaws.com</arg>
<arg>3306</arg>
</arguments>
<msg timestamp="20200402 20:30:05.092" level="INFO">Connecting using : pymysql.connect(db=nbcu_pilot, user=vivekkumar.pandey, passwd=MMaXm83dZD18A4AA, host=dev-scraper.csoaie2kvgsc.us-east-1.rds.amazonaws.com, port=3306, charset=None) </msg>
<status status="PASS" starttime="20200402 20:30:04.830" endtime="20200402 20:30:05.107"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>https://www.nbc.com/saturday-night-live</arg>
<arg>chrome</arg>
</arguments>
<msg timestamp="20200402 20:30:05.107" level="INFO">Opening browser 'chrome' to base url 'https://www.nbc.com/saturday-night-live'.</msg>
<status status="PASS" starttime="20200402 20:30:05.107" endtime="20200402 20:30:58.560"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200402 20:30:58.561" endtime="20200402 20:31:00.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:31:05.577" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:31:00.574" endtime="20200402 20:31:05.577"></status>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<arguments>
<arg>css=div.shelf__tiles__inner&gt;a.tile.tile--clip.tile--zoomable</arg>
</arguments>
<assign>
<var>@{List}</var>
</assign>
<msg timestamp="20200402 20:31:05.600" level="INFO">@{List} = [ &lt;selenium.webdriver.remote.webelement.WebElement (session="6c35dec7cc889bf673a284b5b0f63ec5", element="2959dfc9-7bd2-4a95-a214-46842c322dfa")&gt; | &lt;selenium.webdriver.remote.webelement.WebElement (ses...</msg>
<status status="PASS" starttime="20200402 20:31:05.577" endtime="20200402 20:31:05.600"></status>
</kw>
<kw name="${i} IN [ @{List} ]" type="for">
<kw name="${i} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;6c35dec7cc889bf673a284b5b0f63ec5&quot;, element=&quot;2959dfc9-7bd2-4a95-a214-46842c322dfa&quot;)&gt;" type="foritem">
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>${i}</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:31:05.607" level="INFO">${URL} = https://www.nbc.com/saturday-night-live/video/weekend-update-rewind-ruth-bader-ginsburg-part-2-of-2/4140763</msg>
<status status="PASS" starttime="20200402 20:31:05.600" endtime="20200402 20:31:05.607"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:31:05.608" endtime="20200402 20:31:05.608"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:31:05.608" level="INFO">${Count2} = 2</msg>
<status status="PASS" starttime="20200402 20:31:05.608" endtime="20200402 20:31:05.608"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Inner_Loop_NBC_Saturday_Night_Live</arg>
<arg>${URL}</arg>
</arguments>
<kw name="Inner_Loop_NBC_Saturday_Night_Live">
<arguments>
<arg>${URL}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:31:05.610" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:31:05.609" endtime="20200402 20:31:05.670"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:31:05.670" endtime="20200402 20:31:05.683"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:31:15.685" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:31:05.684" endtime="20200402 20:31:15.685"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:31:15.685" level="INFO">Opening url 'https://www.nbc.com/saturday-night-live/video/weekend-update-rewind-ruth-bader-ginsburg-part-2-of-2/4140763'</msg>
<status status="PASS" starttime="20200402 20:31:15.685" endtime="20200402 20:31:18.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:31:28.630" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:31:18.629" endtime="20200402 20:31:28.630"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=h1.video-meta__title&gt;span</arg>
</arguments>
<assign>
<var>${Episode_Name}</var>
</assign>
<msg timestamp="20200402 20:31:31.406" level="INFO">${Episode_Name} = Weekend Update Rewind: Ruth Bader Ginsburg (Part 2 of 2)</msg>
<status status="PASS" starttime="20200402 20:31:28.630" endtime="20200402 20:31:31.406"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Episode_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Episode_Name}</var>
</assign>
<msg timestamp="20200402 20:31:31.407" level="INFO">${Episode_Name} = Weekend Update Rewind: Ruth Bader Ginsburg (Part 2 of 2)</msg>
<status status="PASS" starttime="20200402 20:31:31.406" endtime="20200402 20:31:31.407"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.NBC_Saturday_Night_Live (`Episode_Name`) VALUES ('${Episode_Name}');</arg>
</arguments>
<msg timestamp="20200402 20:31:31.407" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.NBC_Saturday_Night_Live (`Episode_Name`) VALUES ('Weekend Update Rewind: Ruth Bader Ginsburg (Part 2 of 2)'); </msg>
<status status="PASS" starttime="20200402 20:31:31.407" endtime="20200402 20:31:31.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20200402 20:31:34.414" level="INFO">Slept 3 seconds</msg>
<status status="PASS" st
</kw>
<kw name="Repl</status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:31:12.619" endtime="20200402 20:31:12.620"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:31:12.620" level="INFO">${list} = [1290]</msg>
<status status="PASS" starttime="20200402 20:31:12.620" endtime="20200402 20:31:12.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:31:12.621" level="INFO">${Count3} = 1290</msg>
<status status="PASS" starttime="20200402 20:31:12.620" endtime="20200402 20:31:12.621"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:31:17.622" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:31:12.621" endtime="20200402 20:31:17.622"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div.view-content&gt;div.views-row.views-row-${Count2}&gt;div&gt;div&gt;div.search-result__teaser__pubinfo</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:31:18.347" level="INFO">${Video_Rendered_Before} = THE RACHEL MADDOW SHOW - 9:44 PM 4/01/2020</msg>
<status status="PASS" starttime="20200402 20:31:17.622" endtime="20200402 20:31:18.347"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:31:18.347" level="INFO">${Video_Rendered_Before} = THE RACHEL MADDOW SHOW - 9:44 PM 4/01/2020</msg>
<status status="PASS" starttime="20200402 20:31:18.347" endtime="20200402 20:31:18.347"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.MSNBC_Rachel_Maddow set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:31:18.348" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.MSNBC_Rachel_Maddow set Video_Rendered_Before= 'THE RACHEL MADDOW SHOW - 9:44 PM 4/01/2020' where id=1290 </msg>
<status status="PASS" starttime="20200402 20:31:18.347" endtime="20200402 20:31:18.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:31:23.355" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:31:18.354" endtime="20200402 20:31:23.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:31:28.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:31:23.355" endtime="20200402 20:31:28.356"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div.view-content&gt;div.views-row.views-row-${Count2}&gt;div&gt;div&gt;h3&gt;a</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:31:30.117" level="INFO">${URL} = http://www.msnbc.com/rachel-maddow/watch/javitz-hsns-comfort-slow-to-take-on-patients-from-beleaguered-nyc-81521733971</msg>
<status status="PASS" starttime="20200402 20:31:28.356" endtime="20200402 20:31:30.117"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:31:30.117" level="INFO">${URL} = http://www.msnbc.com/rachel-maddow/watch/javitz-hsns-comfort-slow-to-take-on-patients-from-beleaguered-nyc-81521733971</msg>
<status status="PASS" starttime="20200402 20:31:30.117" endtime="20200402 20:31:30.117"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.MSNBC_Rachel_Maddow set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:31:30.118" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.MSNBC_Rachel_Maddow set URL= 'http://www.msnbc.com/rachel-maddow/watch/javitz-hsns-comfort-slow-to-take-on-patients-from-beleaguered-nyc-81521733971' where id=1290 </msg>
<status status="PASS" starttime="20200402 20:31:30.118" endtime="20200402 20:31:30.125"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:31:30.127" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:31:30.126" endtime="20200402 20:31:31.004"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:31:31.005" endtime="20200402 20:31:31.060"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:31:41.062" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:31:31.060" endtime="20200402 20:31:41.062"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:31:41.062" level="INFO">Opening url 'http://www.msnbc.com/rachel-maddow/watch/javitz-hsns-comfort-slow-to-take-on-patients-from-beleaguered-nyc-81521733971'</msg>
<status status="PASS" starttime="20200402 20:31:41.062" endtime="20200402 20:32:10.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:32:20.517" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:32:10.515" endtime="20200402 20:32:20.517"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>//h1[contains(@class,'title')]</arg>
</arguments>
<assign>
<var>${Title1}</var>
</assign>
<msg timestamp="20200402 20:32:20.574" level="INFO">${Title1} = Javitz, HSNS Comfort slow to take on patients from beleaguered NYC</msg>
<status status="PASS" starttime="20200402 20:32:20.517" endtime="20200402 20:32:20.574"></status>
</kw>
<kw </doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:31:42.622" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '53 minutes' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:31:42.621" endtime="20200402 20:31:42.628"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:31:47.629" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:31:42.629" endtime="20200402 20:31:47.629"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:31:47.788" level="INFO">${URL} = https://www.youtube.com/watch?v=zqLz4slJ7AM</msg>
<status status="PASS" starttime="20200402 20:31:47.629" endtime="20200402 20:31:47.789"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:31:47.789" level="INFO">${URL} = https://www.youtube.com/watch?v=zqLz4slJ7AM</msg>
<status status="PASS" starttime="20200402 20:31:47.789" endtime="20200402 20:31:47.789"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:31:47.790" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=zqLz4slJ7AM' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:31:47.789" endtime="20200402 20:31:47.796"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:31:47.798" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:31:47.797" endtime="20200402 20:31:48.790"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:31:48.790" endtime="20200402 20:31:48.851"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:31:58.853" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:31:48.851" endtime="20200402 20:31:58.853"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:31:58.854" level="INFO">Opening url 'https://www.youtube.com/watch?v=zqLz4slJ7AM'</msg>
<status status="PASS" starttime="20200402 20:31:58.853" endtime="20200402 20:32:04.538"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:32:14.540" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:32:04.539" endtime="20200402 20:32:14.540"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:32:14.720" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:32:14.540" endtime="20200402 20:32:14.720"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:32:14.721" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:32:14.721" endtime="20200402 20:32:14.721"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:14.722" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:14.721" endtime="20200402 20:32:14.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:19.729" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:32:14.728" endtime="20200402 20:32:19.729"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:32:19.757" level="INFO">${Full_View_Count} = 174 views</msg>
<status status="PASS" starttime="20200402 20:32:19.729" endtime="20200402 20:32:19.757"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:32:19.758" level="INFO">${Full_View_Count} = 174 views</msg>
<status status="PASS" starttime="20200402 20:32:19.757" endtime="20200402 20:32:19.758"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:19.759" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='174 views' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:19.758" endtime="20200402 20:32:19.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed</msg>
<status status="PASS" starttime="20200402 20:32:20.709" endtime="20200402 20:32:20.716"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:30.125" endtime="20200402 20:32:20.716"></status>
</kw>
<status statu</status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:32:24.815" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:32:24.767" endtime="20200402 20:32:24.815"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:32:24.816" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:32:24.815" endtime="20200402 20:32:24.816"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:32:24.816" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4333' </msg>
<status status="PASS" starttime="20200402 20:32:24.816" endtime="20200402 20:32:24.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:29.825" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:32:24.822" endtime="20200402 20:32:29.825"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:32:31.074" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 20:32:29.825" endtime="20200402 20:32:31.074"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:32:31.075" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 20:32:31.074" endtime="20200402 20:32:31.075"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:31.075" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:31.075" endtime="20200402 20:32:31.081"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:36.083" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:32:31.081" endtime="20200402 20:32:36.083"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:32:36.275" level="INFO">${Total_Dis_Likes} = 9</msg>
<status status="PASS" starttime="20200402 20:32:36.083" endtime="20200402 20:32:36.275"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:32:36.275" level="INFO">${Total_Dis_Likes} = 9</msg>
<status status="PASS" starttime="20200402 20:32:36.275" endtime="20200402 20:32:36.275"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:36.276" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='9' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:36.275" endtime="20200402 20:32:36.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:41.284" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:32:36.283" endtime="20200402 20:32:41.284"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:32:42.224" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:32:41.284" endtime="20200402 20:32:42.224"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:32:42.225" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:32:42.225" endtime="20200402 20:32:42.225"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:42.225" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:42.225" endtime="20200402 20:32:42.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:47.233" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:32:42.233" endtime="20200402 20:32:47.233"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:32:49.270"</arg>
<</status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:32:32.969
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:32:49.270" level="INFO">${Channel_Name} = Aduslan Joi</msg>
<status status="PASS" starttime="20200402 20:32:49.270" endtime="20200402 20:32:49.271"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:32:49.271" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Aduslan Joi' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:32:49.271" endtime="20200402 20:32:49.278"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:32:49.278" endtime="20200402 20:32:51.371"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:33:06.373" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:32:51.371" endtime="20200402 20:33:06.373"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:33:06.374" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:33:06.374" endtime="20200402 20:33:07.366"></status>
</kw>
<status status="PASS" starttime="20200402 20:33:06.374" endtime="20200402 20:33:07.366"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:33:17.367" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:33:07.367" endtime="20200402 20:33:17.367"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:33:17.396" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:33:17.367" endtime="20200402 20:33:17.396"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:33:17.397" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:33:17.397" endtime="20200402 20:33:17.397"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:33:17.397" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:33:17.397" endtime="20200402 20:33:17.404"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:22.404" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:17.404" endtime="20200402 20:33:22.404"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:33:22.487" level="INFO">${Description} = FULL MORNING JOE 8AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:33:22.404" endtime="20200402 20:33:22.487"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:33:22.488" level="INFO">${Description} = FULL MORNING JOE 8AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:33:22.487" endtime="20200402 20:33:22.488"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:33:22.488" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL MORNING JOE 8AM 4/2/2020 | MSNBC' where id=4333 </msg>
<status status="PASS" starttime="20200402 20:33:22.488" endtime="20200402 20:33:22.495"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:47.797" endtime="20200402 20:33:22.495"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:47.796" endtime="20200402 20:33:22.495"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:12.263" endtime="20200402 20:33:22.495"></status>
</kw>
<msg timestamp="20200402 20:33:22.495" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:31:12.263" endtime="20200402 20:33:22.495"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:33:22.496" level="INFO">${Count2} = 2</msg>
<status status="PASS" starttime="20200402 20:33:22.495" endtime="20200402 20:33:22.496"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:33:22.496" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:33:22.496" endtime="20200402 20:33:22.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:33:22.497" endtime="20200402 20:33:24.053"></status>
</kw>
<status status="PASS" starttime="20200402 20:33:22.496" endtime="20200402 20:33:24.053"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:33:24.053" endtime="20200402 20:33:24.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:29.369" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:24.369" endtime="20200402 20:33:29.369"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:02.261" endtime="20200402 20:33:29.369"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;7d449cfe-ea31-411c-a97c-772957ac5dbc&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:33:39.371" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:33:29.369" endtime="20200402 20:33:39.371"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:33:39.371" endtime="20200402 20:33:39.372"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:44.374" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:39.373" endtime="20200402 20:33:44.374"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:33:44.415" level="INFO">${Title} = ‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for...</msg>
<status status="PASS" starttime="20200402 20:33:44.374" endtime="20200402 20:33:44.415"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:33:44.416" level="INFO">${Title} = ‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for...</msg>
<status status="PASS" starttime="20200402 20:33:44.415" endtime="20200402 20:33:44.416"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:33:44.417" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for...') </msg>
<status status="PASS" starttime="20200402 20:33:44.416" endtime="20200402 20:33:44.424"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:49.425" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:44.424" endtime="20200402 20:33:49.425"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:33:49.425" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:33:49.427" level="INFO">${list} = ((4334,),)</msg>
<status status="PASS" starttime="20200402 20:33:49.425" endtime="20200402 20:33:49.427"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:33:49.427" endtime="20200402 20:33:49.427"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:33:49.428" level="INFO">${list} = [4334]</msg>
<status status="PASS" starttime="20200402 20:33:49.427" endtime="20200402 20:33:49.428"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:33:49.428" level="INFO">${Count3} = 4334</msg>
<status status="PASS" starttime="20200402 20:33:49.428" endtime="20200402 20:33:49.428"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:54.430" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:49.429" endtime="20200402 20:33:54.430"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:33:54.483" level="INFO">${Total_View} = 98 views</msg>
<status status="PASS" starttime="20200402 20:33:54.430" endtime="20200402 20:33:54.483"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:33:54.484" level="INFO">${Total_View} = 98 views</msg>
<status status="PASS" starttime="20200402 20:33:54.484" endtime="20200402 20:33:54.484"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:33:54.485" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '98 views' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:33:54.484" endtime="20200402 20:33:54.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:33:59.492" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:54.491" endtime="20200402 20:33:59.492"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:33:59.544" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:33:59.492" endtime="20200402 20:33:59.544"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:33:59.545" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:33:59.545" endtime="20200402 20:33:59.545"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:33:59.546" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '5 hours ago' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:33:59.545" endtime="20200402 20:33:59.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:04.554" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:33:59.553" endtime="20200402 20:34:04.554"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:34:04.829" level="INFO">${Duration} = 2 minutes, 51 seconds</msg>
<status status="PASS" starttime="20200402 20:34:04.554" endtime="20200402 20:34:04.829"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:34:04.830" level="INFO">${Duration} = 2 minutes, 51 seconds</msg>
<status status="PASS" starttime="20200402 20:34:04.829" endtime="20200402 20:34:04.830"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:04.830" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 51 seconds' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:04.830" endtime="20200402 20:34:04.837"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:09.838" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:04.837" endtime="20200402 20:34:09.838"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:34:09.866" level="INFO">${URL} = https://www.youtube.com/watch?v=P69y-kOL7cg</msg>
<status status="PASS" starttime="20200402 20:34:09.838" endtime="20200402 20:34:09.866"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:34:09.866" level="INFO">${URL} = https://www.youtube.com/watch?v=P69y-kOL7cg</msg>
<status status="PASS" starttime="20200402 20:34:09.866" endtime="20200402 20:34:09.866"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:09.867" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=P69y-kOL7cg' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:09.867" endtime="20200402 20:34:09.873"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:34:09.874" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:34:09.874" endtime="20200402 20:34:10.327"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:34:10.327" endtime="20200402 20:34:10.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:34:20.336" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:34:10.335" endtime="20200402 20:34:20.336"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:34:20.336" level="INFO">Opening url 'https://www.youtube.com/watch?v=P69y-kOL7cg'</msg>
<status status="PASS" starttime="20200402 20:34:20.336" endtime="20200402 20:34:24.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:34:34.156" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:34:24.153" endtime="20200402 20:34:34.156"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:34:35.160" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:34:34.156" endtime="20200402 20:34:35.160"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:34:35.160" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:34:35.160" endtime="20200402 20:34:35.160"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:35.161" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:35.161" endtime="20200402 20:34:35.167"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:40.169" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:35.167" endtime="20200402 20:34:40.169"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:34:40.258" level="INFO">${Full_View_Count} = 122 views</msg>
<status status="PASS" starttime="20200402 20:34:40.169" endtime="20200402 20:34:40.258"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:34:40.258" level="INFO">${Full_View_Count} = 122 views</msg>
<status status="PASS" starttime="20200402 20:34:40.258" endtime="20200402 20:34:40.258"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:40.259" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='122 views' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:40.258" endtime="20200402 20:34:40.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:45.268" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:40.266" endtime="20200402 20:34:45.268"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:34:45.325" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:34:45.268" endtime="20200402 20:34:45.325"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:34:45.326" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:34:45.325" endtime="20200402 20:34:45.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:34:45.326" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4334' </msg>
<status status="PASS" starttime="20200402 20:34:45.326" endtime="20200402 20:34:45.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:50.335" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:45.334" endtime="20200402 20:34:50.335"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:34:50.882" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 20:34:50.335" endtime="20200402 20:34:50.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:34:50.883" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 20:34:50.882" endtime="20200402 20:34:50.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:50.883" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='4' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:50.883" endtime="20200402 20:34:50.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:34:55.892" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:50.890" endtime="20200402 20:34:55.892"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:34:55.926" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 20:34:55.892" endtime="20200402 20:34:55.926"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:34:55.927" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 20:34:55.927" endtime="20200402 20:34:55.927"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:34:55.928" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='1' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:34:55.927" endtime="20200402 20:34:55.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:35:00.936" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:34:55.935" endtime="20200402 20:35:00.936"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:35:01.160" level="INFO">${Total_Subscribers} = 2.83K subscribers</msg>
<status status="PASS" starttime="20200402 20:35:00.936" endtime="20200402 20:35:01.160"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:35:01.161" level="INFO">${Total_Subscribers} = 2.83K subscribers</msg>
<status status="PASS" starttime="20200402 20:35:01.160" endtime="20200402 20:35:01.161"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:35:01.161" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.83K subscribers' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:35:01.161" endtime="20200402 20:35:01.167"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:35:06.170" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:35:01.168" endtime="20200402 20:35:06.170"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:35:06.358" level="INFO">${Channel_Name} = US Breaking News</msg>
<status status="PASS" starttime="20200402 20:35:06.170" endtime="20200402 20:35:06.359"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:35:06.359" level="INFO">${Channel_Name} = US Breaking News</msg>
<status status="PASS" starttime="20200402 20:35:06.359" endtime="20200402 20:35:06.359"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:35:06.360" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'US Breaking News' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:35:06.359" endtime="20200402 20:35:06.366"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:35:06.367" endtime="20200402 20:35:07.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:35:22.900" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:35:07.899" endtime="20200402 20:35:22.900"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:35:22.901" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:35:22.901" endtime="20200402 20:35:23.067"></status>
</kw>
<status status="PASS" starttime="20200402 20:35:22.900" endtime="20200402 20:35:23.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:35:33.069" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:35:23.068" endtime="20200402 20:35:33.069"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:35:33.109" level="INFO">${Category} = Gaming</msg>
<status status="PASS" starttime="20200402 20:35:33.069" endtime="20200402 20:35:33.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:35:33.110" level="INFO">${Category} = Gaming</msg>
<status status="PASS" starttime="20200402 20:35:33.110" endtime="20200402 20:35:33.110"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:35:33.111" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Gaming' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:35:33.110" endtime="20200402 20:35:33.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:35:38.120" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:35:33.118" endtime="20200402 20:35:38.120"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:35:38.573" level="INFO">${Description} = ‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for trying to ‘swagger’ past coronavirus

#BreakingNews #MorningJoe #MSNBCNews</msg>
<status status="PASS" starttime="20200402 20:35:38.120" endtime="20200402 20:35:38.573"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:35:38.574" level="INFO">${Description} = ‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for trying to ‘swagger’ past coronavirus

#BreakingNews #MorningJoe #MSNBCNews</msg>
<status status="PASS" starttime="20200402 20:35:38.574" endtime="20200402 20:35:38.574"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:35:38.574" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '‘Embarrassing’: MSNBC Morning Joe co-hosts destroy Trump-loving governors for trying to ‘swagger’ past coronavirus

#BreakingNews #MorningJoe #MSNBCNews' where id=4334 </msg>
<status status="PASS" starttime="20200402 20:35:38.574" endtime="20200402 20:35:38.581"></status>
</kw>
<status status="PASS" starttime="20200402 20:34:09.873" endtime="20200402 20:35:38.582"></status>
</kw>
<status status="PASS" starttime="20200402 20:34:09.873" endtime="20200402 20:35:38.582"></status>
</kw>
<status status="PASS" starttime="20200402 20:33:39.373" endtime="20200402 20:35:38.582"></status>
</kw>
<msg timestamp="20200402 20:35:38.582" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:33:39.372" endtime="20200402 20:35:38.582"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:35:38.582" level="INFO">${Count2} = 3</msg>
<status status="PASS" starttime="20200402 20:35:38.582" endtime="20200402 20:35:38.582"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:35:38.583" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:35:38.583" endtime="20200402 20:35:38.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:35:38.584" endtime="20200402 20:35:38.966"></status>
</kw>
<status status="PASS" starttime="20200402 20:35:38.584" endtime="20200402 20:35:38.966"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:35:38.966" endtime="20200402 20:35:38.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:35:43.978" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:35:38.977" endtime="20200402 20:35:43.978"></status>
</kw>
<status status="PASS" starttime="20200402 20:33:29.369" endtime="20200402 20:35:43.978"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;803a7c2b-4f65-44b2-99b6-789f706ae2fc&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:35:53.980" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:35:43.979" endtime="20200402 20:35:53.980"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:35:53.980" endtime="20200402 20:35:53.981"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:35:58.984" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:35:53.981" endtime="20200402 20:35:58.984"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:35:59.025" level="INFO">${Title} = Sen. Mitch McConnell Downplays Talk Of Fourth Relief Bill | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:35:58.985" endtime="20200402 20:35:59.025"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:35:59.025" level="INFO">${Title} = Sen. Mitch McConnell Downplays Talk Of Fourth Relief Bill | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:35:59.025" endtime="20200402 20:35:59.025"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:35:59.026" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Sen. Mitch McConnell Downplays Talk Of Fourth Relief Bill | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:35:59.025" endtime="20200402 20:35:59.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:36:04.033" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:35:59.032" endtime="20200402 20:36:04.033"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:36:04.034" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:36:04.035" level="INFO">${list} = ((4335,),)</msg>
<status status="PASS" starttime="20200402 20:36:04.033" endtime="20200402 20:36:04.035"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:36:04.035" endtime="20200402 20:36:04.036"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:36:04.036" level="INFO">${list} = [4335]</msg>
<status status="PASS" starttime="20200402 20:36:04.036" endtime="20200402 20:36:04.036"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:36:04.037" level="INFO">${Count3} = 4335</msg>
<status status="PASS" starttime="20200402 20:36:04.036" endtime="20200402 20:36:04.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:36:09.038" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:36:04.037" endtime="20200402 20:36:09.038"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:36:09.520" level="INFO">${Total_View} = 6.2K views</msg>
<status status="PASS" starttime="20200402 20:36:09.038" endtime="20200402 20:36:09.520"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:36:09.520" level="INFO">${Total_View} = 6.2K views</msg>
<status status="PASS" starttime="20200402 20:36:09.520" endtime="20200402 20:36:09.520"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:36:09.521" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '6.2K views' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:36:09.521" endtime="20200402 20:36:09.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:36:14.529" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:36:09.527" endtime="20200402 20:36:14.529"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:36:14.562" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:36:14.529" endtime="20200402 20:36:14.562"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:36:14.563" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:36:14.563" endtime="20200402 20:36:14.563"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:36:14.564" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '5 hours ago' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:36:14.563" endtime="20200402 20:36:14.571"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:36:19.572" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:36:14.571" endtime="20200402 20:36:19.572"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:36:19.593" level="INFO">${Duration} = 6 minutes, 23 seconds</msg>
<status status="PASS" starttime="20200402 20:36:19.572" endtime="20200402 20:36:19.593"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:36:19.594" level="INFO">${Duration} = 6 minutes, 23 seconds</msg>
<status status="PASS" starttime="20200402 20:36:19.593" endtime="20200402 20:36:19.594"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:36:19.594" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '6 minutes, 23 seconds' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:36:19.594" endtime="20200402 20:36:19.600"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:36:24.601" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:36:19.600" endtime="20200402 20:36:24.601"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:36:24.685" level="INFO">${URL} = https://www.youtube.com/watch?v=9O-wTM4H-Tc</msg>
<status status="PASS" starttime="20200402 20:36:24.601" endtime="20200402 20:36:24.685"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:36:24.686" level="INFO">${URL} = https://www.youtube.com/watch?v=9O-wTM4H-Tc</msg>
<status status="PASS" starttime="20200402 20:36:24.685" endtime="20200402 20:36:24.686"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:36:24.686" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=9O-wTM4H-Tc' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:36:24.686" endtime="20200402 20:36:24.693"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:36:24.695" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:36:24.694" endtime="20200402 20:36:25.267"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:36:25.267" endtime="20200402 20:36:25.277"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:36:35.279" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:36:25.277" endtime="20200402 20:36:35.279"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:36:35.279" level="INFO">Opening url 'https://www.youtube.com/watch?v=9O-wTM4H-Tc'</msg>
<status status="PASS" starttime="20200402 20:36:35.279" endtime="20200402 20:36:48.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:36:58.375" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:36:48.374" endtime="20200402 20:36:58.375"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:37:00.671" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:36:58.375" endtime="20200402 20:37:00.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:37:00.671" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:37:00.671" endtime="20200402 20:37:00.671"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:00.672" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:00.671" endtime="20200402 20:37:00.678"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:05.680" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:00.678" endtime="20200402 20:37:05.680"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:37:05.895" level="INFO">${Full_View_Count} = 22,133 views</msg>
<status status="PASS" starttime="20200402 20:37:05.681" endtime="20200402 20:37:05.895"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:37:05.896" level="INFO">${Full_View_Count} = 22,133 views</msg>
<status status="PASS" starttime="20200402 20:37:05.896" endtime="20200402 20:37:05.896"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:05.897" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='22,133 views' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:05.896" endtime="20200402 20:37:05.903"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:10.905" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:05.903" endtime="20200402 20:37:10.905"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:37:11.019" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:37:10.905" endtime="20200402 20:37:11.019"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:37:11.019" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:37:11.019" endtime="20200402 20:37:11.020"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:37:11.020" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4335' </msg>
<status status="PASS" starttime="20200402 20:37:11.020" endtime="20200402 20:37:11.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:16.027" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:11.026" endtime="20200402 20:37:16.027"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:37:16.087" level="INFO">${Total_Likes} = 753</msg>
<status status="PASS" starttime="20200402 20:37:16.027" endtime="20200402 20:37:16.087"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:37:16.088" level="INFO">${Total_Likes} = 753</msg>
<status status="PASS" starttime="20200402 20:37:16.087" endtime="20200402 20:37:16.088"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:16.088" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='753' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:16.088" endtime="20200402 20:37:16.095"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:21.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:16.095" endtime="20200402 20:37:21.096"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:37:21.203" level="INFO">${Total_Dis_Likes} = 49</msg>
<status status="PASS" starttime="20200402 20:37:21.096" endtime="20200402 20:37:21.204"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:37:21.204" level="INFO">${Total_Dis_Likes} = 49</msg>
<status status="PASS" starttime="20200402 20:37:21.204" endtime="20200402 20:37:21.204"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:21.205" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='49' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:21.204" endtime="20200402 20:37:21.211"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:26.212" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:21.211" endtime="20200402 20:37:26.212"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:37:26.255" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:37:26.212" endtime="20200402 20:37:26.255"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:37:26.255" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:37:26.255" endtime="20200402 20:37:26.256"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:26.256" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:26.256" endtime="20200402 20:37:26.262"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:37:31.262" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:26.262" endtime="20200402 20:37:31.262"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:37:31.292" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:37:31.262" endtime="20200402 20:37:31.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:37:31.293" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:37:31.292" endtime="20200402 20:37:31.293"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:31.293" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:31.293" endtime="20200402 20:37:31.300"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:37:31.300" endtime="20200402 20:37:33.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:37:48.257" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:37:33.256" endtime="20200402 20:37:48.257"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:37:48.258" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:37:48.257" endtime="20200402 20:37:48.410"></status>
</kw>
<status status="PASS" starttime="20200402 20:37:48.257" endtime="20200402 20:37:48.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:37:58.413" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:37:48.410" endtime="20200402 20:37:58.413"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:37:58.454" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:37:58.414" endtime="20200402 20:37:58.455"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:37:58.455" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:37:58.455" endtime="20200402 20:37:58.455"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:37:58.456" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:37:58.455" endtime="20200402 20:37:58.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:03.463" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:37:58.463" endtime="20200402 20:38:03.463"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:38:03.511" level="INFO">${Description} = Senate Majority Leader Mitch McConnell, R-Ky., said Speaker Pelosi should stand down on passing another rescue bill in House, according to new reporting. Kasie Hunt discusses. Aired on 4/2/2020.
» Sub...</msg>
<status status="PASS" starttime="20200402 20:38:03.463" endtime="20200402 20:38:03.511"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:38:03.512" level="INFO">${Description} = Senate Majority Leader Mitch McConnell, R-Ky., said Speaker Pelosi should stand down on passing another rescue bill in House, according to new reporting. Kasie Hunt discusses. Aired on 4/2/2020.
» Sub...</msg>
<status status="PASS" starttime="20200402 20:38:03.511" endtime="20200402 20:38:03.512"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:38:03.512" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Senate Majority Leader Mitch McConnell, R-Ky., said Speaker Pelosi should stand down on passing another rescue bill in House, according to new reporting. Kasie Hunt discusses. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Sen. Mitch McConnell Downplays Talk Of Fourth Relief Bill | Morning Joe | MSNBC' where id=4335 </msg>
<status status="PASS" starttime="20200402 20:38:03.512" endtime="20200402 20:38:03.519"></status>
</kw>
<status status="PASS" starttime="20200402 20:36:24.693" endtime="20200402 20:38:03.519"></status>
</kw>
<status status="PASS" starttime="20200402 20:36:24.693" endtime="20200402 20:38:03.519"></status>
</kw>
<status status="PASS" starttime="20200402 20:35:53.981" endtime="20200402 20:38:03.519"></status>
</kw>
<msg timestamp="20200402 20:38:03.519" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:35:53.981" endtime="20200402 20:38:03.519"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:38:03.520" level="INFO">${Count2} = 4</msg>
<status status="PASS" starttime="20200402 20:38:03.520" endtime="20200402 20:38:03.520"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:38:03.521" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:38:03.520" endtime="20200402 20:38:03.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:38:03.521" endtime="20200402 20:38:03.617"></status>
</kw>
<status status="PASS" starttime="20200402 20:38:03.521" endtime="20200402 20:38:03.617"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:38:03.617" endtime="20200402 20:38:03.624"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:08.624" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:03.624" endtime="20200402 20:38:08.624"></status>
</kw>
<status status="PASS" starttime="20200402 20:35:43.978" endtime="20200402 20:38:08.624"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;74707b99-859b-4574-a91a-6fa0fd4aecf7&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:38:18.627" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:38:08.624" endtime="20200402 20:38:18.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:38:18.627" endtime="20200402 20:38:18.628"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:23.630" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:18.629" endtime="20200402 20:38:23.630"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:38:23.662" level="INFO">${Title} = FULL MORNING JOE 6AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:38:23.630" endtime="20200402 20:38:23.662"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:38:23.663" level="INFO">${Title} = FULL MORNING JOE 6AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:38:23.662" endtime="20200402 20:38:23.663"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:38:23.663" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL MORNING JOE 6AM 4/2/2020 | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:38:23.663" endtime="20200402 20:38:23.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:28.670" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:23.670" endtime="20200402 20:38:28.670"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:38:28.670" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:38:28.672" level="INFO">${list} = ((4336,),)</msg>
<status status="PASS" starttime="20200402 20:38:28.670" endtime="20200402 20:38:28.672"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:38:28.672" endtime="20200402 20:38:28.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:38:28.673" level="INFO">${list} = [4336]</msg>
<status status="PASS" starttime="20200402 20:38:28.673" endtime="20200402 20:38:28.673"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:38:28.673" level="INFO">${Count3} = 4336</msg>
<status status="PASS" starttime="20200402 20:38:28.673" endtime="20200402 20:38:28.673"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:33.675" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:28.674" endtime="20200402 20:38:33.675"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:38:34.290" level="INFO">${Total_View} = 93 views</msg>
<status status="PASS" starttime="20200402 20:38:33.675" endtime="20200402 20:38:34.290"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:38:34.291" level="INFO">${Total_View} = 93 views</msg>
<status status="PASS" starttime="20200402 20:38:34.291" endtime="20200402 20:38:34.291"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:38:34.292" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '93 views' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:38:34.291" endtime="20200402 20:38:34.298"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:39.299" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:34.298" endtime="20200402 20:38:39.299"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:38:40.533" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:38:39.299" endtime="20200402 20:38:40.533"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:38:40.534" level="INFO">${Video_Rendered_Before} = 5 hours ago</msg>
<status status="PASS" starttime="20200402 20:38:40.534" endtime="20200402 20:38:40.534"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:38:40.535" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '5 hours ago' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:38:40.534" endtime="20200402 20:38:40.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:45.542" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:40.541" endtime="20200402 20:38:45.542"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:38:45.620" level="INFO">${Duration} = 40 minutes</msg>
<status status="PASS" starttime="20200402 20:38:45.543" endtime="20200402 20:38:45.620"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:38:45.621" level="INFO">${Duration} = 40 minutes</msg>
<status status="PASS" starttime="20200402 20:38:45.620" endtime="20200402 20:38:45.621"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:38:45.621" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '40 minutes' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:38:45.621" endtime="20200402 20:38:45.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:38:50.629" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:38:45.628" endtime="20200402 20:38:50.629"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:38:50.949" level="INFO">${URL} = https://www.youtube.com/watch?v=0lVvxP8MeqA</msg>
<status status="PASS" starttime="20200402 20:38:50.629" endtime="20200402 20:38:50.949"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:38:50.950" level="INFO">${URL} = https://www.youtube.com/watch?v=0lVvxP8MeqA</msg>
<status status="PASS" starttime="20200402 20:38:50.949" endtime="20200402 20:38:50.950"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:38:50.950" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=0lVvxP8MeqA' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:38:50.950" endtime="20200402 20:38:50.956"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:38:50.957" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:38:50.957" endtime="20200402 20:38:51.501"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:38:51.502" endtime="20200402 20:38:51.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:39:01.519" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:38:51.517" endtime="20200402 20:39:01.519"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:39:01.519" level="INFO">Opening url 'https://www.youtube.com/watch?v=0lVvxP8MeqA'</msg>
<status status="PASS" starttime="20200402 20:39:01.519" endtime="20200402 20:39:11.306"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:39:21.308" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:39:11.307" endtime="20200402 20:39:21.308"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:39:21.337" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:39:21.308" endtime="20200402 20:39:21.337"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:39:21.338" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:39:21.337" endtime="20200402 20:39:21.338"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:21.338" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:21.338" endtime="20200402 20:39:21.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:26.345" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:21.345" endtime="20200402 20:39:26.345"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:39:26.383" level="INFO">${Full_View_Count} = 130 views</msg>
<status status="PASS" starttime="20200402 20:39:26.345" endtime="20200402 20:39:26.383"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:39:26.384" level="INFO">${Full_View_Count} = 130 views</msg>
<status status="PASS" starttime="20200402 20:39:26.383" endtime="20200402 20:39:26.384"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:26.384" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='130 views' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:26.384" endtime="20200402 20:39:26.390"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:31.392" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:26.390" endtime="20200402 20:39:31.392"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:39:31.418" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:39:31.392" endtime="20200402 20:39:31.419"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:39:31.419" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:39:31.419" endtime="20200402 20:39:31.419"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:39:31.420" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4336' </msg>
<status status="PASS" starttime="20200402 20:39:31.419" endtime="20200402 20:39:31.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:36.426" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:31.425" endtime="20200402 20:39:36.426"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:39:39.149" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 20:39:36.426" endtime="20200402 20:39:39.149"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:39:39.150" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 20:39:39.150" endtime="20200402 20:39:39.150"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:39.150" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:39.150" endtime="20200402 20:39:39.157"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:44.159" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:39.158" endtime="20200402 20:39:44.159"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:39:44.466" level="INFO">${Total_Dis_Likes} = 3</msg>
<status status="PASS" starttime="20200402 20:39:44.159" endtime="20200402 20:39:44.466"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:39:44.467" level="INFO">${Total_Dis_Likes} = 3</msg>
<status status="PASS" starttime="20200402 20:39:44.466" endtime="20200402 20:39:44.467"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:44.467" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='3' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:44.467" endtime="20200402 20:39:44.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:49.475" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:44.473" endtime="20200402 20:39:49.475"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:39:49.513" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:39:49.475" endtime="20200402 20:39:49.513"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:39:49.514" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:39:49.513" endtime="20200402 20:39:49.514"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:49.514" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:49.514" endtime="20200402 20:39:49.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:39:54.523" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:39:49.521" endtime="20200402 20:39:54.523"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:39:54.689" level="INFO">${Channel_Name} = Aduslan Joi</msg>
<status status="PASS" starttime="20200402 20:39:54.523" endtime="20200402 20:39:54.689"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:39:54.690" level="INFO">${Channel_Name} = Aduslan Joi</msg>
<status status="PASS" starttime="20200402 20:39:54.689" endtime="20200402 20:39:54.690"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:39:54.690" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Aduslan Joi' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:39:54.690" endtime="20200402 20:39:54.696"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:39:54.696" endtime="20200402 20:39:56.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:40:11.857" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:39:56.856" endtime="20200402 20:40:11.857"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:40:11.858" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:40:11.858" endtime="20200402 20:40:12.315"></status>
</kw>
<status status="PASS" starttime="20200402 20:40:11.857" endtime="20200402 20:40:12.315"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:40:22.316" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:40:12.315" endtime="20200402 20:40:22.316"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:40:22.475" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:40:22.316" endtime="20200402 20:40:22.475"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:40:22.476" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:40:22.475" endtime="20200402 20:40:22.476"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:40:22.476" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:40:22.476" endtime="20200402 20:40:22.483"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:40:27.483" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:22.483" endtime="20200402 20:40:27.483"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:40:27.566" level="INFO">${Description} = FULL MORNING JOE 6AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:40:27.483" endtime="20200402 20:40:27.567"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:40:27.567" level="INFO">${Description} = FULL MORNING JOE 6AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 20:40:27.567" endtime="20200402 20:40:27.567"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:40:27.568" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL MORNING JOE 6AM 4/2/2020 | MSNBC' where id=4336 </msg>
<status status="PASS" starttime="20200402 20:40:27.567" endtime="20200402 20:40:27.573"></status>
</kw>
<status status="PASS" starttime="20200402 20:38:50.956" endtime="20200402 20:40:27.574"></status>
</kw>
<status status="PASS" starttime="20200402 20:38:50.956" endtime="20200402 20:40:27.574"></status>
</kw>
<status status="PASS" starttime="20200402 20:38:18.628" endtime="20200402 20:40:27.574"></status>
</kw>
<msg timestamp="20200402 20:40:27.574" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:38:18.628" endtime="20200402 20:40:27.574"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:40:27.574" level="INFO">${Count2} = 5</msg>
<status status="PASS" starttime="20200402 20:40:27.574" endtime="20200402 20:40:27.575"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:40:27.575" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:40:27.575" endtime="20200402 20:40:27.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:40:27.576" endtime="20200402 20:40:27.798"></status>
</kw>
<status status="PASS" starttime="20200402 20:40:27.575" endtime="20200402 20:40:27.798"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:40:27.798" endtime="20200402 20:40:27.870"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:40:32.870" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:27.870" endtime="20200402 20:40:32.870"></status>
</kw>
<status status="PASS" starttime="20200402 20:38:08.624" endtime="20200402 20:40:32.870"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;b76bf646-25be-44cb-a04b-38c467698c22&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:40:42.872" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:40:32.870" endtime="20200402 20:40:42.872"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:40:42.872" endtime="20200402 20:40:42.873"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:40:47.876" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:42.874" endtime="20200402 20:40:47.876"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:40:47.965" level="INFO">${Title} = Sen. Chuck Schumer Calls For 'Military Czar' To Handle Supplies | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:40:47.876" endtime="20200402 20:40:47.965"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:40:47.965" level="INFO">${Title} = Sen. Chuck Schumer Calls For ''Military Czar'' To Handle Supplies | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:40:47.965" endtime="20200402 20:40:47.965"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:40:47.966" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Sen. Chuck Schumer Calls For ''Military Czar'' To Handle Supplies | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:40:47.966" endtime="20200402 20:40:47.972"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:40:52.973" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:47.972" endtime="20200402 20:40:52.973"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:40:52.973" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:40:52.975" level="INFO">${list} = ((4337,),)</msg>
<status status="PASS" starttime="20200402 20:40:52.973" endtime="20200402 20:40:52.975"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:40:52.975" endtime="20200402 20:40:52.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:40:52.976" level="INFO">${list} = [4337]</msg>
<status status="PASS" starttime="20200402 20:40:52.975" endtime="20200402 20:40:52.976"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:40:52.976" level="INFO">${Count3} = 4337</msg>
<status status="PASS" starttime="20200402 20:40:52.976" endtime="20200402 20:40:52.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:40:57.977" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:52.977" endtime="20200402 20:40:57.977"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:40:58.010" level="INFO">${Total_View} = 15K views</msg>
<status status="PASS" starttime="20200402 20:40:57.977" endtime="20200402 20:40:58.010"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:40:58.010" level="INFO">${Total_View} = 15K views</msg>
<status status="PASS" starttime="20200402 20:40:58.010" endtime="20200402 20:40:58.010"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:40:58.011" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '15K views' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:40:58.010" endtime="20200402 20:40:58.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:41:03.018" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:40:58.016" endtime="20200402 20:41:03.018"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:41:03.083" level="INFO">${Video_Rendered_Before} = 6 hours ago</msg>
<status status="PASS" starttime="20200402 20:41:03.018" endtime="20200402 20:41:03.083"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:41:03.084" level="INFO">${Video_Rendered_Before} = 6 hours ago</msg>
<status status="PASS" starttime="20200402 20:41:03.083" endtime="20200402 20:41:03.084"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:41:03.084" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '6 hours ago' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:41:03.084" endtime="20200402 20:41:03.090"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:41:08.092" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:41:03.091" endtime="20200402 20:41:08.092"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:41:08.119" level="INFO">${Duration} = 13 minutes, 12 seconds</msg>
<status status="PASS" starttime="20200402 20:41:08.092" endtime="20200402 20:41:08.119"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:41:08.119" level="INFO">${Duration} = 13 minutes, 12 seconds</msg>
<status status="PASS" starttime="20200402 20:41:08.119" endtime="20200402 20:41:08.119"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:41:08.120" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '13 minutes, 12 seconds' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:41:08.119" endtime="20200402 20:41:08.127"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:41:13.128" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:41:08.127" endtime="20200402 20:41:13.128"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:41:13.151" level="INFO">${URL} = https://www.youtube.com/watch?v=s-7DC-5qiSw</msg>
<status status="PASS" starttime="20200402 20:41:13.128" endtime="20200402 20:41:13.151"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:41:13.151" level="INFO">${URL} = https://www.youtube.com/watch?v=s-7DC-5qiSw</msg>
<status status="PASS" starttime="20200402 20:41:13.151" endtime="20200402 20:41:13.151"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:41:13.152" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=s-7DC-5qiSw' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:41:13.152" endtime="20200402 20:41:13.159"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:41:13.160" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:41:13.160" endtime="20200402 20:41:13.674"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:41:13.674" endtime="20200402 20:41:13.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:41:23.683" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:41:13.681" endtime="20200402 20:41:23.683"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:41:23.683" level="INFO">Opening url 'https://www.youtube.com/watch?v=s-7DC-5qiSw'</msg>
<status status="PASS" starttime="20200402 20:41:23.683" endtime="20200402 20:41:32.747"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:41:42.747" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:41:32.747" endtime="20200402 20:41:42.747"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:41:42.780" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:41:42.747" endtime="20200402 20:41:42.780"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:41:42.781" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:41:42.780" endtime="20200402 20:41:42.781"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:41:42.781" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:41:42.781" endtime="20200402 20:41:42.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:41:47.788" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:41:42.788" endtime="20200402 20:41:47.788"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:41:51.001" level="INFO">${Full_View_Count} = 58,920 views</msg>
<status status="PASS" starttime="20200402 20:41:47.788" endtime="20200402 20:41:51.002"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:41:51.003" level="INFO">${Full_View_Count} = 58,920 views</msg>
<status status="PASS" starttime="20200402 20:41:51.002" endtime="20200402 20:41:51.003"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:41:51.003" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='58,920 views' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:41:51.003" endtime="20200402 20:41:51.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:41:56.011" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:41:51.009" endtime="20200402 20:41:56.011"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:41:56.044" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:41:56.011" endtime="20200402 20:41:56.044"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:41:56.045" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:41:56.045" endtime="20200402 20:41:56.045"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:41:56.046" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4337' </msg>
<status status="PASS" starttime="20200402 20:41:56.045" endtime="20200402 20:41:56.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:42:01.057" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:41:56.055" endtime="20200402 20:42:01.057"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:42:01.094" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 20:42:01.057" endtime="20200402 20:42:01.094"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:42:01.094" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 20:42:01.094" endtime="20200402 20:42:01.094"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:01.095" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2.4K' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:01.095" endtime="20200402 20:42:01.101"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:42:06.103" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:42:01.101" endtime="20200402 20:42:06.103"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:42:08.776" level="INFO">${Total_Dis_Likes} = 163</msg>
<status status="PASS" starttime="20200402 20:42:06.103" endtime="20200402 20:42:08.776"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:42:08.777" level="INFO">${Total_Dis_Likes} = 163</msg>
<status status="PASS" starttime="20200402 20:42:08.777" endtime="20200402 20:42:08.777"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:08.777" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='163' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:08.777" endtime="20200402 20:42:08.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:42:13.786" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:42:08.784" endtime="20200402 20:42:13.786"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:42:13.824" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:42:13.786" endtime="20200402 20:42:13.824"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:42:13.824" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:42:13.824" endtime="20200402 20:42:13.824"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:13.825" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:13.824" endtime="20200402 20:42:13.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:42:18.832" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:42:13.831" endtime="20200402 20:42:18.832"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:42:18.961" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:42:18.832" endtime="20200402 20:42:18.961"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:42:18.962" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:42:18.961" endtime="20200402 20:42:18.962"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:18.962" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:18.962" endtime="20200402 20:42:18.968"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:42:18.968" endtime="20200402 20:42:24.965"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:42:39.967" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:42:24.965" endtime="20200402 20:42:39.967"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:42:39.968" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:42:39.968" endtime="20200402 20:42:40.175"></status>
</kw>
<status status="PASS" starttime="20200402 20:42:39.967" endtime="20200402 20:42:40.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:42:50.179" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:42:40.175" endtime="20200402 20:42:50.179"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:42:51.178" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:42:50.180" endtime="20200402 20:42:51.178"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:42:51.179" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:42:51.178" endtime="20200402 20:42:51.179"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:51.179" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:51.179" endtime="20200402 20:42:51.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:42:56.187" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:42:51.186" endtime="20200402 20:42:56.187"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:42:56.407" level="INFO">${Description} = Sen. Chuck Schumer, D-NY, calls on the WH to implement a member of the military to be put in charge of production and distribution of materials needed to combat the coronavirus. Sen. Schumer also disc...</msg>
<status status="PASS" starttime="20200402 20:42:56.187" endtime="20200402 20:42:56.407"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:42:56.408" level="INFO">${Description} = Sen. Chuck Schumer, D-NY, calls on the WH to implement a member of the military to be put in charge of production and distribution of materials needed to combat the coronavirus. Sen. Schumer also disc...</msg>
<status status="PASS" starttime="20200402 20:42:56.408" endtime="20200402 20:42:56.408"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:42:56.409" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Sen. Chuck Schumer, D-NY, calls on the WH to implement a member of the military to be put in charge of production and distribution of materials needed to combat the coronavirus. Sen. Schumer also discusses talking with the president. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Sen. Chuck Schumer Calls For ''Military Czar'' To Handle Supplies | Morning Joe | MSNBC' where id=4337 </msg>
<status status="PASS" starttime="20200402 20:42:56.408" endtime="20200402 20:42:56.415"></status>
</kw>
<status status="PASS" starttime="20200402 20:41:13.159" endtime="20200402 20:42:56.416"></status>
</kw>
<status status="PASS" starttime="20200402 20:41:13.159" endtime="20200402 20:42:56.416"></status>
</kw>
<status status="PASS" starttime="20200402 20:40:42.873" endtime="20200402 20:42:56.416"></status>
</kw>
<msg timestamp="20200402 20:42:56.416" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:40:42.873" endtime="20200402 20:42:56.416"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:42:56.417" level="INFO">${Count2} = 6</msg>
<status status="PASS" starttime="20200402 20:42:56.417" endtime="20200402 20:42:56.417"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:42:56.417" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:42:56.417" endtime="20200402 20:42:56.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:42:56.418" endtime="20200402 20:42:56.747"></status>
</kw>
<status status="PASS" starttime="20200402 20:42:56.418" endtime="20200402 20:42:56.747"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:42:56.748" endtime="20200402 20:42:56.775"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:01.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:42:56.775" endtime="20200402 20:43:01.776"></status>
</kw>
<status status="PASS" starttime="20200402 20:40:32.870" endtime="20200402 20:43:01.776"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;1ce8aea8-7298-4512-854d-72981f3e6fea&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:43:11.777" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:43:01.776" endtime="20200402 20:43:11.777"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:43:11.777" endtime="20200402 20:43:11.778"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:16.779" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:11.779" endtime="20200402 20:43:16.779"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:43:16.843" level="INFO">${Title} = Dr. Fauci Now Needs Security Detail After Threats | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:43:16.779" endtime="20200402 20:43:16.843"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:43:16.844" level="INFO">${Title} = Dr. Fauci Now Needs Security Detail After Threats | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:43:16.843" endtime="20200402 20:43:16.844"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:43:16.844" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Dr. Fauci Now Needs Security Detail After Threats | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:43:16.844" endtime="20200402 20:43:16.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:21.852" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:16.850" endtime="20200402 20:43:21.852"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:43:21.852" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:43:21.854" level="INFO">${list} = ((4338,),)</msg>
<status status="PASS" starttime="20200402 20:43:21.852" endtime="20200402 20:43:21.854"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:43:21.854" endtime="20200402 20:43:21.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:43:21.855" level="INFO">${list} = [4338]</msg>
<status status="PASS" starttime="20200402 20:43:21.855" endtime="20200402 20:43:21.855"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:43:21.856" level="INFO">${Count3} = 4338</msg>
<status status="PASS" starttime="20200402 20:43:21.855" endtime="20200402 20:43:21.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:26.857" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:21.856" endtime="20200402 20:43:26.857"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:43:26.895" level="INFO">${Total_View} = 35K views</msg>
<status status="PASS" starttime="20200402 20:43:26.857" endtime="20200402 20:43:26.895"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:43:26.896" level="INFO">${Total_View} = 35K views</msg>
<status status="PASS" starttime="20200402 20:43:26.895" endtime="20200402 20:43:26.896"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:43:26.896" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '35K views' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:43:26.896" endtime="20200402 20:43:26.903"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:31.904" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:26.903" endtime="20200402 20:43:31.904"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:43:31.937" level="INFO">${Video_Rendered_Before} = 6 hours ago</msg>
<status status="PASS" starttime="20200402 20:43:31.904" endtime="20200402 20:43:31.937"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:43:31.938" level="INFO">${Video_Rendered_Before} = 6 hours ago</msg>
<status status="PASS" starttime="20200402 20:43:31.937" endtime="20200402 20:43:31.938"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:43:31.938" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '6 hours ago' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:43:31.938" endtime="20200402 20:43:31.944"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:36.944" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:31.944" endtime="20200402 20:43:36.944"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:43:36.975" level="INFO">${Duration} = 1 minute, 52 seconds</msg>
<status status="PASS" starttime="20200402 20:43:36.944" endtime="20200402 20:43:36.975"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:43:36.976" level="INFO">${Duration} = 1 minute, 52 seconds</msg>
<status status="PASS" starttime="20200402 20:43:36.975" endtime="20200402 20:43:36.976"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:43:36.976" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '1 minute, 52 seconds' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:43:36.976" endtime="20200402 20:43:36.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:43:41.985" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:43:36.984" endtime="20200402 20:43:41.985"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:43:42.036" level="INFO">${URL} = https://www.youtube.com/watch?v=n4HAWK0hH78</msg>
<status status="PASS" starttime="20200402 20:43:41.985" endtime="20200402 20:43:42.036"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:43:42.037" level="INFO">${URL} = https://www.youtube.com/watch?v=n4HAWK0hH78</msg>
<status status="PASS" starttime="20200402 20:43:42.037" endtime="20200402 20:43:42.037"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:43:42.038" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=n4HAWK0hH78' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:43:42.037" endtime="20200402 20:43:42.044"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:43:42.046" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:43:42.045" endtime="20200402 20:43:42.483"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:43:42.483" endtime="20200402 20:43:42.490"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:43:52.492" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:43:42.491" endtime="20200402 20:43:52.492"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:43:52.493" level="INFO">Opening url 'https://www.youtube.com/watch?v=n4HAWK0hH78'</msg>
<status status="PASS" starttime="20200402 20:43:52.492" endtime="20200402 20:43:56.957"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:44:06.959" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:43:56.957" endtime="20200402 20:44:06.959"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:44:08.413" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:44:06.959" endtime="20200402 20:44:08.413"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:44:08.414" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:44:08.413" endtime="20200402 20:44:08.414"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:08.414" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:08.414" endtime="20200402 20:44:08.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:13.422" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:08.420" endtime="20200402 20:44:13.422"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:44:14.987" level="INFO">${Full_View_Count} = 51,548 views</msg>
<status status="PASS" starttime="20200402 20:44:13.422" endtime="20200402 20:44:14.987"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:44:14.988" level="INFO">${Full_View_Count} = 51,548 views</msg>
<status status="PASS" starttime="20200402 20:44:14.988" endtime="20200402 20:44:14.988"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:14.988" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='51,548 views' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:14.988" endtime="20200402 20:44:14.995"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:19.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:14.995" endtime="20200402 20:44:19.996"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:44:20.058" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:44:19.996" endtime="20200402 20:44:20.058"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:44:20.059" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:44:20.058" endtime="20200402 20:44:20.059"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:44:20.059" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4338' </msg>
<status status="PASS" starttime="20200402 20:44:20.059" endtime="20200402 20:44:20.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:25.067" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:20.066" endtime="20200402 20:44:25.067"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:44:25.170" level="INFO">${Total_Likes} = 908</msg>
<status status="PASS" starttime="20200402 20:44:25.067" endtime="20200402 20:44:25.170"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:44:25.170" level="INFO">${Total_Likes} = 908</msg>
<status status="PASS" starttime="20200402 20:44:25.170" endtime="20200402 20:44:25.170"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:25.171" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='908' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:25.171" endtime="20200402 20:44:25.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:30.178" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:25.177" endtime="20200402 20:44:30.178"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:44:30.225" level="INFO">${Total_Dis_Likes} = 76</msg>
<status status="PASS" starttime="20200402 20:44:30.178" endtime="20200402 20:44:30.225"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:44:30.226" level="INFO">${Total_Dis_Likes} = 76</msg>
<status status="PASS" starttime="20200402 20:44:30.225" endtime="20200402 20:44:30.226"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:30.226" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='76' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:30.226" endtime="20200402 20:44:30.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:35.234" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:30.233" endtime="20200402 20:44:35.234"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:44:35.266" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:44:35.234" endtime="20200402 20:44:35.266"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:44:35.267" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:44:35.266" endtime="20200402 20:44:35.267"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:35.267" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:35.267" endtime="20200402 20:44:35.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:44:40.273" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:44:35.273" endtime="20200402 20:44:40.273"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:44:40.422" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:44:40.273" endtime="20200402 20:44:40.422"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:44:40.423" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:44:40.423" endtime="20200402 20:44:40.423"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:44:40.423" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:44:40.423" endtime="20200402 20:44:40.430"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:44:40.430" endtime="20200402 20:44:42.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:44:57.112" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:44:42.111" endtime="20200402 20:44:57.112"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:44:57.113" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:44:57.113" endtime="20200402 20:44:57.239"></status>
</kw>
<status status="PASS" starttime="20200402 20:44:57.112" endtime="20200402 20:44:57.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:45:07.241" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:44:57.239" endtime="20200402 20:45:07.241"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:45:07.284" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:45:07.241" endtime="20200402 20:45:07.284"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:45:07.284" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:45:07.284" endtime="20200402 20:45:07.284"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:07.285" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:45:07.285" endtime="20200402 20:45:07.292"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:12.293" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:07.293" endtime="20200402 20:45:12.293"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:45:12.345" level="INFO">${Description} = Dr. Anthony Fauci, the government's top infectious disease doctor, now needs security details after receiving death threats for being the public face of coronavirus response. Aired on 4/2/2020.
» Subs...</msg>
<status status="PASS" starttime="20200402 20:45:12.293" endtime="20200402 20:45:12.345"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:45:12.346" level="INFO">${Description} = Dr. Anthony Fauci, the government''s top infectious disease doctor, now needs security details after receiving death threats for being the public face of coronavirus response. Aired on 4/2/2020.
» Sub...</msg>
<status status="PASS" starttime="20200402 20:45:12.346" endtime="20200402 20:45:12.346"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:12.347" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Dr. Anthony Fauci, the government''s top infectious disease doctor, now needs security details after receiving death threats for being the public face of coronavirus response. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Dr. Fauci Now Needs Security Detail After Threats | Morning Joe | MSNBC' where id=4338 </msg>
<status status="PASS" starttime="20200402 20:45:12.346" endtime="20200402 20:45:12.354"></status>
</kw>
<status status="PASS" starttime="20200402 20:43:42.045" endtime="20200402 20:45:12.354"></status>
</kw>
<status status="PASS" starttime="20200402 20:43:42.044" endtime="20200402 20:45:12.354"></status>
</kw>
<status status="PASS" starttime="20200402 20:43:11.778" endtime="20200402 20:45:12.354"></status>
</kw>
<msg timestamp="20200402 20:45:12.355" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:43:11.778" endtime="20200402 20:45:12.355"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:45:12.355" level="INFO">${Count2} = 7</msg>
<status status="PASS" starttime="20200402 20:45:12.355" endtime="20200402 20:45:12.355"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:45:12.356" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:45:12.355" endtime="20200402 20:45:12.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:45:12.356" endtime="20200402 20:45:12.470"></status>
</kw>
<status status="PASS" starttime="20200402 20:45:12.356" endtime="20200402 20:45:12.470"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:45:12.470" endtime="20200402 20:45:12.476"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:17.478" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:12.476" endtime="20200402 20:45:17.478"></status>
</kw>
<status status="PASS" starttime="20200402 20:43:01.776" endtime="20200402 20:45:17.478"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;ed0f9656-67e3-4682-86eb-8abef2a6a42f&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:45:27.479" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:45:17.478" endtime="20200402 20:45:27.479"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:45:27.479" endtime="20200402 20:45:27.479"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:32.482" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:27.480" endtime="20200402 20:45:32.482"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:45:32.515" level="INFO">${Title} = 'It Was Incredible': Reporter Discusses Reuniting With Son | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:45:32.482" endtime="20200402 20:45:32.515"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:45:32.516" level="INFO">${Title} = ''It Was Incredible'': Reporter Discusses Reuniting With Son | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:45:32.515" endtime="20200402 20:45:32.516"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:45:32.516" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('''It Was Incredible'': Reporter Discusses Reuniting With Son | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:45:32.516" endtime="20200402 20:45:32.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:37.523" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:32.523" endtime="20200402 20:45:37.523"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:45:37.523" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:45:37.525" level="INFO">${list} = ((4339,),)</msg>
<status status="PASS" starttime="20200402 20:45:37.523" endtime="20200402 20:45:37.525"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:45:37.525" endtime="20200402 20:45:37.525"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:45:37.526" level="INFO">${list} = [4339]</msg>
<status status="PASS" starttime="20200402 20:45:37.525" endtime="20200402 20:45:37.526"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:45:37.527" level="INFO">${Count3} = 4339</msg>
<status status="PASS" starttime="20200402 20:45:37.526" endtime="20200402 20:45:37.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:42.528" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:37.527" endtime="20200402 20:45:42.528"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:45:43.457" level="INFO">${Total_View} = 3.6K views</msg>
<status status="PASS" starttime="20200402 20:45:42.528" endtime="20200402 20:45:43.457"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:45:43.458" level="INFO">${Total_View} = 3.6K views</msg>
<status status="PASS" starttime="20200402 20:45:43.457" endtime="20200402 20:45:43.458"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:43.458" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '3.6K views' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:45:43.458" endtime="20200402 20:45:43.465"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:48.466" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:43.465" endtime="20200402 20:45:48.466"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:45:48.533" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:45:48.466" endtime="20200402 20:45:48.533"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:45:48.534" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:45:48.533" endtime="20200402 20:45:48.534"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:48.534" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '7 hours ago' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:45:48.534" endtime="20200402 20:45:48.541"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:53.541" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:48.541" endtime="20200402 20:45:53.541"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:45:53.574" level="INFO">${Duration} = 7 minutes, 14 seconds</msg>
<status status="PASS" starttime="20200402 20:45:53.541" endtime="20200402 20:45:53.574"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:45:53.575" level="INFO">${Duration} = 7 minutes, 14 seconds</msg>
<status status="PASS" starttime="20200402 20:45:53.574" endtime="20200402 20:45:53.575"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:53.576" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '7 minutes, 14 seconds' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:45:53.575" endtime="20200402 20:45:53.582"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:45:58.583" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:45:53.582" endtime="20200402 20:45:58.583"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:45:58.636" level="INFO">${URL} = https://www.youtube.com/watch?v=OZ81ytDLZDQ</msg>
<status status="PASS" starttime="20200402 20:45:58.583" endtime="20200402 20:45:58.636"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:45:58.636" level="INFO">${URL} = https://www.youtube.com/watch?v=OZ81ytDLZDQ</msg>
<status status="PASS" starttime="20200402 20:45:58.636" endtime="20200402 20:45:58.636"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:45:58.637" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=OZ81ytDLZDQ' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:45:58.637" endtime="20200402 20:45:58.643"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:45:58.645" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:45:58.644" endtime="20200402 20:45:59.190"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:45:59.190" endtime="20200402 20:45:59.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:46:09.200" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:45:59.200" endtime="20200402 20:46:09.200"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:46:09.200" level="INFO">Opening url 'https://www.youtube.com/watch?v=OZ81ytDLZDQ'</msg>
<status status="PASS" starttime="20200402 20:46:09.200" endtime="20200402 20:46:12.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:46:22.681" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:46:12.680" endtime="20200402 20:46:22.681"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:46:22.712" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:46:22.681" endtime="20200402 20:46:22.712"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:46:22.712" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:46:22.712" endtime="20200402 20:46:22.713"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:22.713" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:22.713" endtime="20200402 20:46:22.719"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:27.721" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:22.720" endtime="20200402 20:46:27.721"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:46:27.750" level="INFO">${Full_View_Count} = 42,041 views</msg>
<status status="PASS" starttime="20200402 20:46:27.721" endtime="20200402 20:46:27.750"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:46:27.751" level="INFO">${Full_View_Count} = 42,041 views</msg>
<status status="PASS" starttime="20200402 20:46:27.750" endtime="20200402 20:46:27.751"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:27.751" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='42,041 views' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:27.751" endtime="20200402 20:46:27.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:32.758" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:27.757" endtime="20200402 20:46:32.758"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:46:32.787" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:46:32.758" endtime="20200402 20:46:32.787"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:46:32.788" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:46:32.788" endtime="20200402 20:46:32.788"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:46:32.788" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4339' </msg>
<status status="PASS" starttime="20200402 20:46:32.788" endtime="20200402 20:46:32.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:37.797" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:32.796" endtime="20200402 20:46:37.797"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:46:37.828" level="INFO">${Total_Likes} = 606</msg>
<status status="PASS" starttime="20200402 20:46:37.797" endtime="20200402 20:46:37.828"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:46:37.829" level="INFO">${Total_Likes} = 606</msg>
<status status="PASS" starttime="20200402 20:46:37.828" endtime="20200402 20:46:37.829"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:37.829" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='606' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:37.829" endtime="20200402 20:46:37.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:42.836" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:37.835" endtime="20200402 20:46:42.836"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:46:42.867" level="INFO">${Total_Dis_Likes} = 40</msg>
<status status="PASS" starttime="20200402 20:46:42.836" endtime="20200402 20:46:42.867"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:46:42.868" level="INFO">${Total_Dis_Likes} = 40</msg>
<status status="PASS" starttime="20200402 20:46:42.867" endtime="20200402 20:46:42.868"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:42.868" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='40' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:42.868" endtime="20200402 20:46:42.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:47.876" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:42.875" endtime="20200402 20:46:47.876"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:46:47.913" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:46:47.876" endtime="20200402 20:46:47.913"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:46:47.913" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:46:47.913" endtime="20200402 20:46:47.913"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:47.914" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:47.914" endtime="20200402 20:46:47.921"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:46:52.922" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:46:47.921" endtime="20200402 20:46:52.922"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:46:52.964" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:46:52.922" endtime="20200402 20:46:52.964"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:46:52.965" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:46:52.964" endtime="20200402 20:46:52.965"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:46:52.966" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:46:52.965" endtime="20200402 20:46:52.972"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:46:52.972" endtime="20200402 20:46:54.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:47:09.574" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:46:54.573" endtime="20200402 20:47:09.574"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:47:09.575" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:47:09.575" endtime="20200402 20:47:09.736"></status>
</kw>
<status status="PASS" starttime="20200402 20:47:09.574" endtime="20200402 20:47:09.736"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:47:19.737" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:47:09.736" endtime="20200402 20:47:19.737"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:47:19.769" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:47:19.737" endtime="20200402 20:47:19.769"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:47:19.769" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:47:19.769" endtime="20200402 20:47:19.769"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:47:19.770" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:47:19.770" endtime="20200402 20:47:19.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:47:24.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:19.776" endtime="20200402 20:47:24.776"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:47:24.991" level="INFO">${Description} = Reporter Janis Mackey Frayer discusses the now-infamous video of reuniting with her son after spending 49 days covering the coronavirus. Frayer also discusses spending time in quarantine and the lates...</msg>
<status status="PASS" starttime="20200402 20:47:24.776" endtime="20200402 20:47:24.991"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:47:24.991" level="INFO">${Description} = Reporter Janis Mackey Frayer discusses the now-infamous video of reuniting with her son after spending 49 days covering the coronavirus. Frayer also discusses spending time in quarantine and the lates...</msg>
<status status="PASS" starttime="20200402 20:47:24.991" endtime="20200402 20:47:24.992"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:47:24.992" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Reporter Janis Mackey Frayer discusses the now-infamous video of reuniting with her son after spending 49 days covering the coronavirus. Frayer also discusses spending time in quarantine and the latest details in China. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

''It Was Incredible'': Reporter Discusses Reuniting With Son | Morning Joe | MSNBC' where id=4339 </msg>
<status status="PASS" starttime="20200402 20:47:24.992" endtime="20200402 20:47:24.998"></status>
</kw>
<status status="PASS" starttime="20200402 20:45:58.643" endtime="20200402 20:47:24.998"></status>
</kw>
<status status="PASS" starttime="20200402 20:45:58.643" endtime="20200402 20:47:24.998"></status>
</kw>
<status status="PASS" starttime="20200402 20:45:27.480" endtime="20200402 20:47:24.998"></status>
</kw>
<msg timestamp="20200402 20:47:24.998" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:45:27.480" endtime="20200402 20:47:24.998"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:47:24.999" level="INFO">${Count2} = 8</msg>
<status status="PASS" starttime="20200402 20:47:24.999" endtime="20200402 20:47:24.999"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:47:24.999" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:47:24.999" endtime="20200402 20:47:24.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:47:25.000" endtime="20200402 20:47:25.154"></status>
</kw>
<status status="PASS" starttime="20200402 20:47:25.000" endtime="20200402 20:47:25.154"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:47:25.155" endtime="20200402 20:47:25.165"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:47:30.166" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:25.165" endtime="20200402 20:47:30.166"></status>
</kw>
<status status="PASS" starttime="20200402 20:45:17.478" endtime="20200402 20:47:30.166"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;fa991ec2-2ad0-401c-9e77-636a1949d2b5&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:47:40.168" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:47:30.166" endtime="20200402 20:47:40.168"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:47:40.168" endtime="20200402 20:47:40.169"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:47:45.171" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:40.170" endtime="20200402 20:47:45.171"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:47:45.204" level="INFO">${Title} = Record 6.6 Million Americans Seeking Unemployment Benefits | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:47:45.171" endtime="20200402 20:47:45.204"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:47:45.205" level="INFO">${Title} = Record 6.6 Million Americans Seeking Unemployment Benefits | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:47:45.205" endtime="20200402 20:47:45.205"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:47:45.206" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Record 6.6 Million Americans Seeking Unemployment Benefits | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:47:45.206" endtime="20200402 20:47:45.213"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:47:50.214" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:45.213" endtime="20200402 20:47:50.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:47:50.214" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:47:50.216" level="INFO">${list} = ((4340,),)</msg>
<status status="PASS" starttime="20200402 20:47:50.214" endtime="20200402 20:47:50.216"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:47:50.216" endtime="20200402 20:47:50.216"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:47:50.217" level="INFO">${list} = [4340]</msg>
<status status="PASS" starttime="20200402 20:47:50.217" endtime="20200402 20:47:50.217"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:47:50.217" level="INFO">${Count3} = 4340</msg>
<status status="PASS" starttime="20200402 20:47:50.217" endtime="20200402 20:47:50.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:47:55.219" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:50.218" endtime="20200402 20:47:55.219"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:47:55.250" level="INFO">${Total_View} = 1.6K views</msg>
<status status="PASS" starttime="20200402 20:47:55.219" endtime="20200402 20:47:55.250"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:47:55.251" level="INFO">${Total_View} = 1.6K views</msg>
<status status="PASS" starttime="20200402 20:47:55.250" endtime="20200402 20:47:55.251"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:47:55.251" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.6K views' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:47:55.251" endtime="20200402 20:47:55.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:00.259" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:47:55.258" endtime="20200402 20:48:00.259"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:48:00.307" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:48:00.259" endtime="20200402 20:48:00.307"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:48:00.308" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:48:00.307" endtime="20200402 20:48:00.308"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:00.308" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '7 hours ago' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:00.308" endtime="20200402 20:48:00.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:05.315" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:00.314" endtime="20200402 20:48:05.315"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:48:05.335" level="INFO">${Duration} = 1 minute, 28 seconds</msg>
<status status="PASS" starttime="20200402 20:48:05.315" endtime="20200402 20:48:05.335"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:48:05.336" level="INFO">${Duration} = 1 minute, 28 seconds</msg>
<status status="PASS" starttime="20200402 20:48:05.335" endtime="20200402 20:48:05.336"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:05.336" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '1 minute, 28 seconds' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:05.336" endtime="20200402 20:48:05.343"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:10.345" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:05.344" endtime="20200402 20:48:10.345"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:48:10.364" level="INFO">${URL} = https://www.youtube.com/watch?v=91o-bJ_jlK4</msg>
<status status="PASS" starttime="20200402 20:48:10.345" endtime="20200402 20:48:10.364"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:48:10.365" level="INFO">${URL} = https://www.youtube.com/watch?v=91o-bJ_jlK4</msg>
<status status="PASS" starttime="20200402 20:48:10.364" endtime="20200402 20:48:10.365"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:10.365" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=91o-bJ_jlK4' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:10.365" endtime="20200402 20:48:10.371"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:48:10.373" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:48:10.372" endtime="20200402 20:48:10.816"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:48:10.816" endtime="20200402 20:48:10.840"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:48:20.843" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:48:10.841" endtime="20200402 20:48:20.843"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:48:20.843" level="INFO">Opening url 'https://www.youtube.com/watch?v=91o-bJ_jlK4'</msg>
<status status="PASS" starttime="20200402 20:48:20.843" endtime="20200402 20:48:26.330"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:48:36.332" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:48:26.330" endtime="20200402 20:48:36.332"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:48:36.385" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:48:36.332" endtime="20200402 20:48:36.385"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:48:36.386" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:48:36.385" endtime="20200402 20:48:36.386"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:36.386" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:36.386" endtime="20200402 20:48:36.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:41.395" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:36.394" endtime="20200402 20:48:41.395"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:48:41.426" level="INFO">${Full_View_Count} = 26,417 views</msg>
<status status="PASS" starttime="20200402 20:48:41.395" endtime="20200402 20:48:41.426"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:48:41.426" level="INFO">${Full_View_Count} = 26,417 views</msg>
<status status="PASS" starttime="20200402 20:48:41.426" endtime="20200402 20:48:41.426"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:41.427" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='26,417 views' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:41.427" endtime="20200402 20:48:41.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:46.434" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:41.433" endtime="20200402 20:48:46.434"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:48:46.459" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:48:46.434" endtime="20200402 20:48:46.459"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:48:46.460" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:48:46.459" endtime="20200402 20:48:46.460"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:48:46.460" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4340' </msg>
<status status="PASS" starttime="20200402 20:48:46.460" endtime="20200402 20:48:46.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:51.467" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:46.467" endtime="20200402 20:48:51.467"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:48:51.500" level="INFO">${Total_Likes} = 287</msg>
<status status="PASS" starttime="20200402 20:48:51.467" endtime="20200402 20:48:51.500"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:48:51.501" level="INFO">${Total_Likes} = 287</msg>
<status status="PASS" starttime="20200402 20:48:51.501" endtime="20200402 20:48:51.501"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:51.502" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='287' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:51.501" endtime="20200402 20:48:51.509"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:48:56.510" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:51.509" endtime="20200402 20:48:56.510"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:48:56.541" level="INFO">${Total_Dis_Likes} = 27</msg>
<status status="PASS" starttime="20200402 20:48:56.510" endtime="20200402 20:48:56.541"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:48:56.542" level="INFO">${Total_Dis_Likes} = 27</msg>
<status status="PASS" starttime="20200402 20:48:56.542" endtime="20200402 20:48:56.542"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:48:56.542" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='27' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:48:56.542" endtime="20200402 20:48:56.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:49:01.550" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:48:56.549" endtime="20200402 20:49:01.550"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:49:01.579" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:49:01.550" endtime="20200402 20:49:01.579"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:49:01.579" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:49:01.579" endtime="20200402 20:49:01.579"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:49:01.580" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:49:01.580" endtime="20200402 20:49:01.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:49:06.588" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:49:01.587" endtime="20200402 20:49:06.588"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:49:06.627" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:49:06.588" endtime="20200402 20:49:06.627"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:49:06.627" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:49:06.627" endtime="20200402 20:49:06.627"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:49:06.628" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:49:06.627" endtime="20200402 20:49:06.634"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:49:06.634" endtime="20200402 20:49:08.315"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:49:23.316" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:49:08.315" endtime="20200402 20:49:23.316"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:49:23.317" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:49:23.317" endtime="20200402 20:49:23.598"></status>
</kw>
<status status="PASS" starttime="20200402 20:49:23.316" endtime="20200402 20:49:23.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:49:33.600" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:49:23.598" endtime="20200402 20:49:33.600"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:49:33.982" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:49:33.600" endtime="20200402 20:49:33.982"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:49:33.983" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:49:33.982" endtime="20200402 20:49:33.983"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:49:33.983" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:49:33.983" endtime="20200402 20:49:33.991"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:49:38.991" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:49:33.991" endtime="20200402 20:49:38.991"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:49:39.106" level="INFO">${Description} = A weekly jobless claim totals 6.6 million people filed for unemployment in the United States last week due to the coronavirus pandemic. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/Sub...</msg>
<status status="PASS" starttime="20200402 20:49:38.991" endtime="20200402 20:49:39.106"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:49:39.107" level="INFO">${Description} = A weekly jobless claim totals 6.6 million people filed for unemployment in the United States last week due to the coronavirus pandemic. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/Sub...</msg>
<status status="PASS" starttime="20200402 20:49:39.106" endtime="20200402 20:49:39.107"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:49:39.107" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'A weekly jobless claim totals 6.6 million people filed for unemployment in the United States last week due to the coronavirus pandemic. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Record 6.6 Million Americans Seeking Unemployment Benefits | Morning Joe | MSNBC' where id=4340 </msg>
<status status="PASS" starttime="20200402 20:49:39.107" endtime="20200402 20:49:39.114"></status>
</kw>
<status status="PASS" starttime="20200402 20:48:10.372" endtime="20200402 20:49:39.114"></status>
</kw>
<status status="PASS" starttime="20200402 20:48:10.371" endtime="20200402 20:49:39.114"></status>
</kw>
<status status="PASS" starttime="20200402 20:47:40.169" endtime="20200402 20:49:39.114"></status>
</kw>
<msg timestamp="20200402 20:49:39.114" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:47:40.169" endtime="20200402 20:49:39.114"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:49:39.115" level="INFO">${Count2} = 9</msg>
<status status="PASS" starttime="20200402 20:49:39.115" endtime="20200402 20:49:39.115"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:49:39.116" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:49:39.115" endtime="20200402 20:49:39.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:49:39.116" endtime="20200402 20:49:39.256"></status>
</kw>
<status status="PASS" starttime="20200402 20:49:39.116" endtime="20200402 20:49:39.256"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:49:39.256" endtime="20200402 20:49:39.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:49:44.277" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:49:39.276" endtime="20200402 20:49:44.277"></status>
</kw>
<status status="PASS" starttime="20200402 20:47:30.166" endtime="20200402 20:49:44.277"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;bebe2515-c2ca-4b5a-a490-a1ec08ec54ad&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:49:54.278" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:49:44.277" endtime="20200402 20:49:54.278"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:49:54.278" endtime="20200402 20:49:54.279"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:49:59.280" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:49:54.279" endtime="20200402 20:49:59.280"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:49:59.313" level="INFO">${Title} = FULL Morning Joe 8AM 4/2/20 | Morning Joe MSNBC News Today April 2,2020</msg>
<status status="PASS" starttime="20200402 20:49:59.280" endtime="20200402 20:49:59.313"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:49:59.314" level="INFO">${Title} = FULL Morning Joe 8AM 4/2/20 | Morning Joe MSNBC News Today April 2,2020</msg>
<status status="PASS" starttime="20200402 20:49:59.314" endtime="20200402 20:49:59.314"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:49:59.314" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 8AM 4/2/20 | Morning Joe MSNBC News Today April 2,2020') </msg>
<status status="PASS" starttime="20200402 20:49:59.314" endtime="20200402 20:49:59.322"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:04.322" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:49:59.322" endtime="20200402 20:50:04.322"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:50:04.322" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:50:04.324" level="INFO">${list} = ((4341,),)</msg>
<status status="PASS" starttime="20200402 20:50:04.322" endtime="20200402 20:50:04.324"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:50:04.324" endtime="20200402 20:50:04.324"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:50:04.325" level="INFO">${list} = [4341]</msg>
<status status="PASS" starttime="20200402 20:50:04.325" endtime="20200402 20:50:04.325"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:50:04.325" level="INFO">${Count3} = 4341</msg>
<status status="PASS" starttime="20200402 20:50:04.325" endtime="20200402 20:50:04.325"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:09.327" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:04.326" endtime="20200402 20:50:09.327"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:50:09.356" level="INFO">${Total_View} = 547 views</msg>
<status status="PASS" starttime="20200402 20:50:09.327" endtime="20200402 20:50:09.356"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:50:09.356" level="INFO">${Total_View} = 547 views</msg>
<status status="PASS" starttime="20200402 20:50:09.356" endtime="20200402 20:50:09.356"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:09.357" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '547 views' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:09.357" endtime="20200402 20:50:09.363"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:14.364" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:09.364" endtime="20200402 20:50:14.364"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:50:14.394" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:50:14.364" endtime="20200402 20:50:14.394"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:50:14.395" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:50:14.394" endtime="20200402 20:50:14.395"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:14.395" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '7 hours ago' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:14.395" endtime="20200402 20:50:14.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:19.402" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:14.402" endtime="20200402 20:50:19.402"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:50:19.428" level="INFO">${Duration} = 16 minutes</msg>
<status status="PASS" starttime="20200402 20:50:19.402" endtime="20200402 20:50:19.428"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:50:19.429" level="INFO">${Duration} = 16 minutes</msg>
<status status="PASS" starttime="20200402 20:50:19.428" endtime="20200402 20:50:19.429"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:19.429" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '16 minutes' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:19.429" endtime="20200402 20:50:19.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:24.436" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:19.435" endtime="20200402 20:50:24.436"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:50:24.455" level="INFO">${URL} = https://www.youtube.com/watch?v=_3VgjYr2xeM</msg>
<status status="PASS" starttime="20200402 20:50:24.436" endtime="20200402 20:50:24.455"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:50:24.455" level="INFO">${URL} = https://www.youtube.com/watch?v=_3VgjYr2xeM</msg>
<status status="PASS" starttime="20200402 20:50:24.455" endtime="20200402 20:50:24.455"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:24.456" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=_3VgjYr2xeM' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:24.455" endtime="20200402 20:50:24.462"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:50:24.463" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:50:24.463" endtime="20200402 20:50:24.836"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:50:24.836" endtime="20200402 20:50:24.843"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:50:34.844" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:50:24.843" endtime="20200402 20:50:34.844"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:50:34.844" level="INFO">Opening url 'https://www.youtube.com/watch?v=_3VgjYr2xeM'</msg>
<status status="PASS" starttime="20200402 20:50:34.844" endtime="20200402 20:50:37.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:50:47.640" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:50:37.639" endtime="20200402 20:50:47.640"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:50:47.695" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:50:47.640" endtime="20200402 20:50:47.695"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:50:47.696" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:50:47.696" endtime="20200402 20:50:47.696"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:47.697" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:47.696" endtime="20200402 20:50:47.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:52.705" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:47.704" endtime="20200402 20:50:52.705"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:50:52.975" level="INFO">${Full_View_Count} = 1,254 views</msg>
<status status="PASS" starttime="20200402 20:50:52.705" endtime="20200402 20:50:52.975"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:50:52.976" level="INFO">${Full_View_Count} = 1,254 views</msg>
<status status="PASS" starttime="20200402 20:50:52.976" endtime="20200402 20:50:52.976"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:50:52.976" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,254 views' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:50:52.976" endtime="20200402 20:50:52.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:50:57.984" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:52.982" endtime="20200402 20:50:57.984"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:50:58.026" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:50:57.984" endtime="20200402 20:50:58.026"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:50:58.027" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:50:58.026" endtime="20200402 20:50:58.027"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:50:58.027" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4341' </msg>
<status status="PASS" starttime="20200402 20:50:58.027" endtime="20200402 20:50:58.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:03.035" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:50:58.034" endtime="20200402 20:51:03.035"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:51:03.342" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 20:51:03.035" endtime="20200402 20:51:03.342"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:51:03.342" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 20:51:03.342" endtime="20200402 20:51:03.342"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:03.343" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='5' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:03.342" endtime="20200402 20:51:03.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:08.350" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:51:03.349" endtime="20200402 20:51:08.350"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:51:08.390" level="INFO">${Total_Dis_Likes} = 14</msg>
<status status="PASS" starttime="20200402 20:51:08.350" endtime="20200402 20:51:08.390"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:51:08.391" level="INFO">${Total_Dis_Likes} = 14</msg>
<status status="PASS" starttime="20200402 20:51:08.390" endtime="20200402 20:51:08.391"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:08.391" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='14' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:08.391" endtime="20200402 20:51:08.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:13.401" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:51:08.399" endtime="20200402 20:51:13.401"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:51:13.633" level="INFO">${Total_Subscribers} = 1.12K subscribers</msg>
<status status="PASS" starttime="20200402 20:51:13.401" endtime="20200402 20:51:13.633"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:51:13.633" level="INFO">${Total_Subscribers} = 1.12K subscribers</msg>
<status status="PASS" starttime="20200402 20:51:13.633" endtime="20200402 20:51:13.633"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:13.634" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.12K subscribers' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:13.633" endtime="20200402 20:51:13.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:18.641" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:51:13.640" endtime="20200402 20:51:18.641"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:51:18.672" level="INFO">${Channel_Name} = mothna008</msg>
<status status="PASS" starttime="20200402 20:51:18.641" endtime="20200402 20:51:18.672"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:51:18.673" level="INFO">${Channel_Name} = mothna008</msg>
<status status="PASS" starttime="20200402 20:51:18.672" endtime="20200402 20:51:18.673"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:18.673" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'mothna008' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:18.673" endtime="20200402 20:51:18.681"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:51:18.681" endtime="20200402 20:51:20.012"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:51:35.014" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:51:20.012" endtime="20200402 20:51:35.014"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:51:35.015" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:51:35.015" endtime="20200402 20:51:35.138"></status>
</kw>
<status status="PASS" starttime="20200402 20:51:35.014" endtime="20200402 20:51:35.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:51:45.139" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:51:35.138" endtime="20200402 20:51:45.139"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:51:45.169" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 20:51:45.139" endtime="20200402 20:51:45.169"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:51:45.169" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 20:51:45.169" endtime="20200402 20:51:45.170"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:45.170" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:45.170" endtime="20200402 20:51:45.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:50.179" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:51:45.177" endtime="20200402 20:51:50.179"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:51:50.270" level="INFO">${Description} = FULL Morning Joe 8AM 4/2/20 | Morning Joe  MSNBC News Today April 2,2020</msg>
<status status="PASS" starttime="20200402 20:51:50.179" endtime="20200402 20:51:50.270"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:51:50.270" level="INFO">${Description} = FULL Morning Joe 8AM 4/2/20 | Morning Joe  MSNBC News Today April 2,2020</msg>
<status status="PASS" starttime="20200402 20:51:50.270" endtime="20200402 20:51:50.271"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:51:50.271" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL Morning Joe 8AM 4/2/20 | Morning Joe  MSNBC News Today April 2,2020' where id=4341 </msg>
<status status="PASS" starttime="20200402 20:51:50.271" endtime="20200402 20:51:50.278"></status>
</kw>
<status status="PASS" starttime="20200402 20:50:24.462" endtime="20200402 20:51:50.278"></status>
</kw>
<status status="PASS" starttime="20200402 20:50:24.462" endtime="20200402 20:51:50.278"></status>
</kw>
<status status="PASS" starttime="20200402 20:49:54.279" endtime="20200402 20:51:50.278"></status>
</kw>
<msg timestamp="20200402 20:51:50.278" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:49:54.279" endtime="20200402 20:51:50.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:51:50.279" level="INFO">${Count2} = 10</msg>
<status status="PASS" starttime="20200402 20:51:50.279" endtime="20200402 20:51:50.279"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:51:50.280" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:51:50.279" endtime="20200402 20:51:50.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:51:50.280" endtime="20200402 20:51:50.560"></status>
</kw>
<status status="PASS" starttime="20200402 20:51:50.280" endtime="20200402 20:51:50.560"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:51:50.561" endtime="20200402 20:51:50.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:51:55.584" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:51:50.583" endtime="20200402 20:51:55.584"></status>
</kw>
<status status="PASS" starttime="20200402 20:49:44.277" endtime="20200402 20:51:55.584"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;206d6fcc-ae76-40a4-82fe-1257b2b7ba47&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:52:05.586" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:51:55.584" endtime="20200402 20:52:05.586"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:52:05.586" endtime="20200402 20:52:05.587"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:10.589" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:05.587" endtime="20200402 20:52:10.589"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:52:11.070" level="INFO">${Title} = Joe: There Can't Be A Patchwork Approach To A Pandemic | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:52:10.589" endtime="20200402 20:52:11.070"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:52:11.071" level="INFO">${Title} = Joe: There Can''t Be A Patchwork Approach To A Pandemic | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:52:11.071" endtime="20200402 20:52:11.071"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:52:11.072" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Joe: There Can''t Be A Patchwork Approach To A Pandemic | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:52:11.071" endtime="20200402 20:52:11.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:16.079" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:11.078" endtime="20200402 20:52:16.079"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:52:16.079" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:52:16.081" level="INFO">${list} = ((4342,),)</msg>
<status status="PASS" starttime="20200402 20:52:16.079" endtime="20200402 20:52:16.081"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:52:16.081" endtime="20200402 20:52:16.081"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:52:16.082" level="INFO">${list} = [4342]</msg>
<status status="PASS" starttime="20200402 20:52:16.082" endtime="20200402 20:52:16.082"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:52:16.082" level="INFO">${Count3} = 4342</msg>
<status status="PASS" starttime="20200402 20:52:16.082" endtime="20200402 20:52:16.083"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:21.084" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:16.083" endtime="20200402 20:52:21.084"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:52:21.137" level="INFO">${Total_View} = 47K views</msg>
<status status="PASS" starttime="20200402 20:52:21.084" endtime="20200402 20:52:21.137"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:52:21.138" level="INFO">${Total_View} = 47K views</msg>
<status status="PASS" starttime="20200402 20:52:21.138" endtime="20200402 20:52:21.138"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:52:21.138" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '47K views' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:52:21.138" endtime="20200402 20:52:21.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:26.149" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:21.147" endtime="20200402 20:52:26.149"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:52:26.498" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:52:26.149" endtime="20200402 20:52:26.498"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:52:26.499" level="INFO">${Video_Rendered_Before} = 7 hours ago</msg>
<status status="PASS" starttime="20200402 20:52:26.498" endtime="20200402 20:52:26.499"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:52:26.499" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '7 hours ago' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:52:26.499" endtime="20200402 20:52:26.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:31.507" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:26.506" endtime="20200402 20:52:31.507"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:52:31.537" level="INFO">${Duration} = 11 minutes, 14 seconds</msg>
<status status="PASS" starttime="20200402 20:52:31.507" endtime="20200402 20:52:31.537"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:52:31.538" level="INFO">${Duration} = 11 minutes, 14 seconds</msg>
<status status="PASS" starttime="20200402 20:52:31.538" endtime="20200402 20:52:31.538"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:52:31.538" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '11 minutes, 14 seconds' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:52:31.538" endtime="20200402 20:52:31.545"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:52:36.546" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:52:31.545" endtime="20200402 20:52:36.546"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:52:36.573" level="INFO">${URL} = https://www.youtube.com/watch?v=NjSnMLOrg54</msg>
<status status="PASS" starttime="20200402 20:52:36.546" endtime="20200402 20:52:36.573"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:52:36.574" level="INFO">${URL} = https://www.youtube.com/watch?v=NjSnMLOrg54</msg>
<status status="PASS" starttime="20200402 20:52:36.573" endtime="20200402 20:52:36.574"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:52:36.574" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=NjSnMLOrg54' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:52:36.574" endtime="20200402 20:52:36.581"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:52:36.582" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:52:36.582" endtime="20200402 20:52:37.067"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:52:37.067" endtime="20200402 20:52:37.082"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:52:47.083" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:52:37.083" endtime="20200402 20:52:47.083"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:52:47.083" level="INFO">Opening url 'https://www.youtube.com/watch?v=NjSnMLOrg54'</msg>
<status status="PASS" starttime="20200402 20:52:47.083" endtime="20200402 20:52:51.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:53:01.418" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:52:51.417" endtime="20200402 20:53:01.418"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:53:01.447" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:53:01.418" endtime="20200402 20:53:01.447"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:53:01.448" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:53:01.447" endtime="20200402 20:53:01.448"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:01.448" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:01.448" endtime="20200402 20:53:01.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:06.455" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:01.454" endtime="20200402 20:53:06.455"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:53:06.483" level="INFO">${Full_View_Count} = 155,820 views</msg>
<status status="PASS" starttime="20200402 20:53:06.455" endtime="20200402 20:53:06.483"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:53:06.484" level="INFO">${Full_View_Count} = 155,820 views</msg>
<status status="PASS" starttime="20200402 20:53:06.484" endtime="20200402 20:53:06.484"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:06.485" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='155,820 views' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:06.484" endtime="20200402 20:53:06.491"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:11.492" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:06.491" endtime="20200402 20:53:11.492"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:53:11.553" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:53:11.492" endtime="20200402 20:53:11.553"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:53:11.554" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:53:11.554" endtime="20200402 20:53:11.554"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:53:11.555" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4342' </msg>
<status status="PASS" starttime="20200402 20:53:11.554" endtime="20200402 20:53:11.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:16.562" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:11.561" endtime="20200402 20:53:16.562"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:53:16.623" level="INFO">${Total_Likes} = 2.1K</msg>
<status status="PASS" starttime="20200402 20:53:16.562" endtime="20200402 20:53:16.623"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:53:16.624" level="INFO">${Total_Likes} = 2.1K</msg>
<status status="PASS" starttime="20200402 20:53:16.624" endtime="20200402 20:53:16.624"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:16.625" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2.1K' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:16.624" endtime="20200402 20:53:16.631"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:21.632" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:16.631" endtime="20200402 20:53:21.632"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:53:21.679" level="INFO">${Total_Dis_Likes} = 239</msg>
<status status="PASS" starttime="20200402 20:53:21.632" endtime="20200402 20:53:21.679"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:53:21.680" level="INFO">${Total_Dis_Likes} = 239</msg>
<status status="PASS" starttime="20200402 20:53:21.679" endtime="20200402 20:53:21.680"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:21.680" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='239' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:21.680" endtime="20200402 20:53:21.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:26.687" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:21.686" endtime="20200402 20:53:26.687"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:53:26.737" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:53:26.687" endtime="20200402 20:53:26.737"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:53:26.737" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:53:26.737" endtime="20200402 20:53:26.737"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:26.738" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:26.737" endtime="20200402 20:53:26.744"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:53:31.744" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:26.744" endtime="20200402 20:53:31.744"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:53:31.788" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:53:31.744" endtime="20200402 20:53:31.788"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:53:31.789" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:53:31.788" endtime="20200402 20:53:31.789"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:31.789" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:31.789" endtime="20200402 20:53:31.796"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:53:31.796" endtime="20200402 20:53:33.389"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:53:48.391" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:53:33.389" endtime="20200402 20:53:48.391"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:53:48.392" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:53:48.391" endtime="20200402 20:53:48.588"></status>
</kw>
<status status="PASS" starttime="20200402 20:53:48.391" endtime="20200402 20:53:48.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:53:58.589" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:53:48.588" endtime="20200402 20:53:58.589"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:53:58.616" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:53:58.589" endtime="20200402 20:53:58.616"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:53:58.617" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:53:58.616" endtime="20200402 20:53:58.617"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:53:58.617" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:53:58.617" endtime="20200402 20:53:58.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:03.626" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:53:58.623" endtime="20200402 20:54:03.626"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:54:03.689" level="INFO">${Description} = 'If you're at war, the entire country goes to war,' says Joe Scarborough in discussing why the federal government needs to take the lead rather than relying on state governors to implement stay-at-hom...</msg>
<status status="PASS" starttime="20200402 20:54:03.626" endtime="20200402 20:54:03.689"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:54:03.690" level="INFO">${Description} = ''If you''re at war, the entire country goes to war,'' says Joe Scarborough in discussing why the federal government needs to take the lead rather than relying on state governors to implement stay-at-...</msg>
<status status="PASS" starttime="20200402 20:54:03.689" endtime="20200402 20:54:03.690"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:54:03.690" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '''If you''re at war, the entire country goes to war,'' says Joe Scarborough in discussing why the federal government needs to take the lead rather than relying on state governors to implement stay-at-home orders. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Joe: There Can''t Be A Patchwork Approach To A Pandemic | Morning Joe | MSNBC' where id=4342 </msg>
<status status="PASS" starttime="20200402 20:54:03.690" endtime="20200402 20:54:03.696"></status>
</kw>
<status status="PASS" starttime="20200402 20:52:36.581" endtime="20200402 20:54:03.696"></status>
</kw>
<status status="PASS" starttime="20200402 20:52:36.581" endtime="20200402 20:54:03.696"></status>
</kw>
<status status="PASS" starttime="20200402 20:52:05.587" endtime="20200402 20:54:03.696"></status>
</kw>
<msg timestamp="20200402 20:54:03.696" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:52:05.587" endtime="20200402 20:54:03.696"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:54:03.697" level="INFO">${Count2} = 11</msg>
<status status="PASS" starttime="20200402 20:54:03.697" endtime="20200402 20:54:03.697"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:54:03.697" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:54:03.697" endtime="20200402 20:54:03.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:54:03.698" endtime="20200402 20:54:03.807"></status>
</kw>
<status status="PASS" starttime="20200402 20:54:03.698" endtime="20200402 20:54:03.807"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:54:03.808" endtime="20200402 20:54:03.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:08.816" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:03.816" endtime="20200402 20:54:08.816"></status>
</kw>
<status status="PASS" starttime="20200402 20:51:55.584" endtime="20200402 20:54:08.816"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;23d386c9-b753-4e74-8701-019de37a1ffe&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:54:18.817" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:54:08.816" endtime="20200402 20:54:18.817"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:54:18.817" endtime="20200402 20:54:18.817"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:23.819" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:18.818" endtime="20200402 20:54:23.819"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:54:24.067" level="INFO">${Title} = Gov. Admits He Didn't Know Asymptomatic People Could Pass Virus | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:54:23.819" endtime="20200402 20:54:24.067"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:54:24.067" level="INFO">${Title} = Gov. Admits He Didn''t Know Asymptomatic People Could Pass Virus | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 20:54:24.067" endtime="20200402 20:54:24.067"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:54:24.068" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Gov. Admits He Didn''t Know Asymptomatic People Could Pass Virus | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 20:54:24.067" endtime="20200402 20:54:24.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:29.076" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:24.074" endtime="20200402 20:54:29.076"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:54:29.076" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:54:29.078" level="INFO">${list} = ((4343,),)</msg>
<status status="PASS" starttime="20200402 20:54:29.076" endtime="20200402 20:54:29.078"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:54:29.078" endtime="20200402 20:54:29.078"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:54:29.079" level="INFO">${list} = [4343]</msg>
<status status="PASS" starttime="20200402 20:54:29.078" endtime="20200402 20:54:29.079"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:54:29.079" level="INFO">${Count3} = 4343</msg>
<status status="PASS" starttime="20200402 20:54:29.079" endtime="20200402 20:54:29.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:34.081" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:29.079" endtime="20200402 20:54:34.081"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:54:34.115" level="INFO">${Total_View} = 122K views</msg>
<status status="PASS" starttime="20200402 20:54:34.081" endtime="20200402 20:54:34.115"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:54:34.116" level="INFO">${Total_View} = 122K views</msg>
<status status="PASS" starttime="20200402 20:54:34.115" endtime="20200402 20:54:34.116"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:54:34.116" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '122K views' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:54:34.116" endtime="20200402 20:54:34.123"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:39.124" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:34.123" endtime="20200402 20:54:39.124"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:54:39.161" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:54:39.124" endtime="20200402 20:54:39.161"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:54:39.162" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:54:39.161" endtime="20200402 20:54:39.162"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:54:39.162" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:54:39.162" endtime="20200402 20:54:39.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:44.170" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:39.168" endtime="20200402 20:54:44.170"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:54:44.199" level="INFO">${Duration} = 6 minutes, 18 seconds</msg>
<status status="PASS" starttime="20200402 20:54:44.170" endtime="20200402 20:54:44.199"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:54:44.200" level="INFO">${Duration} = 6 minutes, 18 seconds</msg>
<status status="PASS" starttime="20200402 20:54:44.200" endtime="20200402 20:54:44.200"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:54:44.201" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '6 minutes, 18 seconds' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:54:44.200" endtime="20200402 20:54:44.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:54:49.207" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:54:44.207" endtime="20200402 20:54:49.207"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:54:49.241" level="INFO">${URL} = https://www.youtube.com/watch?v=M-7XJhuEnjY</msg>
<status status="PASS" starttime="20200402 20:54:49.207" endtime="20200402 20:54:49.241"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:54:49.242" level="INFO">${URL} = https://www.youtube.com/watch?v=M-7XJhuEnjY</msg>
<status status="PASS" starttime="20200402 20:54:49.241" endtime="20200402 20:54:49.242"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:54:49.242" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=M-7XJhuEnjY' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:54:49.242" endtime="20200402 20:54:49.248"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:54:49.250" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:54:49.249" endtime="20200402 20:54:49.825"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:54:49.825" endtime="20200402 20:54:49.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:54:59.837" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:54:49.834" endtime="20200402 20:54:59.837"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:54:59.838" level="INFO">Opening url 'https://www.youtube.com/watch?v=M-7XJhuEnjY'</msg>
<status status="PASS" starttime="20200402 20:54:59.837" endtime="20200402 20:55:04.894"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:55:14.897" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:55:04.894" endtime="20200402 20:55:14.897"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:55:14.932" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:55:14.897" endtime="20200402 20:55:14.932"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:55:14.933" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:55:14.932" endtime="20200402 20:55:14.933"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:14.933" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:14.933" endtime="20200402 20:55:14.939"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:19.941" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:14.940" endtime="20200402 20:55:19.941"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:55:19.998" level="INFO">${Full_View_Count} = 158,148 views</msg>
<status status="PASS" starttime="20200402 20:55:19.941" endtime="20200402 20:55:19.998"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:55:19.998" level="INFO">${Full_View_Count} = 158,148 views</msg>
<status status="PASS" starttime="20200402 20:55:19.998" endtime="20200402 20:55:19.998"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:19.999" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='158,148 views' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:19.999" endtime="20200402 20:55:20.005"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:25.007" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:20.006" endtime="20200402 20:55:25.007"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:55:25.144" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:55:25.007" endtime="20200402 20:55:25.144"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:55:25.144" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:55:25.144" endtime="20200402 20:55:25.144"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:55:25.145" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4343' </msg>
<status status="PASS" starttime="20200402 20:55:25.144" endtime="20200402 20:55:25.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:30.153" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:25.152" endtime="20200402 20:55:30.153"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:55:30.223" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 20:55:30.153" endtime="20200402 20:55:30.223"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:55:30.224" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 20:55:30.223" endtime="20200402 20:55:30.224"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:30.224" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2.4K' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:30.224" endtime="20200402 20:55:30.230"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:35.231" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:30.230" endtime="20200402 20:55:35.231"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:55:35.306" level="INFO">${Total_Dis_Likes} = 139</msg>
<status status="PASS" starttime="20200402 20:55:35.231" endtime="20200402 20:55:35.307"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:55:35.307" level="INFO">${Total_Dis_Likes} = 139</msg>
<status status="PASS" starttime="20200402 20:55:35.307" endtime="20200402 20:55:35.307"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:35.308" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='139' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:35.307" endtime="20200402 20:55:35.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:40.315" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:35.314" endtime="20200402 20:55:40.315"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:55:40.342" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:55:40.315" endtime="20200402 20:55:40.342"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:55:40.343" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 20:55:40.343" endtime="20200402 20:55:40.343"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:40.344" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:40.343" endtime="20200402 20:55:40.350"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:55:45.350" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:55:40.350" endtime="20200402 20:55:45.350"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:55:45.394" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:55:45.350" endtime="20200402 20:55:45.394"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:55:45.395" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 20:55:45.395" endtime="20200402 20:55:45.395"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:55:45.395" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:55:45.395" endtime="20200402 20:55:45.402"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:55:45.402" endtime="20200402 20:55:48.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:56:03.248" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:55:48.246" endtime="20200402 20:56:03.248"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:56:03.249" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:56:03.248" endtime="20200402 20:56:03.444"></status>
</kw>
<status status="PASS" starttime="20200402 20:56:03.248" endtime="20200402 20:56:03.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:56:13.446" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:56:03.445" endtime="20200402 20:56:13.446"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:56:13.494" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:56:13.446" endtime="20200402 20:56:13.494"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:56:13.494" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:56:13.494" endtime="20200402 20:56:13.494"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:56:13.495" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:56:13.495" endtime="20200402 20:56:13.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:18.503" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:13.502" endtime="20200402 20:56:18.503"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:56:18.682" level="INFO">${Description} = Georgia Gov. Brian Kemp on Wednesday announced a stay-at home order across Georgia to try to curb the spread of the coronavirus. During the announcement, Kemp also stated he just learned asymptomatic ...</msg>
<status status="PASS" starttime="20200402 20:56:18.503" endtime="20200402 20:56:18.682"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:56:18.683" level="INFO">${Description} = Georgia Gov. Brian Kemp on Wednesday announced a stay-at home order across Georgia to try to curb the spread of the coronavirus. During the announcement, Kemp also stated he just learned asymptomatic ...</msg>
<status status="PASS" starttime="20200402 20:56:18.682" endtime="20200402 20:56:18.683"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:56:18.683" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Georgia Gov. Brian Kemp on Wednesday announced a stay-at home order across Georgia to try to curb the spread of the coronavirus. During the announcement, Kemp also stated he just learned asymptomatic people could transmit the virus. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Gov. Admits He Didn''t Know Asymptomatic People Could Pass Virus | Morning Joe | MSNBC' where id=4343 </msg>
<status status="PASS" starttime="20200402 20:56:18.683" endtime="20200402 20:56:18.690"></status>
</kw>
<status status="PASS" starttime="20200402 20:54:49.249" endtime="20200402 20:56:18.690"></status>
</kw>
<status status="PASS" starttime="20200402 20:54:49.248" endtime="20200402 20:56:18.690"></status>
</kw>
<status status="PASS" starttime="20200402 20:54:18.818" endtime="20200402 20:56:18.690"></status>
</kw>
<msg timestamp="20200402 20:56:18.690" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:54:18.818" endtime="20200402 20:56:18.690"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:56:18.691" level="INFO">${Count2} = 12</msg>
<status status="PASS" starttime="20200402 20:56:18.690" endtime="20200402 20:56:18.691"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:56:18.691" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:56:18.691" endtime="20200402 20:56:18.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:56:18.692" endtime="20200402 20:56:18.955"></status>
</kw>
<status status="PASS" starttime="20200402 20:56:18.692" endtime="20200402 20:56:18.955"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:56:18.956" endtime="20200402 20:56:18.964"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:23.966" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:18.964" endtime="20200402 20:56:23.966"></status>
</kw>
<status status="PASS" starttime="20200402 20:54:08.816" endtime="20200402 20:56:23.966"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;29fc8f75-1ed3-4d29-8a5b-e09ded6ae0fc&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:56:33.968" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:56:23.967" endtime="20200402 20:56:33.968"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:56:33.968" endtime="20200402 20:56:33.969"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:38.971" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:33.969" endtime="20200402 20:56:38.971"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:56:39.009" level="INFO">${Title} = Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet</msg>
<status status="PASS" starttime="20200402 20:56:38.971" endtime="20200402 20:56:39.009"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:56:39.010" level="INFO">${Title} = Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet</msg>
<status status="PASS" starttime="20200402 20:56:39.010" endtime="20200402 20:56:39.010"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:56:39.010" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet') </msg>
<status status="PASS" starttime="20200402 20:56:39.010" endtime="20200402 20:56:39.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:44.018" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:39.017" endtime="20200402 20:56:44.019"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:56:44.019" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:56:44.021" level="INFO">${list} = ((4344,),)</msg>
<status status="PASS" starttime="20200402 20:56:44.019" endtime="20200402 20:56:44.021"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:56:44.021" endtime="20200402 20:56:44.021"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:56:44.022" level="INFO">${list} = [4344]</msg>
<status status="PASS" starttime="20200402 20:56:44.021" endtime="20200402 20:56:44.022"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:56:44.022" level="INFO">${Count3} = 4344</msg>
<status status="PASS" starttime="20200402 20:56:44.022" endtime="20200402 20:56:44.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:49.025" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:44.023" endtime="20200402 20:56:49.025"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:56:49.118" level="INFO">${Total_View} = 200 views</msg>
<status status="PASS" starttime="20200402 20:56:49.025" endtime="20200402 20:56:49.118"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:56:49.119" level="INFO">${Total_View} = 200 views</msg>
<status status="PASS" starttime="20200402 20:56:49.119" endtime="20200402 20:56:49.119"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:56:49.120" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '200 views' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:56:49.119" endtime="20200402 20:56:49.127"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:54.128" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:49.127" endtime="20200402 20:56:54.128"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:56:54.155" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:56:54.128" endtime="20200402 20:56:54.155"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:56:54.156" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:56:54.155" endtime="20200402 20:56:54.156"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:56:54.156" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:56:54.156" endtime="20200402 20:56:54.162"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:56:59.162" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:54.162" endtime="20200402 20:56:59.162"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:56:59.261" level="INFO">${Duration} = 2 minutes, 38 seconds</msg>
<status status="PASS" starttime="20200402 20:56:59.162" endtime="20200402 20:56:59.261"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:56:59.262" level="INFO">${Duration} = 2 minutes, 38 seconds</msg>
<status status="PASS" starttime="20200402 20:56:59.261" endtime="20200402 20:56:59.262"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:56:59.262" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 38 seconds' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:56:59.262" endtime="20200402 20:56:59.268"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:04.270" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:56:59.269" endtime="20200402 20:57:04.270"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:57:04.307" level="INFO">${URL} = https://www.youtube.com/watch?v=8SfUuJe3VMI</msg>
<status status="PASS" starttime="20200402 20:57:04.270" endtime="20200402 20:57:04.307"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:57:04.308" level="INFO">${URL} = https://www.youtube.com/watch?v=8SfUuJe3VMI</msg>
<status status="PASS" starttime="20200402 20:57:04.308" endtime="20200402 20:57:04.308"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:04.308" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=8SfUuJe3VMI' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:04.308" endtime="20200402 20:57:04.314"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:57:04.317" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:57:04.316" endtime="20200402 20:57:04.922"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:57:04.922" endtime="20200402 20:57:04.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:57:14.932" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:57:04.931" endtime="20200402 20:57:14.932"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:57:14.932" level="INFO">Opening url 'https://www.youtube.com/watch?v=8SfUuJe3VMI'</msg>
<status status="PASS" starttime="20200402 20:57:14.932" endtime="20200402 20:57:17.611"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:57:27.613" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:57:17.611" endtime="20200402 20:57:27.613"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:57:28.347" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:57:27.613" endtime="20200402 20:57:28.347"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:57:28.349" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:57:28.347" endtime="20200402 20:57:28.349"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:28.349" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:28.349" endtime="20200402 20:57:28.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:33.358" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:28.355" endtime="20200402 20:57:33.358"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:57:33.423" level="INFO">${Full_View_Count} = 318 views</msg>
<status status="PASS" starttime="20200402 20:57:33.358" endtime="20200402 20:57:33.423"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:57:33.424" level="INFO">${Full_View_Count} = 318 views</msg>
<status status="PASS" starttime="20200402 20:57:33.424" endtime="20200402 20:57:33.424"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:33.424" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='318 views' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:33.424" endtime="20200402 20:57:33.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:38.432" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:33.431" endtime="20200402 20:57:38.432"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:57:38.518" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:57:38.432" endtime="20200402 20:57:38.518"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:57:38.518" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:57:38.518" endtime="20200402 20:57:38.518"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:57:38.519" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4344' </msg>
<status status="PASS" starttime="20200402 20:57:38.519" endtime="20200402 20:57:38.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:43.526" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:38.526" endtime="20200402 20:57:43.526"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:57:43.589" level="INFO">${Total_Likes} = 26</msg>
<status status="PASS" starttime="20200402 20:57:43.526" endtime="20200402 20:57:43.589"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 20:57:43.589" level="INFO">${Total_Likes} = 26</msg>
<status status="PASS" starttime="20200402 20:57:43.589" endtime="20200402 20:57:43.590"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:43.590" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='26' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:43.590" endtime="20200402 20:57:43.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:48.597" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:43.597" endtime="20200402 20:57:48.597"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:57:48.629" level="INFO">${Total_Dis_Likes} = 4</msg>
<status status="PASS" starttime="20200402 20:57:48.597" endtime="20200402 20:57:48.629"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 20:57:48.630" level="INFO">${Total_Dis_Likes} = 4</msg>
<status status="PASS" starttime="20200402 20:57:48.629" endtime="20200402 20:57:48.630"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:48.630" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='4' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:48.630" endtime="20200402 20:57:48.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:53.637" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:48.637" endtime="20200402 20:57:53.637"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:57:53.663" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:57:53.637" endtime="20200402 20:57:53.663"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 20:57:53.664" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 20:57:53.663" endtime="20200402 20:57:53.664"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:53.664" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:53.664" endtime="20200402 20:57:53.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:57:58.672" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:57:53.671" endtime="20200402 20:57:58.672"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:57:58.717" level="INFO">${Channel_Name} = US POLITICS NEWS</msg>
<status status="PASS" starttime="20200402 20:57:58.672" endtime="20200402 20:57:58.717"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 20:57:58.718" level="INFO">${Channel_Name} = US POLITICS NEWS</msg>
<status status="PASS" starttime="20200402 20:57:58.717" endtime="20200402 20:57:58.718"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:57:58.718" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'US POLITICS NEWS' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:57:58.718" endtime="20200402 20:57:58.724"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 20:57:58.724" endtime="20200402 20:58:01.796"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 20:58:16.797" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 20:58:01.796" endtime="20200402 20:58:16.797"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 20:58:16.798" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 20:58:16.798" endtime="20200402 20:58:17.138"></status>
</kw>
<status status="PASS" starttime="20200402 20:58:16.797" endtime="20200402 20:58:17.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:58:27.140" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:58:17.138" endtime="20200402 20:58:27.140"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:58:27.169" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:58:27.140" endtime="20200402 20:58:27.169"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 20:58:27.170" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 20:58:27.169" endtime="20200402 20:58:27.170"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:58:27.170" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:58:27.170" endtime="20200402 20:58:27.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:58:32.178" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:58:27.176" endtime="20200402 20:58:32.178"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:58:32.234" level="INFO">${Description} = Synopsis: Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet

#politics #uspolitics #uspoliticsnews #politicsnews #washington #whitehouse #UnitedStates #democrats #Republic...</msg>
<status status="PASS" starttime="20200402 20:58:32.178" endtime="20200402 20:58:32.234"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 20:58:32.235" level="INFO">${Description} = Synopsis: Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet

#politics #uspolitics #uspoliticsnews #politicsnews #washington #whitehouse #UnitedStates #democrats #Republic...</msg>
<status status="PASS" starttime="20200402 20:58:32.234" endtime="20200402 20:58:32.235"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:58:32.235" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Synopsis: Trump mocks Pelosi’s praying and trashes “psycho” Morning Joe in bizarre tweet

#politics #uspolitics #uspoliticsnews #politicsnews #washington #whitehouse #UnitedStates #democrats #RepublicanParty

Thanks for watching!
Please subscribe and enjoy more: https://bit.ly/2m5ccV6' where id=4344 </msg>
<status status="PASS" starttime="20200402 20:58:32.235" endtime="20200402 20:58:32.242"></status>
</kw>
<status status="PASS" starttime="20200402 20:57:04.315" endtime="20200402 20:58:32.242"></status>
</kw>
<status status="PASS" starttime="20200402 20:57:04.315" endtime="20200402 20:58:32.242"></status>
</kw>
<status status="PASS" starttime="20200402 20:56:33.969" endtime="20200402 20:58:32.242"></status>
</kw>
<msg timestamp="20200402 20:58:32.242" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:56:33.969" endtime="20200402 20:58:32.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 20:58:32.243" level="INFO">${Count2} = 13</msg>
<status status="PASS" starttime="20200402 20:58:32.243" endtime="20200402 20:58:32.243"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 20:58:32.244" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 20:58:32.243" endtime="20200402 20:58:32.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 20:58:32.244" endtime="20200402 20:58:32.337"></status>
</kw>
<status status="PASS" starttime="20200402 20:58:32.244" endtime="20200402 20:58:32.337"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 20:58:32.337" endtime="20200402 20:58:32.343"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:58:37.343" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:58:32.343" endtime="20200402 20:58:37.343"></status>
</kw>
<status status="PASS" starttime="20200402 20:56:23.966" endtime="20200402 20:58:37.343"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;99883b95-5298-4802-9066-3e52dffb9c44&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:58:47.345" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:58:37.343" endtime="20200402 20:58:47.345"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 20:58:47.345" endtime="20200402 20:58:47.346"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:58:52.347" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:58:47.346" endtime="20200402 20:58:52.347"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:58:52.728" level="INFO">${Title} = MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 20:58:52.347" endtime="20200402 20:58:52.728"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 20:58:52.729" level="INFO">${Title} = MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 20:58:52.729" endtime="20200402 20:58:52.729"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 20:58:52.729" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 20:58:52.729" endtime="20200402 20:58:52.735"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:58:57.737" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:58:52.736" endtime="20200402 20:58:57.737"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:58:57.737" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 20:58:57.739" level="INFO">${list} = ((4345,),)</msg>
<status status="PASS" starttime="20200402 20:58:57.737" endtime="20200402 20:58:57.739"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 20:58:57.739" endtime="20200402 20:58:57.739"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 20:58:57.740" level="INFO">${list} = [4345]</msg>
<status status="PASS" starttime="20200402 20:58:57.739" endtime="20200402 20:58:57.740"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 20:58:57.740" level="INFO">${Count3} = 4345</msg>
<status status="PASS" starttime="20200402 20:58:57.740" endtime="20200402 20:58:57.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:02.743" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:58:57.741" endtime="20200402 20:59:02.743"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:59:03.014" level="INFO">${Total_View} = 1.5K views</msg>
<status status="PASS" starttime="20200402 20:59:02.743" endtime="20200402 20:59:03.014"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 20:59:03.015" level="INFO">${Total_View} = 1.5K views</msg>
<status status="PASS" starttime="20200402 20:59:03.015" endtime="20200402 20:59:03.015"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:03.015" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.5K views' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:03.015" endtime="20200402 20:59:03.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:08.023" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:03.022" endtime="20200402 20:59:08.023"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:59:08.056" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:59:08.023" endtime="20200402 20:59:08.056"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 20:59:08.057" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 20:59:08.056" endtime="20200402 20:59:08.057"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:08.058" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:08.057" endtime="20200402 20:59:08.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:13.064" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:08.064" endtime="20200402 20:59:13.064"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:59:13.088" level="INFO">${Duration} = 8 minutes, 23 seconds</msg>
<status status="PASS" starttime="20200402 20:59:13.064" endtime="20200402 20:59:13.088"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 20:59:13.089" level="INFO">${Duration} = 8 minutes, 23 seconds</msg>
<status status="PASS" starttime="20200402 20:59:13.088" endtime="20200402 20:59:13.089"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:13.089" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '8 minutes, 23 seconds' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:13.089" endtime="20200402 20:59:13.096"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:18.097" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:13.096" endtime="20200402 20:59:18.097"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:59:20.476" level="INFO">${URL} = https://www.youtube.com/watch?v=QgUijFwdgoU</msg>
<status status="PASS" starttime="20200402 20:59:18.097" endtime="20200402 20:59:20.476"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 20:59:20.477" level="INFO">${URL} = https://www.youtube.com/watch?v=QgUijFwdgoU</msg>
<status status="PASS" starttime="20200402 20:59:20.476" endtime="20200402 20:59:20.477"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:20.478" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=QgUijFwdgoU' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:20.477" endtime="20200402 20:59:20.486"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 20:59:20.487" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 20:59:20.487" endtime="20200402 20:59:21.135"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 20:59:21.135" endtime="20200402 20:59:21.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:59:31.149" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:59:21.148" endtime="20200402 20:59:31.149"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 20:59:31.149" level="INFO">Opening url 'https://www.youtube.com/watch?v=QgUijFwdgoU'</msg>
<status status="PASS" starttime="20200402 20:59:31.149" endtime="20200402 20:59:36.053"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 20:59:46.054" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 20:59:36.054" endtime="20200402 20:59:46.054"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:59:46.085" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:59:46.054" endtime="20200402 20:59:46.085"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 20:59:46.085" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 20:59:46.085" endtime="20200402 20:59:46.085"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:46.086" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:46.086" endtime="20200402 20:59:46.092"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:51.095" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:46.093" endtime="20200402 20:59:51.095"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:59:51.769" level="INFO">${Full_View_Count} = 1,780 views</msg>
<status status="PASS" starttime="20200402 20:59:51.095" endtime="20200402 20:59:51.769"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 20:59:51.769" level="INFO">${Full_View_Count} = 1,780 views</msg>
<status status="PASS" starttime="20200402 20:59:51.769" endtime="20200402 20:59:51.769"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 20:59:51.770" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,780 views' where id=4345 </msg>
<status status="PASS" starttime="20200402 20:59:51.769" endtime="20200402 20:59:51.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 20:59:56.778" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:51.776" endtime="20200402 20:59:56.778"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:59:56.838" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:59:56.778" endtime="20200402 20:59:56.838"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 20:59:56.839" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 20:59:56.838" endtime="20200402 20:59:56.839"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 20:59:56.839" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4345' </msg>
<status status="PASS" starttime="20200402 20:59:56.839" endtime="20200402 20:59:56.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:01.847" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 20:59:56.846" endtime="20200402 21:00:01.847"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:00:01.883" level="INFO">${Total_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:00:01.847" endtime="20200402 21:00:01.883"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:00:01.883" level="INFO">${Total_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:00:01.883" endtime="20200402 21:00:01.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:01.884" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='8' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:01.884" endtime="20200402 21:00:01.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:06.891" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:00:01.890" endtime="20200402 21:00:06.891"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:00:07.048" level="INFO">${Total_Dis_Likes} = 13</msg>
<status status="PASS" starttime="20200402 21:00:06.891" endtime="20200402 21:00:07.048"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:00:07.049" level="INFO">${Total_Dis_Likes} = 13</msg>
<status status="PASS" starttime="20200402 21:00:07.048" endtime="20200402 21:00:07.049"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:07.049" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='13' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:07.049" endtime="20200402 21:00:07.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:12.057" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:00:07.055" endtime="20200402 21:00:12.057"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:00:12.089" level="INFO">${Total_Subscribers} = 4.96K subscribers</msg>
<status status="PASS" starttime="20200402 21:00:12.057" endtime="20200402 21:00:12.089"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:00:12.090" level="INFO">${Total_Subscribers} = 4.96K subscribers</msg>
<status status="PASS" starttime="20200402 21:00:12.090" endtime="20200402 21:00:12.090"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:12.091" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '4.96K subscribers' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:12.090" endtime="20200402 21:00:12.098"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:17.099" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:00:12.098" endtime="20200402 21:00:17.099"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:00:17.130" level="INFO">${Channel_Name} = TRUMP BREAKING NEWS</msg>
<status status="PASS" starttime="20200402 21:00:17.099" endtime="20200402 21:00:17.130"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:00:17.131" level="INFO">${Channel_Name} = TRUMP BREAKING NEWS</msg>
<status status="PASS" starttime="20200402 21:00:17.130" endtime="20200402 21:00:17.131"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:17.131" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'TRUMP BREAKING NEWS' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:17.131" endtime="20200402 21:00:17.137"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:00:17.137" endtime="20200402 21:00:20.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:00:35.304" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:00:20.303" endtime="20200402 21:00:35.304"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:00:35.305" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:00:35.304" endtime="20200402 21:00:35.560"></status>
</kw>
<status status="PASS" starttime="20200402 21:00:35.304" endtime="20200402 21:00:35.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:00:45.562" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:00:35.561" endtime="20200402 21:00:45.562"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:00:45.643" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:00:45.562" endtime="20200402 21:00:45.643"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:00:45.644" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:00:45.643" endtime="20200402 21:00:45.644"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:45.644" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:45.644" endtime="20200402 21:00:45.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:50.654" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:00:45.652" endtime="20200402 21:00:50.654"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:00:50.685" level="INFO">${Description} = MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:00:50.654" endtime="20200402 21:00:50.685"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:00:50.686" level="INFO">${Description} = MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:00:50.686" endtime="20200402 21:00:50.686"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:00:50.686" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'MSNBC Morning Joe Show 4\2\20 7AM - MSNBC Breaking News Today April 2, 2020' where id=4345 </msg>
<status status="PASS" starttime="20200402 21:00:50.686" endtime="20200402 21:00:50.693"></status>
</kw>
<status status="PASS" starttime="20200402 20:59:20.486" endtime="20200402 21:00:50.693"></status>
</kw>
<status status="PASS" starttime="20200402 20:59:20.486" endtime="20200402 21:00:50.693"></status>
</kw>
<status status="PASS" starttime="20200402 20:58:47.346" endtime="20200402 21:00:50.694"></status>
</kw>
<msg timestamp="20200402 21:00:50.694" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 20:58:47.346" endtime="20200402 21:00:50.694"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:00:50.694" level="INFO">${Count2} = 14</msg>
<status status="PASS" starttime="20200402 21:00:50.694" endtime="20200402 21:00:50.694"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:00:50.695" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:00:50.694" endtime="20200402 21:00:50.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:00:50.695" endtime="20200402 21:00:50.783"></status>
</kw>
<status status="PASS" starttime="20200402 21:00:50.695" endtime="20200402 21:00:50.783"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:00:50.783" endtime="20200402 21:00:50.789"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:00:55.791" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:00:50.789" endtime="20200402 21:00:55.791"></status>
</kw>
<status status="PASS" starttime="20200402 20:58:37.343" endtime="20200402 21:00:55.791"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;5532abc3-3c3f-428b-b898-a98d8047293f&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:01:05.792" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:00:55.791" endtime="20200402 21:01:05.792"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:01:05.792" endtime="20200402 21:01:05.793"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:10.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:05.793" endtime="20200402 21:01:10.795"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:01:10.829" level="INFO">${Title} = More Governors Issuing Stay-At-Home Orders | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 21:01:10.795" endtime="20200402 21:01:10.829"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:01:10.830" level="INFO">${Title} = More Governors Issuing Stay-At-Home Orders | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 21:01:10.829" endtime="20200402 21:01:10.830"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:01:10.830" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('More Governors Issuing Stay-At-Home Orders | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 21:01:10.830" endtime="20200402 21:01:10.836"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:15.837" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:10.836" endtime="20200402 21:01:15.837"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:01:15.837" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:01:15.840" level="INFO">${list} = ((4346,),)</msg>
<status status="PASS" starttime="20200402 21:01:15.837" endtime="20200402 21:01:15.840"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:01:15.840" endtime="20200402 21:01:15.840"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:01:15.841" level="INFO">${list} = [4346]</msg>
<status status="PASS" starttime="20200402 21:01:15.840" endtime="20200402 21:01:15.841"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:01:15.841" level="INFO">${Count3} = 4346</msg>
<status status="PASS" starttime="20200402 21:01:15.841" endtime="20200402 21:01:15.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:20.843" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:15.841" endtime="20200402 21:01:20.843"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:01:20.874" level="INFO">${Total_View} = 6.9K views</msg>
<status status="PASS" starttime="20200402 21:01:20.843" endtime="20200402 21:01:20.874"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:01:20.875" level="INFO">${Total_View} = 6.9K views</msg>
<status status="PASS" starttime="20200402 21:01:20.874" endtime="20200402 21:01:20.875"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:01:20.875" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '6.9K views' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:01:20.875" endtime="20200402 21:01:20.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:25.882" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:20.882" endtime="20200402 21:01:25.882"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:01:26.071" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:01:25.882" endtime="20200402 21:01:26.071"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:01:26.072" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:01:26.071" endtime="20200402 21:01:26.072"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:01:26.073" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:01:26.072" endtime="20200402 21:01:26.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:31.080" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:26.079" endtime="20200402 21:01:31.080"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:01:31.107" level="INFO">${Duration} = 8 minutes, 17 seconds</msg>
<status status="PASS" starttime="20200402 21:01:31.080" endtime="20200402 21:01:31.107"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:01:31.108" level="INFO">${Duration} = 8 minutes, 17 seconds</msg>
<status status="PASS" starttime="20200402 21:01:31.108" endtime="20200402 21:01:31.108"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:01:31.109" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '8 minutes, 17 seconds' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:01:31.108" endtime="20200402 21:01:31.115"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:01:36.116" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:01:31.115" endtime="20200402 21:01:36.116"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:01:36.134" level="INFO">${URL} = https://www.youtube.com/watch?v=syNvSSCL_So</msg>
<status status="PASS" starttime="20200402 21:01:36.116" endtime="20200402 21:01:36.134"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:01:36.135" level="INFO">${URL} = https://www.youtube.com/watch?v=syNvSSCL_So</msg>
<status status="PASS" starttime="20200402 21:01:36.135" endtime="20200402 21:01:36.135"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:01:36.135" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=syNvSSCL_So' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:01:36.135" endtime="20200402 21:01:36.142"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:01:36.143" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:01:36.143" endtime="20200402 21:01:36.672"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:01:36.673" endtime="20200402 21:01:36.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:01:46.684" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:01:36.681" endtime="20200402 21:01:46.684"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:01:46.684" level="INFO">Opening url 'https://www.youtube.com/watch?v=syNvSSCL_So'</msg>
<status status="PASS" starttime="20200402 21:01:46.684" endtime="20200402 21:01:52.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:02:02.284" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:01:52.283" endtime="20200402 21:02:02.284"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:02:02.364" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:02:02.284" endtime="20200402 21:02:02.364"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:02:02.365" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:02:02.364" endtime="20200402 21:02:02.365"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:02.365" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:02.365" endtime="20200402 21:02:02.372"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:07.373" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:02.372" endtime="20200402 21:02:07.373"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:02:07.409" level="INFO">${Full_View_Count} = 134,389 views</msg>
<status status="PASS" starttime="20200402 21:02:07.373" endtime="20200402 21:02:07.409"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:02:07.410" level="INFO">${Full_View_Count} = 134,389 views</msg>
<status status="PASS" starttime="20200402 21:02:07.409" endtime="20200402 21:02:07.410"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:07.410" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='134,389 views' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:07.410" endtime="20200402 21:02:07.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:12.418" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:07.417" endtime="20200402 21:02:12.418"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:02:12.449" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:02:12.418" endtime="20200402 21:02:12.449"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:02:12.450" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:02:12.449" endtime="20200402 21:02:12.450"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:02:12.450" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4346' </msg>
<status status="PASS" starttime="20200402 21:02:12.450" endtime="20200402 21:02:12.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:17.459" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:12.458" endtime="20200402 21:02:17.459"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:02:17.492" level="INFO">${Total_Likes} = 1.2K</msg>
<status status="PASS" starttime="20200402 21:02:17.459" endtime="20200402 21:02:17.492"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:02:17.492" level="INFO">${Total_Likes} = 1.2K</msg>
<status status="PASS" starttime="20200402 21:02:17.492" endtime="20200402 21:02:17.492"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:17.493" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1.2K' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:17.492" endtime="20200402 21:02:17.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:22.501" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:17.501" endtime="20200402 21:02:22.501"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:02:23.498" level="INFO">${Total_Dis_Likes} = 88</msg>
<status status="PASS" starttime="20200402 21:02:22.501" endtime="20200402 21:02:23.498"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:02:23.499" level="INFO">${Total_Dis_Likes} = 88</msg>
<status status="PASS" starttime="20200402 21:02:23.498" endtime="20200402 21:02:23.499"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:23.499" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='88' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:23.499" endtime="20200402 21:02:23.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:28.507" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:23.506" endtime="20200402 21:02:28.507"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:02:28.539" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 21:02:28.507" endtime="20200402 21:02:28.539"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:02:28.540" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 21:02:28.539" endtime="20200402 21:02:28.540"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:28.540" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:28.540" endtime="20200402 21:02:28.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:02:33.547" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:02:28.547" endtime="20200402 21:02:33.547"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:02:33.577" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 21:02:33.547" endtime="20200402 21:02:33.577"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:02:33.578" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 21:02:33.578" endtime="20200402 21:02:33.578"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:02:33.579" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:02:33.578" endtime="20200402 21:02:33.584"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:02:33.585" endtime="20200402 21:02:35.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:02:50.342" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:02:35.340" endtime="20200402 21:02:50.342"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:02:50.343" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:02:50.343" endtime="20200402 21:02:50.595"></status>
</kw>
<status status="PASS" starttime="20200402 21:02:50.342" endtime="20200402 21:02:50.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:03:00.596" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:02:50.595" endtime="20200402 21:03:00.596"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:03:00.776" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:03:00.596" endtime="20200402 21:03:00.776"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:03:00.777" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:03:00.776" endtime="20200402 21:03:00.777"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:00.777" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:03:00.777" endtime="20200402 21:03:00.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:05.785" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:00.785" endtime="20200402 21:03:05.785"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:03:05.913" level="INFO">${Description} = As the number of coronavirus cases in the U.S. continues to grow, more governors are issuing statewide stay-at-home orders for their residents, including Florida's Gov. Ron DeSantis. The panel discuss...</msg>
<status status="PASS" starttime="20200402 21:03:05.785" endtime="20200402 21:03:05.913"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:03:05.913" level="INFO">${Description} = As the number of coronavirus cases in the U.S. continues to grow, more governors are issuing statewide stay-at-home orders for their residents, including Florida''s Gov. Ron DeSantis. The panel discus...</msg>
<status status="PASS" starttime="20200402 21:03:05.913" endtime="20200402 21:03:05.913"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:05.914" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'As the number of coronavirus cases in the U.S. continues to grow, more governors are issuing statewide stay-at-home orders for their residents, including Florida''s Gov. Ron DeSantis. The panel discusses. Aired on 4/2/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

More Governors Issuing Stay-At-Home Orders | Morning Joe | MSNBC' where id=4346 </msg>
<status status="PASS" starttime="20200402 21:03:05.913" endtime="20200402 21:03:05.920"></status>
</kw>
<status status="PASS" starttime="20200402 21:01:36.142" endtime="20200402 21:03:05.920"></status>
</kw>
<status status="PASS" starttime="20200402 21:01:36.142" endtime="20200402 21:03:05.920"></status>
</kw>
<status status="PASS" starttime="20200402 21:01:05.793" endtime="20200402 21:03:05.920"></status>
</kw>
<msg timestamp="20200402 21:03:05.920" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:01:05.793" endtime="20200402 21:03:05.921"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:03:05.921" level="INFO">${Count2} = 15</msg>
<status status="PASS" starttime="20200402 21:03:05.921" endtime="20200402 21:03:05.921"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:03:05.921" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:03:05.921" endtime="20200402 21:03:05.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:03:05.922" endtime="20200402 21:03:06.034"></status>
</kw>
<status status="PASS" starttime="20200402 21:03:05.922" endtime="20200402 21:03:06.034"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:03:06.034" endtime="20200402 21:03:06.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:11.047" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:06.045" endtime="20200402 21:03:11.047"></status>
</kw>
<status status="PASS" starttime="20200402 21:00:55.791" endtime="20200402 21:03:11.047"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;3b4d6f5b-1568-40ad-aaee-18363ea90277&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:03:21.049" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:03:11.047" endtime="20200402 21:03:21.049"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:03:21.049" endtime="20200402 21:03:21.050"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:26.052" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:21.050" endtime="20200402 21:03:26.052"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:03:26.089" level="INFO">${Title} = MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:03:26.052" endtime="20200402 21:03:26.089"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:03:26.089" level="INFO">${Title} = MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:03:26.089" endtime="20200402 21:03:26.089"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:03:26.090" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:03:26.089" endtime="20200402 21:03:26.095"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:31.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:26.096" endtime="20200402 21:03:31.096"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:03:31.096" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:03:31.098" level="INFO">${list} = ((4347,),)</msg>
<status status="PASS" starttime="20200402 21:03:31.096" endtime="20200402 21:03:31.098"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:03:31.098" endtime="20200402 21:03:31.098"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:03:31.099" level="INFO">${list} = [4347]</msg>
<status status="PASS" starttime="20200402 21:03:31.099" endtime="20200402 21:03:31.099"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:03:31.100" level="INFO">${Count3} = 4347</msg>
<status status="PASS" starttime="20200402 21:03:31.099" endtime="20200402 21:03:31.100"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:36.101" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:31.100" endtime="20200402 21:03:36.101"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:03:36.128" level="INFO">${Total_View} = 1.3K views</msg>
<status status="PASS" starttime="20200402 21:03:36.101" endtime="20200402 21:03:36.129"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:03:36.129" level="INFO">${Total_View} = 1.3K views</msg>
<status status="PASS" starttime="20200402 21:03:36.129" endtime="20200402 21:03:36.129"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:36.130" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.3K views' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:03:36.129" endtime="20200402 21:03:36.136"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:41.137" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:36.136" endtime="20200402 21:03:41.137"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:03:41.165" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:03:41.137" endtime="20200402 21:03:41.165"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:03:41.165" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:03:41.165" endtime="20200402 21:03:41.165"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:41.166" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:03:41.165" endtime="20200402 21:03:41.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:46.178" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:41.176" endtime="20200402 21:03:46.178"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:03:46.225" level="INFO">${Duration} = 14 minutes, 8 seconds</msg>
<status status="PASS" starttime="20200402 21:03:46.178" endtime="20200402 21:03:46.225"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:03:46.226" level="INFO">${Duration} = 14 minutes, 8 seconds</msg>
<status status="PASS" starttime="20200402 21:03:46.225" endtime="20200402 21:03:46.226"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:46.226" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '14 minutes, 8 seconds' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:03:46.226" endtime="20200402 21:03:46.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:03:51.236" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:03:46.234" endtime="20200402 21:03:51.236"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:03:51.311" level="INFO">${URL} = https://www.youtube.com/watch?v=h3cB3I4Aezs</msg>
<status status="PASS" starttime="20200402 21:03:51.236" endtime="20200402 21:03:51.311"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:03:51.312" level="INFO">${URL} = https://www.youtube.com/watch?v=h3cB3I4Aezs</msg>
<status status="PASS" starttime="20200402 21:03:51.311" endtime="20200402 21:03:51.312"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:03:51.312" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=h3cB3I4Aezs' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:03:51.312" endtime="20200402 21:03:51.318"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:03:51.320" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:03:51.320" endtime="20200402 21:03:51.956"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:03:51.956" endtime="20200402 21:03:51.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:04:01.973" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:03:51.972" endtime="20200402 21:04:01.973"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:04:01.973" level="INFO">Opening url 'https://www.youtube.com/watch?v=h3cB3I4Aezs'</msg>
<status status="PASS" starttime="20200402 21:04:01.973" endtime="20200402 21:04:06.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:04:16.796" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:04:06.794" endtime="20200402 21:04:16.796"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:04:16.881" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:04:16.796" endtime="20200402 21:04:16.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:04:16.882" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:04:16.882" endtime="20200402 21:04:16.882"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:16.883" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:16.882" endtime="20200402 21:04:16.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:21.892" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:16.891" endtime="20200402 21:04:21.892"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:04:21.941" level="INFO">${Full_View_Count} = 1,631 views</msg>
<status status="PASS" starttime="20200402 21:04:21.892" endtime="20200402 21:04:21.941"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:04:21.942" level="INFO">${Full_View_Count} = 1,631 views</msg>
<status status="PASS" starttime="20200402 21:04:21.941" endtime="20200402 21:04:21.942"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:21.942" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,631 views' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:21.942" endtime="20200402 21:04:21.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:26.950" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:21.949" endtime="20200402 21:04:26.950"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:04:26.986" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:04:26.950" endtime="20200402 21:04:26.987"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:04:26.987" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:04:26.987" endtime="20200402 21:04:26.987"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:04:26.988" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4347' </msg>
<status status="PASS" starttime="20200402 21:04:26.987" endtime="20200402 21:04:26.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:31.997" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:26.995" endtime="20200402 21:04:31.997"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:04:32.092" level="INFO">${Total_Likes} = 45</msg>
<status status="PASS" starttime="20200402 21:04:31.997" endtime="20200402 21:04:32.092"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:04:32.093" level="INFO">${Total_Likes} = 45</msg>
<status status="PASS" starttime="20200402 21:04:32.092" endtime="20200402 21:04:32.093"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:32.093" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='45' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:32.093" endtime="20200402 21:04:32.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:37.102" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:32.099" endtime="20200402 21:04:37.102"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:04:37.138" level="INFO">${Total_Dis_Likes} = 7</msg>
<status status="PASS" starttime="20200402 21:04:37.102" endtime="20200402 21:04:37.138"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:04:37.139" level="INFO">${Total_Dis_Likes} = 7</msg>
<status status="PASS" starttime="20200402 21:04:37.138" endtime="20200402 21:04:37.139"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:37.139" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='7' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:37.139" endtime="20200402 21:04:37.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:42.146" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:37.146" endtime="20200402 21:04:42.146"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:04:42.611" level="INFO">${Total_Subscribers} = 3.37K subscribers</msg>
<status status="PASS" starttime="20200402 21:04:42.146" endtime="20200402 21:04:42.611"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:04:42.612" level="INFO">${Total_Subscribers} = 3.37K subscribers</msg>
<status status="PASS" starttime="20200402 21:04:42.611" endtime="20200402 21:04:42.612"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:42.612" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '3.37K subscribers' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:42.612" endtime="20200402 21:04:42.618"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:04:47.620" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:04:42.618" endtime="20200402 21:04:47.620"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:04:47.759" level="INFO">${Channel_Name} = BiggBoiProductions</msg>
<status status="PASS" starttime="20200402 21:04:47.620" endtime="20200402 21:04:47.759"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:04:47.760" level="INFO">${Channel_Name} = BiggBoiProductions</msg>
<status status="PASS" starttime="20200402 21:04:47.759" endtime="20200402 21:04:47.760"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:04:47.760" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'BiggBoiProductions' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:04:47.760" endtime="20200402 21:04:47.766"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:04:47.767" endtime="20200402 21:04:49.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:05:04.759" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:04:49.758" endtime="20200402 21:05:04.759"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:05:04.760" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:05:04.759" endtime="20200402 21:05:05.056"></status>
</kw>
<status status="PASS" starttime="20200402 21:05:04.759" endtime="20200402 21:05:05.056"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:05:15.057" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:05:05.056" endtime="20200402 21:05:15.057"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:05:15.086" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:05:15.057" endtime="20200402 21:05:15.086"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:05:15.087" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:05:15.086" endtime="20200402 21:05:15.087"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:05:15.087" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:05:15.087" endtime="20200402 21:05:15.093"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:20.095" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:15.093" endtime="20200402 21:05:20.095"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:05:20.488" level="INFO">${Description} = MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:05:20.095" endtime="20200402 21:05:20.488"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:05:20.489" level="INFO">${Description} = MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:05:20.489" endtime="20200402 21:05:20.489"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:05:20.489" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'MSNBC Morning Joe 4/2/20 [7AM] | MSNBC News Today April 2, 2020' where id=4347 </msg>
<status status="PASS" starttime="20200402 21:05:20.489" endtime="20200402 21:05:20.495"></status>
</kw>
<status status="PASS" starttime="20200402 21:03:51.319" endtime="20200402 21:05:20.495"></status>
</kw>
<status status="PASS" starttime="20200402 21:03:51.319" endtime="20200402 21:05:20.496"></status>
</kw>
<status status="PASS" starttime="20200402 21:03:21.050" endtime="20200402 21:05:20.496"></status>
</kw>
<msg timestamp="20200402 21:05:20.496" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:03:21.050" endtime="20200402 21:05:20.496"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:05:20.497" level="INFO">${Count2} = 16</msg>
<status status="PASS" starttime="20200402 21:05:20.496" endtime="20200402 21:05:20.497"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:05:20.497" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:05:20.497" endtime="20200402 21:05:20.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:05:20.498" endtime="20200402 21:05:20.589"></status>
</kw>
<status status="PASS" starttime="20200402 21:05:20.497" endtime="20200402 21:05:20.589"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:05:20.590" endtime="20200402 21:05:20.600"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:25.601" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:20.600" endtime="20200402 21:05:25.601"></status>
</kw>
<status status="PASS" starttime="20200402 21:03:11.047" endtime="20200402 21:05:25.601"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;ec703b4c-93ac-4a58-b06e-af75d30e8f39&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:05:35.602" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:05:25.601" endtime="20200402 21:05:35.602"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:05:35.602" endtime="20200402 21:05:35.603"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:40.605" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:35.603" endtime="20200402 21:05:40.605"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:05:40.775" level="INFO">${Title} = FULL Morning Joe 7AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:05:40.605" endtime="20200402 21:05:40.775"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:05:40.776" level="INFO">${Title} = FULL Morning Joe 7AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:05:40.776" endtime="20200402 21:05:40.776"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:05:40.776" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 7AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:05:40.776" endtime="20200402 21:05:40.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:45.785" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:40.784" endtime="20200402 21:05:45.785"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:05:45.785" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:05:45.787" level="INFO">${list} = ((4348,),)</msg>
<status status="PASS" starttime="20200402 21:05:45.785" endtime="20200402 21:05:45.787"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:05:45.787" endtime="20200402 21:05:45.788"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:05:45.788" level="INFO">${list} = [4348]</msg>
<status status="PASS" starttime="20200402 21:05:45.788" endtime="20200402 21:05:45.788"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:05:45.789" level="INFO">${Count3} = 4348</msg>
<status status="PASS" starttime="20200402 21:05:45.788" endtime="20200402 21:05:45.789"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:50.791" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:45.789" endtime="20200402 21:05:50.791"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:05:50.867" level="INFO">${Total_View} = 266 views</msg>
<status status="PASS" starttime="20200402 21:05:50.791" endtime="20200402 21:05:50.867"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:05:50.868" level="INFO">${Total_View} = 266 views</msg>
<status status="PASS" starttime="20200402 21:05:50.867" endtime="20200402 21:05:50.868"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:05:50.868" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '266 views' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:05:50.868" endtime="20200402 21:05:50.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:05:55.875" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:50.874" endtime="20200402 21:05:55.875"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:05:55.910" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:05:55.875" endtime="20200402 21:05:55.910"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:05:55.911" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:05:55.911" endtime="20200402 21:05:55.911"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:05:55.912" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:05:55.912" endtime="20200402 21:05:55.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:00.921" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:05:55.919" endtime="20200402 21:06:00.921"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:06:00.943" level="INFO">${Duration} = 16 seconds</msg>
<status status="PASS" starttime="20200402 21:06:00.921" endtime="20200402 21:06:00.943"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:06:00.944" level="INFO">${Duration} = 16 seconds</msg>
<status status="PASS" starttime="20200402 21:06:00.944" endtime="20200402 21:06:00.944"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:00.945" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '16 seconds' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:00.945" endtime="20200402 21:06:00.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:05.952" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:00.951" endtime="20200402 21:06:05.952"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:06:06.175" level="INFO">${URL} = https://www.youtube.com/watch?v=adEfFyvvLK4</msg>
<status status="PASS" starttime="20200402 21:06:05.952" endtime="20200402 21:06:06.176"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:06:06.176" level="INFO">${URL} = https://www.youtube.com/watch?v=adEfFyvvLK4</msg>
<status status="PASS" starttime="20200402 21:06:06.176" endtime="20200402 21:06:06.176"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:06.177" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=adEfFyvvLK4' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:06.177" endtime="20200402 21:06:06.185"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:06:06.187" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:06:06.186" endtime="20200402 21:06:06.765"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:06:06.765" endtime="20200402 21:06:06.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:06:16.774" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:06:06.773" endtime="20200402 21:06:16.774"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:06:16.775" level="INFO">Opening url 'https://www.youtube.com/watch?v=adEfFyvvLK4'</msg>
<status status="PASS" starttime="20200402 21:06:16.774" endtime="20200402 21:06:19.342"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:06:29.343" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:06:19.342" endtime="20200402 21:06:29.343"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:06:29.417" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:06:29.343" endtime="20200402 21:06:29.417"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:06:29.418" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:06:29.417" endtime="20200402 21:06:29.418"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:29.418" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:29.418" endtime="20200402 21:06:29.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:34.427" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:29.425" endtime="20200402 21:06:34.427"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:06:34.515" level="INFO">${Full_View_Count} = 435 views</msg>
<status status="PASS" starttime="20200402 21:06:34.427" endtime="20200402 21:06:34.515"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:06:34.516" level="INFO">${Full_View_Count} = 435 views</msg>
<status status="PASS" starttime="20200402 21:06:34.515" endtime="20200402 21:06:34.516"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:34.516" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='435 views' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:34.516" endtime="20200402 21:06:34.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:39.523" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:34.522" endtime="20200402 21:06:39.523"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:06:39.555" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:06:39.523" endtime="20200402 21:06:39.555"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:06:39.556" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:06:39.555" endtime="20200402 21:06:39.556"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:06:39.556" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4348' </msg>
<status status="PASS" starttime="20200402 21:06:39.556" endtime="20200402 21:06:39.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:44.564" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:39.563" endtime="20200402 21:06:44.564"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:06:44.784" level="INFO">${Total_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:06:44.564" endtime="20200402 21:06:44.784"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:06:44.784" level="INFO">${Total_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:06:44.784" endtime="20200402 21:06:44.784"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:44.785" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='8' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:44.784" endtime="20200402 21:06:44.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:49.794" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:44.791" endtime="20200402 21:06:49.794"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:06:50.545" level="INFO">${Total_Dis_Likes} = 41</msg>
<status status="PASS" starttime="20200402 21:06:49.794" endtime="20200402 21:06:50.545"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:06:50.546" level="INFO">${Total_Dis_Likes} = 41</msg>
<status status="PASS" starttime="20200402 21:06:50.545" endtime="20200402 21:06:50.546"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:50.546" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='41' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:50.546" endtime="20200402 21:06:50.553"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:06:55.554" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:50.553" endtime="20200402 21:06:55.554"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:06:55.583" level="INFO">${Total_Subscribers} = 1.45M subscribers</msg>
<status status="PASS" starttime="20200402 21:06:55.554" endtime="20200402 21:06:55.583"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:06:55.584" level="INFO">${Total_Subscribers} = 1.45M subscribers</msg>
<status status="PASS" starttime="20200402 21:06:55.583" endtime="20200402 21:06:55.584"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:06:55.584" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.45M subscribers' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:06:55.584" endtime="20200402 21:06:55.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:07:00.591" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:06:55.591" endtime="20200402 21:07:00.591"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:07:00.648" level="INFO">${Channel_Name} = The White House</msg>
<status status="PASS" starttime="20200402 21:07:00.592" endtime="20200402 21:07:00.648"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:07:00.649" level="INFO">${Channel_Name} = The White House</msg>
<status status="PASS" starttime="20200402 21:07:00.648" endtime="20200402 21:07:00.649"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:07:00.649" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'The White House' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:07:00.649" endtime="20200402 21:07:00.655"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:07:00.656" endtime="20200402 21:07:03.818"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:07:18.819" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:07:03.818" endtime="20200402 21:07:18.819"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:07:18.820" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200402 21:07:19.326" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-37.png"&gt;&lt;img src="selenium-screenshot-37.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200402 21:07:19.013" endtime="20200402 21:07:19.326"></status>
</kw>
<msg timestamp="20200402 21:07:19.338" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=80.0.3987.149)
</msg>
<status status="FAIL" starttime="20200402 21:07:18.820" endtime="20200402 21:07:19.338"></status>
</kw>
<status status="PASS" starttime="20200402 21:07:18.819" endtime="20200402 21:07:19.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:07:29.339" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:07:19.338" endtime="20200402 21:07:29.339"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:07:29.384" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:07:29.339" endtime="20200402 21:07:29.384"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:07:29.385" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:07:29.385" endtime="20200402 21:07:29.385"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:07:29.386" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:07:29.385" endtime="20200402 21:07:29.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:07:34.393" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:07:29.392" endtime="20200402 21:07:34.393"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:07:34.430" level="INFO">${Description} = The White House</msg>
<status status="PASS" starttime="20200402 21:07:34.393" endtime="20200402 21:07:34.430"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:07:34.431" level="INFO">${Description} = The White House</msg>
<status status="PASS" starttime="20200402 21:07:34.430" endtime="20200402 21:07:34.431"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:07:34.431" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'The White House' where id=4348 </msg>
<status status="PASS" starttime="20200402 21:07:34.431" endtime="20200402 21:07:34.437"></status>
</kw>
<status status="PASS" starttime="20200402 21:06:06.186" endtime="20200402 21:07:34.437"></status>
</kw>
<status status="PASS" starttime="20200402 21:06:06.186" endtime="20200402 21:07:34.437"></status>
</kw>
<status status="PASS" starttime="20200402 21:05:35.603" endtime="20200402 21:07:34.437"></status>
</kw>
<msg timestamp="20200402 21:07:34.437" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:05:35.603" endtime="20200402 21:07:34.437"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:07:34.438" level="INFO">${Count2} = 17</msg>
<status status="PASS" starttime="20200402 21:07:34.437" endtime="20200402 21:07:34.438"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:07:34.438" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:07:34.438" endtime="20200402 21:07:34.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:07:34.439" endtime="20200402 21:07:34.569"></status>
</kw>
<status status="PASS" starttime="20200402 21:07:34.438" endtime="20200402 21:07:34.569"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:07:34.570" endtime="20200402 21:07:34.581"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:07:39.583" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:07:34.581" endtime="20200402 21:07:39.583"></status>
</kw>
<status status="PASS" starttime="20200402 21:05:25.601" endtime="20200402 21:07:39.583"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;7ba0fa9c-ea84-4902-9a2e-9f830b26294f&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:07:49.583" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:07:39.583" endtime="20200402 21:07:49.583"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:07:49.583" endtime="20200402 21:07:49.583"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:07:54.586" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:07:49.585" endtime="20200402 21:07:54.586"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:07:54.684" level="INFO">${Title} = FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:07:54.586" endtime="20200402 21:07:54.684"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:07:54.685" level="INFO">${Title} = FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:07:54.684" endtime="20200402 21:07:54.685"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:07:54.686" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:07:54.685" endtime="20200402 21:07:54.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:07:59.693" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:07:54.692" endtime="20200402 21:07:59.693"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:07:59.693" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:07:59.695" level="INFO">${list} = ((4349,),)</msg>
<status status="PASS" starttime="20200402 21:07:59.693" endtime="20200402 21:07:59.695"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:07:59.695" endtime="20200402 21:07:59.695"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:07:59.696" level="INFO">${list} = [4349]</msg>
<status status="PASS" starttime="20200402 21:07:59.695" endtime="20200402 21:07:59.696"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:07:59.696" level="INFO">${Count3} = 4349</msg>
<status status="PASS" starttime="20200402 21:07:59.696" endtime="20200402 21:07:59.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:04.698" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:07:59.696" endtime="20200402 21:08:04.698"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:08:04.729" level="INFO">${Total_View} = 5.4K views</msg>
<status status="PASS" starttime="20200402 21:08:04.698" endtime="20200402 21:08:04.729"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:08:04.730" level="INFO">${Total_View} = 5.4K views</msg>
<status status="PASS" starttime="20200402 21:08:04.729" endtime="20200402 21:08:04.730"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:04.730" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '5.4K views' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:04.730" endtime="20200402 21:08:04.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:09.738" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:04.737" endtime="20200402 21:08:09.738"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:08:09.771" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:08:09.738" endtime="20200402 21:08:09.771"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:08:09.771" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:08:09.771" endtime="20200402 21:08:09.771"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:09.772" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:09.771" endtime="20200402 21:08:09.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:14.779" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:09.778" endtime="20200402 21:08:14.779"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:08:14.804" level="INFO">${Duration} = 14 minutes, 6 seconds</msg>
<status status="PASS" starttime="20200402 21:08:14.779" endtime="20200402 21:08:14.804"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:08:14.805" level="INFO">${Duration} = 14 minutes, 6 seconds</msg>
<status status="PASS" starttime="20200402 21:08:14.804" endtime="20200402 21:08:14.805"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:14.806" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '14 minutes, 6 seconds' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:14.805" endtime="20200402 21:08:14.813"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:19.814" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:14.813" endtime="20200402 21:08:19.814"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:08:19.833" level="INFO">${URL} = https://www.youtube.com/watch?v=Fgenihe0R6w</msg>
<status status="PASS" starttime="20200402 21:08:19.814" endtime="20200402 21:08:19.834"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:08:19.834" level="INFO">${URL} = https://www.youtube.com/watch?v=Fgenihe0R6w</msg>
<status status="PASS" starttime="20200402 21:08:19.834" endtime="20200402 21:08:19.834"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:19.835" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=Fgenihe0R6w' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:19.834" endtime="20200402 21:08:19.840"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:08:19.842" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:08:19.842" endtime="20200402 21:08:20.296"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:08:20.297" endtime="20200402 21:08:20.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:08:30.310" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:08:20.307" endtime="20200402 21:08:30.310"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:08:30.310" level="INFO">Opening url 'https://www.youtube.com/watch?v=Fgenihe0R6w'</msg>
<status status="PASS" starttime="20200402 21:08:30.310" endtime="20200402 21:08:33.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:08:43.455" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:08:33.454" endtime="20200402 21:08:43.455"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:08:43.485" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:08:43.455" endtime="20200402 21:08:43.485"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:08:43.486" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:08:43.486" endtime="20200402 21:08:43.486"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:43.486" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:43.486" endtime="20200402 21:08:43.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:48.495" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:43.494" endtime="20200402 21:08:48.495"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:08:48.523" level="INFO">${Full_View_Count} = 5,729 views</msg>
<status status="PASS" starttime="20200402 21:08:48.495" endtime="20200402 21:08:48.523"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:08:48.524" level="INFO">${Full_View_Count} = 5,729 views</msg>
<status status="PASS" starttime="20200402 21:08:48.524" endtime="20200402 21:08:48.524"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:48.524" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='5,729 views' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:48.524" endtime="20200402 21:08:48.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:53.532" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:48.530" endtime="20200402 21:08:53.532"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:08:53.558" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:08:53.532" endtime="20200402 21:08:53.558"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:08:53.559" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:08:53.558" endtime="20200402 21:08:53.559"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:08:53.559" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4349' </msg>
<status status="PASS" starttime="20200402 21:08:53.559" endtime="20200402 21:08:53.566"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:08:58.568" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:53.566" endtime="20200402 21:08:58.568"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:08:58.600" level="INFO">${Total_Likes} = 39</msg>
<status status="PASS" starttime="20200402 21:08:58.568" endtime="20200402 21:08:58.600"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:08:58.601" level="INFO">${Total_Likes} = 39</msg>
<status status="PASS" starttime="20200402 21:08:58.600" endtime="20200402 21:08:58.601"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:08:58.602" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='39' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:08:58.601" endtime="20200402 21:08:58.608"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:09:03.610" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:08:58.609" endtime="20200402 21:09:03.610"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:09:03.637" level="INFO">${Total_Dis_Likes} = 25</msg>
<status status="PASS" starttime="20200402 21:09:03.610" endtime="20200402 21:09:03.637"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:09:03.638" level="INFO">${Total_Dis_Likes} = 25</msg>
<status status="PASS" starttime="20200402 21:09:03.637" endtime="20200402 21:09:03.638"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:09:03.638" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='25' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:09:03.638" endtime="20200402 21:09:03.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:09:08.645" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:09:03.644" endtime="20200402 21:09:08.645"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:09:08.671" level="INFO">${Total_Subscribers} = 1.33K subscribers</msg>
<status status="PASS" starttime="20200402 21:09:08.645" endtime="20200402 21:09:08.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:09:08.672" level="INFO">${Total_Subscribers} = 1.33K subscribers</msg>
<status status="PASS" starttime="20200402 21:09:08.671" endtime="20200402 21:09:08.672"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:09:08.672" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.33K subscribers' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:09:08.672" endtime="20200402 21:09:08.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:09:13.681" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:09:08.679" endtime="20200402 21:09:13.681"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:09:17.027" level="INFO">${Channel_Name} = Hoa Nguyen</msg>
<status status="PASS" starttime="20200402 21:09:13.681" endtime="20200402 21:09:17.027"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:09:17.027" level="INFO">${Channel_Name} = Hoa Nguyen</msg>
<status status="PASS" starttime="20200402 21:09:17.027" endtime="20200402 21:09:17.027"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:09:17.028" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Hoa Nguyen' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:09:17.027" endtime="20200402 21:09:17.034"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:09:17.034" endtime="20200402 21:09:20.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:09:35.734" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:09:20.733" endtime="20200402 21:09:35.734"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:09:35.735" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:09:35.734" endtime="20200402 21:09:35.883"></status>
</kw>
<status status="PASS" starttime="20200402 21:09:35.734" endtime="20200402 21:09:35.883"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:09:45.884" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:09:35.883" endtime="20200402 21:09:45.884"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:09:45.924" level="INFO">${Category} = Howto &amp; Style</msg>
<status status="PASS" starttime="20200402 21:09:45.884" endtime="20200402 21:09:45.924"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:09:45.925" level="INFO">${Category} = Howto &amp; Style</msg>
<status status="PASS" starttime="20200402 21:09:45.925" endtime="20200402 21:09:45.925"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:09:45.925" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Howto &amp; Style' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:09:45.925" endtime="20200402 21:09:45.932"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:09:50.934" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:09:45.932" endtime="20200402 21:09:50.934"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:09:50.966" level="INFO">${Description} = FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:09:50.934" endtime="20200402 21:09:50.966"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:09:50.966" level="INFO">${Description} = FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:09:50.966" endtime="20200402 21:09:50.966"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:09:50.967" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL Morning Joe 4/2/20 [7AM] | MSNBC News April 2, 2020' where id=4349 </msg>
<status status="PASS" starttime="20200402 21:09:50.967" endtime="20200402 21:09:50.973"></status>
</kw>
<status status="PASS" starttime="20200402 21:08:19.841" endtime="20200402 21:09:50.973"></status>
</kw>
<status status="PASS" starttime="20200402 21:08:19.841" endtime="20200402 21:09:50.973"></status>
</kw>
<status status="PASS" starttime="20200402 21:07:49.584" endtime="20200402 21:09:50.974"></status>
</kw>
<msg timestamp="20200402 21:09:50.974" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:07:49.584" endtime="20200402 21:09:50.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:09:50.974" level="INFO">${Count2} = 18</msg>
<status status="PASS" starttime="20200402 21:09:50.974" endtime="20200402 21:09:50.974"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:09:50.975" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:09:50.974" endtime="20200402 21:09:50.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:09:50.975" endtime="20200402 21:09:51.060"></status>
</kw>
<status status="PASS" starttime="20200402 21:09:50.975" endtime="20200402 21:09:51.060"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:09:51.060" endtime="20200402 21:09:51.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:09:56.069" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:09:51.068" endtime="20200402 21:09:56.069"></status>
</kw>
<status status="PASS" starttime="20200402 21:07:39.583" endtime="20200402 21:09:56.069"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;d7e1038d-baa8-49dc-8fc9-b85ebe51e7f7&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:10:06.070" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:09:56.069" endtime="20200402 21:10:06.070"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:10:06.070" endtime="20200402 21:10:06.070"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:11.072" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:06.071" endtime="20200402 21:10:11.072"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:10:11.136" level="INFO">${Title} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:10:11.072" endtime="20200402 21:10:11.136"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:10:11.137" level="INFO">${Title} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:10:11.136" endtime="20200402 21:10:11.137"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:10:11.137" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:10:11.137" endtime="20200402 21:10:11.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:16.144" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:11.143" endtime="20200402 21:10:16.144"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:10:16.144" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:10:16.146" level="INFO">${list} = ((4350,),)</msg>
<status status="PASS" starttime="20200402 21:10:16.144" endtime="20200402 21:10:16.146"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:10:16.146" endtime="20200402 21:10:16.146"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:10:16.147" level="INFO">${list} = [4350]</msg>
<status status="PASS" starttime="20200402 21:10:16.147" endtime="20200402 21:10:16.147"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:10:16.147" level="INFO">${Count3} = 4350</msg>
<status status="PASS" starttime="20200402 21:10:16.147" endtime="20200402 21:10:16.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:21.149" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:16.148" endtime="20200402 21:10:21.149"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:10:21.176" level="INFO">${Total_View} = 377 views</msg>
<status status="PASS" starttime="20200402 21:10:21.149" endtime="20200402 21:10:21.177"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:10:21.177" level="INFO">${Total_View} = 377 views</msg>
<status status="PASS" starttime="20200402 21:10:21.177" endtime="20200402 21:10:21.177"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:10:21.178" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '377 views' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:10:21.177" endtime="20200402 21:10:21.187"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:26.188" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:21.187" endtime="20200402 21:10:26.188"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:10:26.222" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:10:26.188" endtime="20200402 21:10:26.222"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:10:26.222" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:10:26.222" endtime="20200402 21:10:26.222"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:10:26.223" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:10:26.222" endtime="20200402 21:10:26.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:31.229" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:26.229" endtime="20200402 21:10:31.229"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:10:31.295" level="INFO">${Duration} = 8 minutes, 43 seconds</msg>
<status status="PASS" starttime="20200402 21:10:31.229" endtime="20200402 21:10:31.296"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:10:31.296" level="INFO">${Duration} = 8 minutes, 43 seconds</msg>
<status status="PASS" starttime="20200402 21:10:31.296" endtime="20200402 21:10:31.296"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:10:31.297" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '8 minutes, 43 seconds' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:10:31.296" endtime="20200402 21:10:31.303"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:10:36.303" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:10:31.303" endtime="20200402 21:10:36.303"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:10:36.740" level="INFO">${URL} = https://www.youtube.com/watch?v=gzGWIDTe5Jg</msg>
<status status="PASS" starttime="20200402 21:10:36.303" endtime="20200402 21:10:36.741"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:10:36.741" level="INFO">${URL} = https://www.youtube.com/watch?v=gzGWIDTe5Jg</msg>
<status status="PASS" starttime="20200402 21:10:36.741" endtime="20200402 21:10:36.741"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:10:36.742" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=gzGWIDTe5Jg' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:10:36.741" endtime="20200402 21:10:36.747"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:10:36.749" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:10:36.748" endtime="20200402 21:10:37.381"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:10:37.381" endtime="20200402 21:10:37.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:10:47.448" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:10:37.447" endtime="20200402 21:10:47.448"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:10:47.448" level="INFO">Opening url 'https://www.youtube.com/watch?v=gzGWIDTe5Jg'</msg>
<status status="PASS" starttime="20200402 21:10:47.448" endtime="20200402 21:10:52.182"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:11:02.184" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:10:52.182" endtime="20200402 21:11:02.184"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:11:02.222" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:11:02.184" endtime="20200402 21:11:02.222"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:11:02.223" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:11:02.222" endtime="20200402 21:11:02.223"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:02.223" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:02.223" endtime="20200402 21:11:02.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:07.231" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:02.229" endtime="20200402 21:11:07.231"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:11:07.345" level="INFO">${Full_View_Count} = 486 views</msg>
<status status="PASS" starttime="20200402 21:11:07.231" endtime="20200402 21:11:07.345"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:11:07.346" level="INFO">${Full_View_Count} = 486 views</msg>
<status status="PASS" starttime="20200402 21:11:07.345" endtime="20200402 21:11:07.346"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:07.346" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='486 views' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:07.346" endtime="20200402 21:11:07.352"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:12.353" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:07.352" endtime="20200402 21:11:12.353"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:11:12.511" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:11:12.353" endtime="20200402 21:11:12.511"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:11:12.512" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:11:12.511" endtime="20200402 21:11:12.512"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:11:12.512" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4350' </msg>
<status status="PASS" starttime="20200402 21:11:12.512" endtime="20200402 21:11:12.518"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:17.519" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:12.518" endtime="20200402 21:11:17.519"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:11:17.553" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 21:11:17.519" endtime="20200402 21:11:17.553"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:11:17.554" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 21:11:17.553" endtime="20200402 21:11:17.554"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:17.554" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='4' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:17.554" endtime="20200402 21:11:17.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:22.561" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:17.561" endtime="20200402 21:11:22.561"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:11:22.590" level="INFO">${Total_Dis_Likes} = 11</msg>
<status status="PASS" starttime="20200402 21:11:22.561" endtime="20200402 21:11:22.590"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:11:22.591" level="INFO">${Total_Dis_Likes} = 11</msg>
<status status="PASS" starttime="20200402 21:11:22.591" endtime="20200402 21:11:22.591"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:22.592" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='11' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:22.591" endtime="20200402 21:11:22.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:27.599" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:22.598" endtime="20200402 21:11:27.599"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:11:27.645" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:11:27.599" endtime="20200402 21:11:27.645"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:11:27.646" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:11:27.645" endtime="20200402 21:11:27.646"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:27.646" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '6.61K subscribers' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:27.646" endtime="20200402 21:11:27.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:11:32.654" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:27.653" endtime="20200402 21:11:32.654"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:11:32.680" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:11:32.654" endtime="20200402 21:11:32.680"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:11:32.681" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:11:32.680" endtime="20200402 21:11:32.681"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:32.681" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Destor' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:32.681" endtime="20200402 21:11:32.688"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:11:32.688" endtime="20200402 21:11:33.908"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:11:48.910" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:11:33.909" endtime="20200402 21:11:48.910"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:11:48.911" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:11:48.910" endtime="20200402 21:11:49.015"></status>
</kw>
<status status="PASS" starttime="20200402 21:11:48.910" endtime="20200402 21:11:49.015"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:11:59.017" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:11:49.015" endtime="20200402 21:11:59.017"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:11:59.066" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:11:59.017" endtime="20200402 21:11:59.067"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:11:59.067" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:11:59.067" endtime="20200402 21:11:59.067"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:11:59.068" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:11:59.067" endtime="20200402 21:11:59.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:04.075" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:11:59.074" endtime="20200402 21:12:04.075"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:12:04.109" level="INFO">${Description} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:12:04.075" endtime="20200402 21:12:04.109"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:12:04.110" level="INFO">${Description} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:12:04.109" endtime="20200402 21:12:04.110"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:12:04.110" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020' where id=4350 </msg>
<status status="PASS" starttime="20200402 21:12:04.110" endtime="20200402 21:12:04.117"></status>
</kw>
<status status="PASS" starttime="20200402 21:10:36.748" endtime="20200402 21:12:04.117"></status>
</kw>
<status status="PASS" starttime="20200402 21:10:36.747" endtime="20200402 21:12:04.117"></status>
</kw>
<status status="PASS" starttime="20200402 21:10:06.071" endtime="20200402 21:12:04.117"></status>
</kw>
<msg timestamp="20200402 21:12:04.117" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:10:06.071" endtime="20200402 21:12:04.117"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:12:04.118" level="INFO">${Count2} = 19</msg>
<status status="PASS" starttime="20200402 21:12:04.118" endtime="20200402 21:12:04.118"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:12:04.119" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:12:04.118" endtime="20200402 21:12:04.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:12:04.119" endtime="20200402 21:12:04.319"></status>
</kw>
<status status="PASS" starttime="20200402 21:12:04.119" endtime="20200402 21:12:04.320"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:12:04.320" endtime="20200402 21:12:04.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:09.328" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:04.327" endtime="20200402 21:12:09.328"></status>
</kw>
<status status="PASS" starttime="20200402 21:09:56.069" endtime="20200402 21:12:09.328"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;22b12eb9-edc4-425e-a353-a0332e9c951e&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:12:19.330" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:12:09.328" endtime="20200402 21:12:19.330"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:12:19.330" endtime="20200402 21:12:19.331"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:24.333" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:19.331" endtime="20200402 21:12:24.333"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:12:24.460" level="INFO">${Title} = Lawrence: Trump Gave Republicans False Hope On Coronavirus | The Last Word | MSNBC</msg>
<status status="PASS" starttime="20200402 21:12:24.333" endtime="20200402 21:12:24.460"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:12:24.460" level="INFO">${Title} = Lawrence: Trump Gave Republicans False Hope On Coronavirus | The Last Word | MSNBC</msg>
<status status="PASS" starttime="20200402 21:12:24.460" endtime="20200402 21:12:24.460"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:12:24.461" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Lawrence: Trump Gave Republicans False Hope On Coronavirus | The Last Word | MSNBC') </msg>
<status status="PASS" starttime="20200402 21:12:24.461" endtime="20200402 21:12:24.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:29.469" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:24.468" endtime="20200402 21:12:29.469"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:12:29.469" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:12:29.471" level="INFO">${list} = ((4351,),)</msg>
<status status="PASS" starttime="20200402 21:12:29.469" endtime="20200402 21:12:29.471"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:12:29.471" endtime="20200402 21:12:29.471"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:12:29.472" level="INFO">${list} = [4351]</msg>
<status status="PASS" starttime="20200402 21:12:29.472" endtime="20200402 21:12:29.472"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:12:29.473" level="INFO">${Count3} = 4351</msg>
<status status="PASS" starttime="20200402 21:12:29.472" endtime="20200402 21:12:29.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:34.474" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:29.473" endtime="20200402 21:12:34.474"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:12:34.749" level="INFO">${Total_View} = 9 views</msg>
<status status="PASS" starttime="20200402 21:12:34.474" endtime="20200402 21:12:34.749"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:12:34.749" level="INFO">${Total_View} = 9 views</msg>
<status status="PASS" starttime="20200402 21:12:34.749" endtime="20200402 21:12:34.750"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:12:34.750" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '9 views' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:12:34.750" endtime="20200402 21:12:34.756"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:39.757" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:34.756" endtime="20200402 21:12:39.757"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:12:39.785" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:12:39.757" endtime="20200402 21:12:39.786"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:12:39.786" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:12:39.786" endtime="20200402 21:12:39.786"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:12:39.787" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:12:39.786" endtime="20200402 21:12:39.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:44.794" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:39.793" endtime="20200402 21:12:44.794"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:12:44.919" level="INFO">${Duration} = 6 minutes, 22 seconds</msg>
<status status="PASS" starttime="20200402 21:12:44.794" endtime="20200402 21:12:44.919"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:12:44.919" level="INFO">${Duration} = 6 minutes, 22 seconds</msg>
<status status="PASS" starttime="20200402 21:12:44.919" endtime="20200402 21:12:44.920"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:12:44.920" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '6 minutes, 22 seconds' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:12:44.920" endtime="20200402 21:12:44.926"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:12:49.927" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:12:44.927" endtime="20200402 21:12:49.927"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:12:49.946" level="INFO">${URL} = https://www.youtube.com/watch?v=2YFdVjRW_5A</msg>
<status status="PASS" starttime="20200402 21:12:49.927" endtime="20200402 21:12:49.946"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:12:49.947" level="INFO">${URL} = https://www.youtube.com/watch?v=2YFdVjRW_5A</msg>
<status status="PASS" starttime="20200402 21:12:49.947" endtime="20200402 21:12:49.947"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:12:49.947" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=2YFdVjRW_5A' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:12:49.947" endtime="20200402 21:12:49.954"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:12:49.955" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:12:49.954" endtime="20200402 21:12:50.343"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:12:50.343" endtime="20200402 21:12:50.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:13:00.353" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:12:50.351" endtime="20200402 21:13:00.353"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:13:00.353" level="INFO">Opening url 'https://www.youtube.com/watch?v=2YFdVjRW_5A'</msg>
<status status="PASS" starttime="20200402 21:13:00.353" endtime="20200402 21:13:05.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:13:15.455" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:13:05.454" endtime="20200402 21:13:15.455"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:13:15.638" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:13:15.455" endtime="20200402 21:13:15.638"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:13:15.639" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:13:15.638" endtime="20200402 21:13:15.639"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:15.639" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:15.639" endtime="20200402 21:13:15.646"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:20.647" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:15.646" endtime="20200402 21:13:20.647"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:13:20.682" level="INFO">${Full_View_Count} = 39 views</msg>
<status status="PASS" starttime="20200402 21:13:20.647" endtime="20200402 21:13:20.682"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:13:20.682" level="INFO">${Full_View_Count} = 39 views</msg>
<status status="PASS" starttime="20200402 21:13:20.682" endtime="20200402 21:13:20.682"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:20.683" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='39 views' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:20.683" endtime="20200402 21:13:20.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:25.691" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:20.689" endtime="20200402 21:13:25.691"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:13:25.731" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:13:25.691" endtime="20200402 21:13:25.731"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:13:25.732" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:13:25.731" endtime="20200402 21:13:25.732"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:13:25.732" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4351' </msg>
<status status="PASS" starttime="20200402 21:13:25.732" endtime="20200402 21:13:25.738"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:30.739" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:25.738" endtime="20200402 21:13:30.739"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:13:30.771" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:13:30.739" endtime="20200402 21:13:30.771"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:13:30.772" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:13:30.771" endtime="20200402 21:13:30.772"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:30.772" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:30.772" endtime="20200402 21:13:30.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:35.780" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:30.779" endtime="20200402 21:13:35.780"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:13:35.815" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:13:35.780" endtime="20200402 21:13:35.815"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:13:35.815" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:13:35.815" endtime="20200402 21:13:35.815"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:35.816" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:35.815" endtime="20200402 21:13:35.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:40.823" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:35.823" endtime="20200402 21:13:40.823"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:13:40.851" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:13:40.823" endtime="20200402 21:13:40.851"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:13:40.851" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:13:40.851" endtime="20200402 21:13:40.851"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:40.852" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:40.852" endtime="20200402 21:13:40.859"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:13:45.860" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:13:40.859" endtime="20200402 21:13:45.860"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:13:45.888" level="INFO">${Channel_Name} = EGM 6K</msg>
<status status="PASS" starttime="20200402 21:13:45.860" endtime="20200402 21:13:45.888"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:13:45.888" level="INFO">${Channel_Name} = EGM 6K</msg>
<status status="PASS" starttime="20200402 21:13:45.888" endtime="20200402 21:13:45.888"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:13:45.889" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'EGM 6K' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:13:45.888" endtime="20200402 21:13:45.895"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:13:45.896" endtime="20200402 21:13:47.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:14:02.143" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:13:47.141" endtime="20200402 21:14:02.143"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:14:02.144" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:14:02.144" endtime="20200402 21:14:02.439"></status>
</kw>
<status status="PASS" starttime="20200402 21:14:02.143" endtime="20200402 21:14:02.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:14:12.441" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:14:02.439" endtime="20200402 21:14:12.441"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:14:12.491" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:14:12.441" endtime="20200402 21:14:12.491"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:14:12.492" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:14:12.492" endtime="20200402 21:14:12.492"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:14:12.493" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:14:12.492" endtime="20200402 21:14:12.507"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:17.509" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:12.507" endtime="20200402 21:14:17.509"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:14:17.545" level="INFO">${Description} = Polling indicates that Republicans are not as prepared for the worst of the coronavirus as Democrats and Lawrence O’Donnell argues that's because Republicans are believing Trump's false claims about t...</msg>
<status status="PASS" starttime="20200402 21:14:17.509" endtime="20200402 21:14:17.545"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:14:17.546" level="INFO">${Description} = Polling indicates that Republicans are not as prepared for the worst of the coronavirus as Democrats and Lawrence O’Donnell argues that''s because Republicans are believing Trump''s false claims about...</msg>
<status status="PASS" starttime="20200402 21:14:17.546" endtime="20200402 21:14:17.546"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:14:17.547" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Polling indicates that Republicans are not as prepared for the worst of the coronavirus as Democrats and Lawrence O’Donnell argues that''s because Republicans are believing Trump''s false claims about the severity of the virus. Aired on 03/16/2020.
» Subscribe to MSNBC: 

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: 
Subscribe to MSNBC Newsletter: 
Find MSNBC on Facebook: 
Follow MSNBC on Twitter: 
Follow MSNBC on Instagram: 

Lawrence: Trump Gave Republicans False Hope On Coronavirus | The Last Word | MSNBC' where id=4351 </msg>
<status status="PASS" starttime="20200402 21:14:17.546" endtime="20200402 21:14:17.554"></status>
</kw>
<status status="PASS" starttime="20200402 21:12:49.954" endtime="20200402 21:14:17.554"></status>
</kw>
<status status="PASS" starttime="20200402 21:12:49.954" endtime="20200402 21:14:17.554"></status>
</kw>
<status status="PASS" starttime="20200402 21:12:19.331" endtime="20200402 21:14:17.554"></status>
</kw>
<msg timestamp="20200402 21:14:17.554" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:12:19.331" endtime="20200402 21:14:17.554"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:14:17.555" level="INFO">${Count2} = 20</msg>
<status status="PASS" starttime="20200402 21:14:17.554" endtime="20200402 21:14:17.555"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:14:17.555" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:14:17.555" endtime="20200402 21:14:17.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:14:17.556" endtime="20200402 21:14:17.648"></status>
</kw>
<status status="PASS" starttime="20200402 21:14:17.555" endtime="20200402 21:14:17.648"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:14:17.648" endtime="20200402 21:14:17.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:22.656" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:17.655" endtime="20200402 21:14:22.656"></status>
</kw>
<status status="PASS" starttime="20200402 21:12:09.328" endtime="20200402 21:14:22.656"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;a5db9147-d7be-42eb-93ed-13808ae9d64c&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:14:32.657" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:14:22.656" endtime="20200402 21:14:32.657"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:14:32.657" endtime="20200402 21:14:32.658"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:37.660" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:32.659" endtime="20200402 21:14:37.660"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:14:37.716" level="INFO">${Title} = Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC</msg>
<status status="PASS" starttime="20200402 21:14:37.660" endtime="20200402 21:14:37.716"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:14:37.716" level="INFO">${Title} = Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC</msg>
<status status="PASS" starttime="20200402 21:14:37.716" endtime="20200402 21:14:37.716"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:14:37.717" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC') </msg>
<status status="PASS" starttime="20200402 21:14:37.717" endtime="20200402 21:14:37.723"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:42.724" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:37.723" endtime="20200402 21:14:42.724"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:14:42.724" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:14:42.726" level="INFO">${list} = ((4352,),)</msg>
<status status="PASS" starttime="20200402 21:14:42.724" endtime="20200402 21:14:42.726"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:14:42.726" endtime="20200402 21:14:42.726"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:14:42.727" level="INFO">${list} = [4352]</msg>
<status status="PASS" starttime="20200402 21:14:42.727" endtime="20200402 21:14:42.727"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:14:42.728" level="INFO">${Count3} = 4352</msg>
<status status="PASS" starttime="20200402 21:14:42.727" endtime="20200402 21:14:42.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:47.729" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:42.728" endtime="20200402 21:14:47.729"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:14:47.760" level="INFO">${Total_View} = 183 views</msg>
<status status="PASS" starttime="20200402 21:14:47.729" endtime="20200402 21:14:47.760"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:14:47.761" level="INFO">${Total_View} = 183 views</msg>
<status status="PASS" starttime="20200402 21:14:47.760" endtime="20200402 21:14:47.761"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:14:47.761" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '183 views' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:14:47.761" endtime="20200402 21:14:47.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:52.767" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:47.767" endtime="20200402 21:14:52.767"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:14:52.797" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:14:52.767" endtime="20200402 21:14:52.797"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:14:52.797" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:14:52.797" endtime="20200402 21:14:52.797"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:14:52.798" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:14:52.797" endtime="20200402 21:14:52.804"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:14:57.805" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:52.804" endtime="20200402 21:14:57.805"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:14:57.971" level="INFO">${Duration} = 52 minutes</msg>
<status status="PASS" starttime="20200402 21:14:57.805" endtime="20200402 21:14:57.971"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:14:57.972" level="INFO">${Duration} = 52 minutes</msg>
<status status="PASS" starttime="20200402 21:14:57.971" endtime="20200402 21:14:57.972"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:14:57.972" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '52 minutes' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:14:57.972" endtime="20200402 21:14:57.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:02.981" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:14:57.979" endtime="20200402 21:15:02.981"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:15:03.000" level="INFO">${URL} = https://www.youtube.com/watch?v=CLLMMA9IX-U</msg>
<status status="PASS" starttime="20200402 21:15:02.981" endtime="20200402 21:15:03.000"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:15:03.001" level="INFO">${URL} = https://www.youtube.com/watch?v=CLLMMA9IX-U</msg>
<status status="PASS" starttime="20200402 21:15:03.001" endtime="20200402 21:15:03.001"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:03.001" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=CLLMMA9IX-U' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:03.001" endtime="20200402 21:15:03.008"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:15:03.010" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:15:03.009" endtime="20200402 21:15:03.430"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:15:03.430" endtime="20200402 21:15:03.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:15:13.442" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:15:03.441" endtime="20200402 21:15:13.442"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:15:13.442" level="INFO">Opening url 'https://www.youtube.com/watch?v=CLLMMA9IX-U'</msg>
<status status="PASS" starttime="20200402 21:15:13.442" endtime="20200402 21:15:16.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:15:26.225" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:15:16.223" endtime="20200402 21:15:26.225"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:15:26.259" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:15:26.225" endtime="20200402 21:15:26.259"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:15:26.259" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:15:26.259" endtime="20200402 21:15:26.260"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:26.260" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:26.260" endtime="20200402 21:15:26.267"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:31.268" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:26.267" endtime="20200402 21:15:31.268"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:15:31.303" level="INFO">${Full_View_Count} = 342 views</msg>
<status status="PASS" starttime="20200402 21:15:31.268" endtime="20200402 21:15:31.303"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:15:31.304" level="INFO">${Full_View_Count} = 342 views</msg>
<status status="PASS" starttime="20200402 21:15:31.304" endtime="20200402 21:15:31.304"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:31.305" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='342 views' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:31.304" endtime="20200402 21:15:31.311"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:36.312" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:31.311" endtime="20200402 21:15:36.312"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:15:36.354" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:15:36.312" endtime="20200402 21:15:36.354"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:15:36.355" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:15:36.355" endtime="20200402 21:15:36.355"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:15:36.355" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4352' </msg>
<status status="PASS" starttime="20200402 21:15:36.355" endtime="20200402 21:15:36.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:41.365" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:36.363" endtime="20200402 21:15:41.365"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:15:41.631" level="INFO">${Total_Likes} = 6</msg>
<status status="PASS" starttime="20200402 21:15:41.365" endtime="20200402 21:15:41.632"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:15:41.632" level="INFO">${Total_Likes} = 6</msg>
<status status="PASS" starttime="20200402 21:15:41.632" endtime="20200402 21:15:41.632"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:41.633" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='6' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:41.632" endtime="20200402 21:15:41.639"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:46.641" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:41.639" endtime="20200402 21:15:46.641"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:15:46.674" level="INFO">${Total_Dis_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:15:46.641" endtime="20200402 21:15:46.674"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:15:46.675" level="INFO">${Total_Dis_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:15:46.675" endtime="20200402 21:15:46.675"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:46.676" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='2' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:46.675" endtime="20200402 21:15:46.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:51.682" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:46.682" endtime="20200402 21:15:51.682"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:15:54.572" level="INFO">${Total_Subscribers} = 21 subscribers</msg>
<status status="PASS" starttime="20200402 21:15:51.682" endtime="20200402 21:15:54.572"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:15:54.573" level="INFO">${Total_Subscribers} = 21 subscribers</msg>
<status status="PASS" starttime="20200402 21:15:54.573" endtime="20200402 21:15:54.573"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:54.573" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '21 subscribers' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:54.573" endtime="20200402 21:15:54.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:15:59.582" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:15:54.581" endtime="20200402 21:15:59.582"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:15:59.719" level="INFO">${Channel_Name} = U.S CoronaVirus News Update</msg>
<status status="PASS" starttime="20200402 21:15:59.582" endtime="20200402 21:15:59.719"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:15:59.720" level="INFO">${Channel_Name} = U.S CoronaVirus News Update</msg>
<status status="PASS" starttime="20200402 21:15:59.719" endtime="20200402 21:15:59.720"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:15:59.720" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'U.S CoronaVirus News Update' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:15:59.720" endtime="20200402 21:15:59.726"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:15:59.727" endtime="20200402 21:16:01.228"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:16:16.229" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:16:01.228" endtime="20200402 21:16:16.229"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:16:16.230" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:16:16.230" endtime="20200402 21:16:16.502"></status>
</kw>
<status status="PASS" starttime="20200402 21:16:16.229" endtime="20200402 21:16:16.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:16:26.505" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:16:16.503" endtime="20200402 21:16:26.505"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:16:26.646" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:16:26.506" endtime="20200402 21:16:26.647"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:16:26.647" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:16:26.647" endtime="20200402 21:16:26.647"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:16:26.648" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:16:26.647" endtime="20200402 21:16:26.654"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:16:31.656" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:16:26.654" endtime="20200402 21:16:31.656"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:16:31.691" level="INFO">${Description} = #morningjoe #covid19
Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC</msg>
<status status="PASS" starttime="20200402 21:16:31.656" endtime="20200402 21:16:31.692"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:16:31.692" level="INFO">${Description} = #morningjoe #covid19
Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC</msg>
<status status="PASS" starttime="20200402 21:16:31.692" endtime="20200402 21:16:31.692"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:16:31.693" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '#morningjoe #covid19
Full Morning Joe 6AM 4/1/2020 - U.S CoronaVirus News Trump News MSNBC' where id=4352 </msg>
<status status="PASS" starttime="20200402 21:16:31.692" endtime="20200402 21:16:31.699"></status>
</kw>
<status status="PASS" starttime="20200402 21:15:03.009" endtime="20200402 21:16:31.699"></status>
</kw>
<status status="PASS" starttime="20200402 21:15:03.009" endtime="20200402 21:16:31.699"></status>
</kw>
<status status="PASS" starttime="20200402 21:14:32.658" endtime="20200402 21:16:31.699"></status>
</kw>
<msg timestamp="20200402 21:16:31.699" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:14:32.658" endtime="20200402 21:16:31.699"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:16:31.700" level="INFO">${Count2} = 21</msg>
<status status="PASS" starttime="20200402 21:16:31.699" endtime="20200402 21:16:31.700"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:16:31.700" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:16:31.700" endtime="20200402 21:16:31.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:16:31.701" endtime="20200402 21:16:31.768"></status>
</kw>
<status status="PASS" starttime="20200402 21:16:31.700" endtime="20200402 21:16:31.768"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:16:31.769" endtime="20200402 21:16:31.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:16:36.779" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:16:31.778" endtime="20200402 21:16:36.779"></status>
</kw>
<status status="PASS" starttime="20200402 21:14:22.656" endtime="20200402 21:16:36.779"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;8699f97b-8277-4eb8-beed-276fa4518946&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:16:46.781" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:16:36.779" endtime="20200402 21:16:46.781"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:16:46.781" endtime="20200402 21:16:46.781"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:16:51.783" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:16:46.782" endtime="20200402 21:16:51.783"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:16:51.822" level="INFO">${Title} = Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:16:51.783" endtime="20200402 21:16:51.822"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:16:51.823" level="INFO">${Title} = Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:16:51.822" endtime="20200402 21:16:51.823"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:16:51.823" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:16:51.823" endtime="20200402 21:16:51.829"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:16:56.830" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:16:51.829" endtime="20200402 21:16:56.830"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:16:56.830" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:16:56.832" level="INFO">${list} = ((4353,),)</msg>
<status status="PASS" starttime="20200402 21:16:56.830" endtime="20200402 21:16:56.832"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:16:56.832" endtime="20200402 21:16:56.833"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:16:56.833" level="INFO">${list} = [4353]</msg>
<status status="PASS" starttime="20200402 21:16:56.833" endtime="20200402 21:16:56.833"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:16:56.834" level="INFO">${Count3} = 4353</msg>
<status status="PASS" starttime="20200402 21:16:56.833" endtime="20200402 21:16:56.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:01.835" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:16:56.834" endtime="20200402 21:17:01.835"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:17:01.866" level="INFO">${Total_View} = 65 views</msg>
<status status="PASS" starttime="20200402 21:17:01.835" endtime="20200402 21:17:01.866"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:17:01.867" level="INFO">${Total_View} = 65 views</msg>
<status status="PASS" starttime="20200402 21:17:01.867" endtime="20200402 21:17:01.867"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:01.868" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '65 views' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:01.867" endtime="20200402 21:17:01.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:06.874" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:01.874" endtime="20200402 21:17:06.874"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:17:06.904" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:17:06.874" endtime="20200402 21:17:06.905"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:17:06.905" level="INFO">${Video_Rendered_Before} = 8 hours ago</msg>
<status status="PASS" starttime="20200402 21:17:06.905" endtime="20200402 21:17:06.905"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:06.906" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '8 hours ago' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:06.905" endtime="20200402 21:17:06.912"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:11.914" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:06.912" endtime="20200402 21:17:11.914"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:17:11.981" level="INFO">${Duration} = 53 minutes</msg>
<status status="PASS" starttime="20200402 21:17:11.914" endtime="20200402 21:17:11.982"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:17:11.982" level="INFO">${Duration} = 53 minutes</msg>
<status status="PASS" starttime="20200402 21:17:11.982" endtime="20200402 21:17:11.982"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:11.983" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '53 minutes' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:11.982" endtime="20200402 21:17:11.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:16.991" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:11.991" endtime="20200402 21:17:16.991"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:17:17.016" level="INFO">${URL} = https://www.youtube.com/watch?v=kzrYEeXh_M0</msg>
<status status="PASS" starttime="20200402 21:17:16.991" endtime="20200402 21:17:17.016"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:17:17.016" level="INFO">${URL} = https://www.youtube.com/watch?v=kzrYEeXh_M0</msg>
<status status="PASS" starttime="20200402 21:17:17.016" endtime="20200402 21:17:17.017"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:17.017" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=kzrYEeXh_M0' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:17.017" endtime="20200402 21:17:17.024"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:17:17.025" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:17:17.025" endtime="20200402 21:17:17.561"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:17:17.561" endtime="20200402 21:17:17.578"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:17:27.579" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:17:17.578" endtime="20200402 21:17:27.579"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:17:27.579" level="INFO">Opening url 'https://www.youtube.com/watch?v=kzrYEeXh_M0'</msg>
<status status="PASS" starttime="20200402 21:17:27.579" endtime="20200402 21:17:31.603"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:17:41.604" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:17:31.603" endtime="20200402 21:17:41.604"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:17:41.639" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:17:41.604" endtime="20200402 21:17:41.639"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:17:41.640" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:17:41.640" endtime="20200402 21:17:41.640"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:41.640" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:41.640" endtime="20200402 21:17:41.647"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:46.649" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:41.647" endtime="20200402 21:17:46.650"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:17:46.712" level="INFO">${Full_View_Count} = 308 views</msg>
<status status="PASS" starttime="20200402 21:17:46.650" endtime="20200402 21:17:46.712"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:17:46.713" level="INFO">${Full_View_Count} = 308 views</msg>
<status status="PASS" starttime="20200402 21:17:46.712" endtime="20200402 21:17:46.713"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:46.713" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='308 views' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:46.713" endtime="20200402 21:17:46.720"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:51.722" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:46.721" endtime="20200402 21:17:51.722"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:17:51.753" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:17:51.722" endtime="20200402 21:17:51.753"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:17:51.753" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:17:51.753" endtime="20200402 21:17:51.753"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:17:51.754" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4353' </msg>
<status status="PASS" starttime="20200402 21:17:51.754" endtime="20200402 21:17:51.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:17:56.761" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:51.760" endtime="20200402 21:17:56.761"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:17:57.358" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:17:56.761" endtime="20200402 21:17:57.358"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:17:57.358" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:17:57.358" endtime="20200402 21:17:57.359"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:17:57.359" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:17:57.359" endtime="20200402 21:17:57.366"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:18:02.367" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:17:57.366" endtime="20200402 21:18:02.367"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:18:02.395" level="INFO">${Total_Dis_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:18:02.367" endtime="20200402 21:18:02.395"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:18:02.396" level="INFO">${Total_Dis_Likes} = 8</msg>
<status status="PASS" starttime="20200402 21:18:02.396" endtime="20200402 21:18:02.396"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:18:02.396" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='8' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:18:02.396" endtime="20200402 21:18:02.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:18:07.404" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:18:02.403" endtime="20200402 21:18:07.404"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:18:07.436" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:18:07.404" endtime="20200402 21:18:07.436"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:18:07.437" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:18:07.436" endtime="20200402 21:18:07.437"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:18:07.437" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '6.61K subscribers' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:18:07.437" endtime="20200402 21:18:07.444"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:18:12.445" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:18:07.444" endtime="20200402 21:18:12.445"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:18:12.492" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:18:12.445" endtime="20200402 21:18:12.492"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:18:12.493" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:18:12.492" endtime="20200402 21:18:12.493"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:18:12.493" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Destor' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:18:12.493" endtime="20200402 21:18:12.501"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:18:12.501" endtime="20200402 21:18:13.858"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:18:28.859" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:18:13.858" endtime="20200402 21:18:28.859"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:18:28.860" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:18:28.860" endtime="20200402 21:18:29.361"></status>
</kw>
<status status="PASS" starttime="20200402 21:18:28.859" endtime="20200402 21:18:29.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:18:39.362" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:18:29.362" endtime="20200402 21:18:39.362"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:18:39.424" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:18:39.362" endtime="20200402 21:18:39.424"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:18:39.425" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:18:39.424" endtime="20200402 21:18:39.425"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:18:39.425" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:18:39.425" endtime="20200402 21:18:39.432"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:18:44.434" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:18:39.432" endtime="20200402 21:18:44.434"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:18:44.462" level="INFO">${Description} = Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:18:44.434" endtime="20200402 21:18:44.462"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:18:44.462" level="INFO">${Description} = Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:18:44.462" endtime="20200402 21:18:44.462"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:18:44.463" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Morning Joe 4/2/20 7AM [NEW] | Morning Joe MSNBC News Today April 2, 2020' where id=4353 </msg>
<status status="PASS" starttime="20200402 21:18:44.462" endtime="20200402 21:18:44.472"></status>
</kw>
<status status="PASS" starttime="20200402 21:17:17.024" endtime="20200402 21:18:44.472"></status>
</kw>
<status status="PASS" starttime="20200402 21:17:17.024" endtime="20200402 21:18:44.472"></status>
</kw>
<status status="PASS" starttime="20200402 21:16:46.782" endtime="20200402 21:18:44.472"></status>
</kw>
<msg timestamp="20200402 21:18:44.472" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:16:46.782" endtime="20200402 21:18:44.472"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:18:44.473" level="INFO">${Count2} = 22</msg>
<status status="PASS" starttime="20200402 21:18:44.472" endtime="20200402 21:18:44.473"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:18:44.473" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:18:44.473" endtime="20200402 21:18:44.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:18:44.474" endtime="20200402 21:18:44.555"></status>
</kw>
<status status="PASS" starttime="20200402 21:18:44.473" endtime="20200402 21:18:44.555"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:18:44.555" endtime="20200402 21:18:44.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:18:49.565" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:18:44.564" endtime="20200402 21:18:49.565"></status>
</kw>
<status status="PASS" starttime="20200402 21:16:36.779" endtime="20200402 21:18:49.565"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;0b59e5a1-5f9c-410f-8c90-969adc25a7bc&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:18:59.568" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:18:49.565" endtime="20200402 21:18:59.568"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:18:59.568" endtime="20200402 21:18:59.569"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:04.571" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:18:59.569" endtime="20200402 21:19:04.571"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:19:04.607" level="INFO">${Title} = MSNBC | April 2, 2020 | Morning Joe 6AM 4/2/20</msg>
<status status="PASS" starttime="20200402 21:19:04.571" endtime="20200402 21:19:04.607"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:19:04.608" level="INFO">${Title} = MSNBC | April 2, 2020 | Morning Joe 6AM 4/2/20</msg>
<status status="PASS" starttime="20200402 21:19:04.608" endtime="20200402 21:19:04.608"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:19:04.608" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MSNBC | April 2, 2020 | Morning Joe 6AM 4/2/20') </msg>
<status status="PASS" starttime="20200402 21:19:04.608" endtime="20200402 21:19:04.615"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:09.616" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:04.615" endtime="20200402 21:19:09.616"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:19:09.616" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:19:09.618" level="INFO">${list} = ((4354,),)</msg>
<status status="PASS" starttime="20200402 21:19:09.616" endtime="20200402 21:19:09.618"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:19:09.618" endtime="20200402 21:19:09.618"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:19:09.619" level="INFO">${list} = [4354]</msg>
<status status="PASS" starttime="20200402 21:19:09.618" endtime="20200402 21:19:09.619"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:19:09.619" level="INFO">${Count3} = 4354</msg>
<status status="PASS" starttime="20200402 21:19:09.619" endtime="20200402 21:19:09.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:14.620" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:09.619" endtime="20200402 21:19:14.620"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:19:14.649" level="INFO">${Total_View} = 129 views</msg>
<status status="PASS" starttime="20200402 21:19:14.620" endtime="20200402 21:19:14.649"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:19:14.650" level="INFO">${Total_View} = 129 views</msg>
<status status="PASS" starttime="20200402 21:19:14.649" endtime="20200402 21:19:14.650"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:14.650" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '129 views' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:14.650" endtime="20200402 21:19:14.656"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:19.658" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:14.656" endtime="20200402 21:19:19.658"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:19:19.699" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:19:19.658" endtime="20200402 21:19:19.699"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:19:19.700" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:19:19.699" endtime="20200402 21:19:19.700"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:19.700" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:19.700" endtime="20200402 21:19:19.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:24.707" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:19.707" endtime="20200402 21:19:24.707"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:19:24.740" level="INFO">${Duration} = 25 seconds</msg>
<status status="PASS" starttime="20200402 21:19:24.707" endtime="20200402 21:19:24.740"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:19:24.741" level="INFO">${Duration} = 25 seconds</msg>
<status status="PASS" starttime="20200402 21:19:24.740" endtime="20200402 21:19:24.741"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:24.741" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '25 seconds' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:24.741" endtime="20200402 21:19:24.748"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:29.750" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:24.748" endtime="20200402 21:19:29.750"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:19:29.771" level="INFO">${URL} = https://www.youtube.com/watch?v=RaPXxxWSiwM</msg>
<status status="PASS" starttime="20200402 21:19:29.750" endtime="20200402 21:19:29.771"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:19:29.772" level="INFO">${URL} = https://www.youtube.com/watch?v=RaPXxxWSiwM</msg>
<status status="PASS" starttime="20200402 21:19:29.772" endtime="20200402 21:19:29.772"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:29.772" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=RaPXxxWSiwM' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:29.772" endtime="20200402 21:19:29.779"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:19:29.780" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:19:29.780" endtime="20200402 21:19:30.203"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:19:30.203" endtime="20200402 21:19:30.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:19:40.212" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:19:30.211" endtime="20200402 21:19:40.212"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:19:40.212" level="INFO">Opening url 'https://www.youtube.com/watch?v=RaPXxxWSiwM'</msg>
<status status="PASS" starttime="20200402 21:19:40.212" endtime="20200402 21:19:43.405"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:19:53.406" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:19:43.405" endtime="20200402 21:19:53.406"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:19:53.434" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:19:53.406" endtime="20200402 21:19:53.434"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:19:53.434" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:19:53.434" endtime="20200402 21:19:53.434"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:53.435" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:53.434" endtime="20200402 21:19:53.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:19:58.444" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:53.443" endtime="20200402 21:19:58.444"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:19:58.474" level="INFO">${Full_View_Count} = 252 views</msg>
<status status="PASS" starttime="20200402 21:19:58.444" endtime="20200402 21:19:58.474"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:19:58.474" level="INFO">${Full_View_Count} = 252 views</msg>
<status status="PASS" starttime="20200402 21:19:58.474" endtime="20200402 21:19:58.474"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:19:58.475" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='252 views' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:19:58.475" endtime="20200402 21:19:58.481"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:03.482" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:19:58.481" endtime="20200402 21:20:03.482"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:20:03.506" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:20:03.482" endtime="20200402 21:20:03.506"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:20:03.507" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:20:03.507" endtime="20200402 21:20:03.507"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:20:03.507" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4354' </msg>
<status status="PASS" starttime="20200402 21:20:03.507" endtime="20200402 21:20:03.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:08.516" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:03.514" endtime="20200402 21:20:08.516"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:20:08.547" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:20:08.516" endtime="20200402 21:20:08.547"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:20:08.548" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:20:08.547" endtime="20200402 21:20:08.548"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:08.548" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:08.548" endtime="20200402 21:20:08.554"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:13.555" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:08.554" endtime="20200402 21:20:13.555"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:20:13.582" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:20:13.555" endtime="20200402 21:20:13.582"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:20:13.583" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:20:13.583" endtime="20200402 21:20:13.583"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:13.584" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='1' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:13.583" endtime="20200402 21:20:13.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:18.592" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:13.590" endtime="20200402 21:20:18.592"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:20:18.625" level="INFO">${Total_Subscribers} = 23.4M subscribers</msg>
<status status="PASS" starttime="20200402 21:20:18.592" endtime="20200402 21:20:18.626"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:20:18.626" level="INFO">${Total_Subscribers} = 23.4M subscribers</msg>
<status status="PASS" starttime="20200402 21:20:18.626" endtime="20200402 21:20:18.626"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:18.627" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '23.4M subscribers' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:18.627" endtime="20200402 21:20:18.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:23.635" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:18.634" endtime="20200402 21:20:23.635"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:20:23.669" level="INFO">${Channel_Name} = The Late Late Show with James Corden</msg>
<status status="PASS" starttime="20200402 21:20:23.635" endtime="20200402 21:20:23.669"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:20:23.670" level="INFO">${Channel_Name} = The Late Late Show with James Corden</msg>
<status status="PASS" starttime="20200402 21:20:23.670" endtime="20200402 21:20:23.670"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:23.671" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'The Late Late Show with James Corden' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:23.670" endtime="20200402 21:20:23.677"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:20:23.678" endtime="20200402 21:20:25.969"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:20:40.971" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:20:25.970" endtime="20200402 21:20:40.971"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:20:40.972" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:20:40.971" endtime="20200402 21:20:41.121"></status>
</kw>
<status status="PASS" starttime="20200402 21:20:40.971" endtime="20200402 21:20:41.121"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:20:51.124" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:20:41.121" endtime="20200402 21:20:51.124"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:20:51.292" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:20:51.124" endtime="20200402 21:20:51.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:20:51.293" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:20:51.292" endtime="20200402 21:20:51.293"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:51.293" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Entertainment' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:51.293" endtime="20200402 21:20:51.300"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:20:56.301" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:51.300" endtime="20200402 21:20:56.301"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:20:56.349" level="INFO">${Description} = James Corden connects with super group BTS who perform their hit song "Boy with Luv" while in quarantine in South Korea.

More Late Late Show:
Subscribe: http://bit.ly/CordenYouTube
Watch Full Episode...</msg>
<status status="PASS" starttime="20200402 21:20:56.301" endtime="20200402 21:20:56.349"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:20:56.349" level="INFO">${Description} = James Corden connects with super group BTS who perform their hit song "Boy with Luv" while in quarantine in South Korea.

More Late Late Show:
Subscribe: http://bit.ly/CordenYouTube
Watch Full Episode...</msg>
<status status="PASS" starttime="20200402 21:20:56.349" endtime="20200402 21:20:56.349"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:20:56.350" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'James Corden connects with super group BTS who perform their hit song "Boy with Luv" while in quarantine in South Korea.

More Late Late Show:
Subscribe: http://bit.ly/CordenYouTube
Watch Full Episodes: http://bit.ly/1ENyPw4
Facebook: http://on.fb.me/19PIHLC
Twitter: http://bit.ly/1Iv0q6k
Instagram: http://bit.ly/latelategram

Watch The Late Late Show with James Corden weeknights at 12:35 AM ET/11:35 PM CT. Only on CBS.

Get new episodes of shows you love across devices the next day, stream live TV, and watch full seasons of CBS fan favorites anytime, anywhere with CBS All Access. Try it free! http://bit.ly/1OQA29B

---
Each week night, THE LATE LATE SHOW with JAMES CORDEN throws the ultimate late night after party with a mix of celebrity guests, edgy musical acts, games and sketches. Corden differentiates his show by offering viewers a peek behind-the-scenes into the green room, bringing all of his guests out at once and lending his musical and acting talents to various sketches. Additionally, bandleader Reggie Watts and the house band provide original, improvised music throughout the show. Since Corden took the reigns as host in March 2015, he has quickly become known for generating buzzworthy viral videos, such as Carpool Karaoke."' where id=4354 </msg>
<status status="PASS" starttime="20200402 21:20:56.350" endtime="20200402 21:20:56.357"></status>
</kw>
<status status="PASS" starttime="20200402 21:19:29.779" endtime="20200402 21:20:56.357"></status>
</kw>
<status status="PASS" starttime="20200402 21:19:29.779" endtime="20200402 21:20:56.357"></status>
</kw>
<status status="PASS" starttime="20200402 21:18:59.569" endtime="20200402 21:20:56.357"></status>
</kw>
<msg timestamp="20200402 21:20:56.357" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:18:59.569" endtime="20200402 21:20:56.357"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:20:56.358" level="INFO">${Count2} = 23</msg>
<status status="PASS" starttime="20200402 21:20:56.357" endtime="20200402 21:20:56.358"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:20:56.358" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:20:56.358" endtime="20200402 21:20:56.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:20:56.359" endtime="20200402 21:20:56.449"></status>
</kw>
<status status="PASS" starttime="20200402 21:20:56.359" endtime="20200402 21:20:56.449"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:20:56.450" endtime="20200402 21:20:56.456"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:01.457" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:20:56.456" endtime="20200402 21:21:01.457"></status>
</kw>
<status status="PASS" starttime="20200402 21:18:49.565" endtime="20200402 21:21:01.457"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;1270d2e7-b7c6-4181-ae6a-4fa86315ca4e&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:21:11.459" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:21:01.458" endtime="20200402 21:21:11.459"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:21:11.459" endtime="20200402 21:21:11.460"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:16.463" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:11.461" endtime="20200402 21:21:16.463"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:21:16.541" level="INFO">${Title} = FULL MSNBC MORNING JOE 4/01/20 | MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:21:16.463" endtime="20200402 21:21:16.541"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:21:16.541" level="INFO">${Title} = FULL MSNBC MORNING JOE 4/01/20 | MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:21:16.541" endtime="20200402 21:21:16.541"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:21:16.542" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL MSNBC MORNING JOE 4/01/20 | MSNBC Trump Breaking News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:21:16.542" endtime="20200402 21:21:16.548"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:21.549" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:16.548" endtime="20200402 21:21:21.549"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:21:21.549" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:21:21.551" level="INFO">${list} = ((4355,),)</msg>
<status status="PASS" starttime="20200402 21:21:21.549" endtime="20200402 21:21:21.551"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:21:21.551" endtime="20200402 21:21:21.551"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:21:21.552" level="INFO">${list} = [4355]</msg>
<status status="PASS" starttime="20200402 21:21:21.551" endtime="20200402 21:21:21.552"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:21:21.552" level="INFO">${Count3} = 4355</msg>
<status status="PASS" starttime="20200402 21:21:21.552" endtime="20200402 21:21:21.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:26.553" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:21.553" endtime="20200402 21:21:26.553"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:21:26.582" level="INFO">${Total_View} = 141 views</msg>
<status status="PASS" starttime="20200402 21:21:26.553" endtime="20200402 21:21:26.583"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:21:26.583" level="INFO">${Total_View} = 141 views</msg>
<status status="PASS" starttime="20200402 21:21:26.583" endtime="20200402 21:21:26.583"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:21:26.584" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '141 views' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:21:26.583" endtime="20200402 21:21:26.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:31.591" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:26.590" endtime="20200402 21:21:31.591"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:21:31.627" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:21:31.591" endtime="20200402 21:21:31.627"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:21:31.627" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:21:31.627" endtime="20200402 21:21:31.627"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:21:31.628" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:21:31.627" endtime="20200402 21:21:31.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:36.637" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:31.635" endtime="20200402 21:21:36.637"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:21:36.753" level="INFO">${Duration} = 35 minutes</msg>
<status status="PASS" starttime="20200402 21:21:36.637" endtime="20200402 21:21:36.753"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:21:36.754" level="INFO">${Duration} = 35 minutes</msg>
<status status="PASS" starttime="20200402 21:21:36.753" endtime="20200402 21:21:36.754"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:21:36.754" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '35 minutes' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:21:36.754" endtime="20200402 21:21:36.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:21:41.761" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:21:36.760" endtime="20200402 21:21:41.761"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:21:41.781" level="INFO">${URL} = https://www.youtube.com/watch?v=rG2091cZnfM</msg>
<status status="PASS" starttime="20200402 21:21:41.761" endtime="20200402 21:21:41.781"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:21:41.782" level="INFO">${URL} = https://www.youtube.com/watch?v=rG2091cZnfM</msg>
<status status="PASS" starttime="20200402 21:21:41.781" endtime="20200402 21:21:41.782"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:21:41.782" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=rG2091cZnfM' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:21:41.782" endtime="20200402 21:21:41.789"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:21:41.791" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:21:41.790" endtime="20200402 21:21:42.210"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:21:42.210" endtime="20200402 21:21:42.218"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:21:52.219" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:21:42.218" endtime="20200402 21:21:52.219"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:21:52.219" level="INFO">Opening url 'https://www.youtube.com/watch?v=rG2091cZnfM'</msg>
<status status="PASS" starttime="20200402 21:21:52.219" endtime="20200402 21:21:55.013"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:22:05.015" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:21:55.014" endtime="20200402 21:22:05.015"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:22:05.171" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:22:05.015" endtime="20200402 21:22:05.171"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:22:05.172" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:22:05.171" endtime="20200402 21:22:05.172"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:05.173" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:05.172" endtime="20200402 21:22:05.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:10.180" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:05.179" endtime="20200402 21:22:10.180"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:22:10.209" level="INFO">${Full_View_Count} = 246 views</msg>
<status status="PASS" starttime="20200402 21:22:10.180" endtime="20200402 21:22:10.209"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:22:10.210" level="INFO">${Full_View_Count} = 246 views</msg>
<status status="PASS" starttime="20200402 21:22:10.209" endtime="20200402 21:22:10.210"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:10.210" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='246 views' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:10.210" endtime="20200402 21:22:10.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:15.218" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:10.217" endtime="20200402 21:22:15.218"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:22:15.253" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:22:15.218" endtime="20200402 21:22:15.253"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:22:15.253" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:22:15.253" endtime="20200402 21:22:15.253"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:22:15.254" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4355' </msg>
<status status="PASS" starttime="20200402 21:22:15.254" endtime="20200402 21:22:15.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:20.264" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:15.261" endtime="20200402 21:22:20.264"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:22:20.303" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:22:20.264" endtime="20200402 21:22:20.303"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:22:20.304" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:22:20.303" endtime="20200402 21:22:20.304"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:20.304" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:20.304" endtime="20200402 21:22:20.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:25.311" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:20.311" endtime="20200402 21:22:25.311"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:22:25.363" level="INFO">${Total_Dis_Likes} = 12</msg>
<status status="PASS" starttime="20200402 21:22:25.311" endtime="20200402 21:22:25.363"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:22:25.364" level="INFO">${Total_Dis_Likes} = 12</msg>
<status status="PASS" starttime="20200402 21:22:25.364" endtime="20200402 21:22:25.364"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:25.364" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='12' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:25.364" endtime="20200402 21:22:25.371"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:30.371" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:25.371" endtime="20200402 21:22:30.371"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:22:30.403" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:22:30.371" endtime="20200402 21:22:30.403"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:22:30.404" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:22:30.403" endtime="20200402 21:22:30.404"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:30.404" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:30.404" endtime="20200402 21:22:30.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:22:35.412" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:22:30.412" endtime="20200402 21:22:35.412"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:22:35.443" level="INFO">${Channel_Name} = Jackson Mcgonigal</msg>
<status status="PASS" starttime="20200402 21:22:35.412" endtime="20200402 21:22:35.444"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:22:35.444" level="INFO">${Channel_Name} = Jackson Mcgonigal</msg>
<status status="PASS" starttime="20200402 21:22:35.444" endtime="20200402 21:22:35.444"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:22:35.445" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Jackson Mcgonigal' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:22:35.444" endtime="20200402 21:22:35.451"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:22:35.451" endtime="20200402 21:22:36.929"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:22:51.930" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:22:36.929" endtime="20200402 21:22:51.930"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:22:51.931" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:22:51.930" endtime="20200402 21:22:52.066"></status>
</kw>
<status status="PASS" starttime="20200402 21:22:51.930" endtime="20200402 21:22:52.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:23:02.067" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:22:52.066" endtime="20200402 21:23:02.067"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:23:02.543" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:23:02.067" endtime="20200402 21:23:02.543"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:23:02.544" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:23:02.543" endtime="20200402 21:23:02.544"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:02.544" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Entertainment' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:23:02.544" endtime="20200402 21:23:02.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:07.555" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:02.552" endtime="20200402 21:23:07.555"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:23:07.583" level="INFO">${Description} = FULL MSNBC MORNING JOE 4/01/20  |  MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:23:07.555" endtime="20200402 21:23:07.583"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:23:07.584" level="INFO">${Description} = FULL MSNBC MORNING JOE 4/01/20  |  MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:23:07.584" endtime="20200402 21:23:07.584"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:07.584" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL MSNBC MORNING JOE 4/01/20  |  MSNBC Trump Breaking News April 2, 2020' where id=4355 </msg>
<status status="PASS" starttime="20200402 21:23:07.584" endtime="20200402 21:23:07.591"></status>
</kw>
<status status="PASS" starttime="20200402 21:21:41.790" endtime="20200402 21:23:07.591"></status>
</kw>
<status status="PASS" starttime="20200402 21:21:41.789" endtime="20200402 21:23:07.591"></status>
</kw>
<status status="PASS" starttime="20200402 21:21:11.460" endtime="20200402 21:23:07.591"></status>
</kw>
<msg timestamp="20200402 21:23:07.591" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:21:11.460" endtime="20200402 21:23:07.591"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:23:07.592" level="INFO">${Count2} = 24</msg>
<status status="PASS" starttime="20200402 21:23:07.592" endtime="20200402 21:23:07.592"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:23:07.592" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:23:07.592" endtime="20200402 21:23:07.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:23:07.593" endtime="20200402 21:23:07.660"></status>
</kw>
<status status="PASS" starttime="20200402 21:23:07.593" endtime="20200402 21:23:07.660"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:23:07.660" endtime="20200402 21:23:07.667"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:12.668" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:07.667" endtime="20200402 21:23:12.668"></status>
</kw>
<status status="PASS" starttime="20200402 21:21:01.457" endtime="20200402 21:23:12.668"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;5782c58f-695e-489f-9283-c66d6cf87cd6&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:23:22.669" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:23:12.668" endtime="20200402 21:23:22.669"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:23:22.669" endtime="20200402 21:23:22.670"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:27.673" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:22.671" endtime="20200402 21:23:27.673"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:23:27.705" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump's 'Nasty' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 21:23:27.673" endtime="20200402 21:23:27.705"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:23:27.706" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 21:23:27.705" endtime="20200402 21:23:27.706"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:23:27.706" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 21:23:27.706" endtime="20200402 21:23:27.712"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:32.713" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:27.712" endtime="20200402 21:23:32.713"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:23:32.713" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:23:32.715" level="INFO">${list} = ((4356,),)</msg>
<status status="PASS" starttime="20200402 21:23:32.713" endtime="20200402 21:23:32.715"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:23:32.715" endtime="20200402 21:23:32.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:23:32.716" level="INFO">${list} = [4356]</msg>
<status status="PASS" starttime="20200402 21:23:32.715" endtime="20200402 21:23:32.716"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:23:32.716" level="INFO">${Count3} = 4356</msg>
<status status="PASS" starttime="20200402 21:23:32.716" endtime="20200402 21:23:32.716"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:37.718" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:32.716" endtime="20200402 21:23:37.718"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:23:37.840" level="INFO">${Total_View} = 21 views</msg>
<status status="PASS" starttime="20200402 21:23:37.718" endtime="20200402 21:23:37.840"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:23:37.841" level="INFO">${Total_View} = 21 views</msg>
<status status="PASS" starttime="20200402 21:23:37.840" endtime="20200402 21:23:37.841"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:37.841" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '21 views' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:23:37.841" endtime="20200402 21:23:37.847"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:42.849" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:37.848" endtime="20200402 21:23:42.849"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:23:42.877" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:23:42.849" endtime="20200402 21:23:42.877"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:23:42.878" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:23:42.877" endtime="20200402 21:23:42.878"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:42.878" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:23:42.878" endtime="20200402 21:23:42.884"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:47.885" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:42.885" endtime="20200402 21:23:47.885"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:23:47.922" level="INFO">${Duration} = 4 minutes, 9 seconds</msg>
<status status="PASS" starttime="20200402 21:23:47.885" endtime="20200402 21:23:47.922"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:23:47.922" level="INFO">${Duration} = 4 minutes, 9 seconds</msg>
<status status="PASS" starttime="20200402 21:23:47.922" endtime="20200402 21:23:47.922"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:47.923" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '4 minutes, 9 seconds' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:23:47.923" endtime="20200402 21:23:47.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:23:52.931" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:23:47.930" endtime="20200402 21:23:52.931"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:23:52.962" level="INFO">${URL} = https://www.youtube.com/watch?v=Ex1FSUd64D0</msg>
<status status="PASS" starttime="20200402 21:23:52.931" endtime="20200402 21:23:52.962"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:23:52.963" level="INFO">${URL} = https://www.youtube.com/watch?v=Ex1FSUd64D0</msg>
<status status="PASS" starttime="20200402 21:23:52.963" endtime="20200402 21:23:52.963"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:23:52.963" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=Ex1FSUd64D0' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:23:52.963" endtime="20200402 21:23:52.970"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:23:52.971" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:23:52.971" endtime="20200402 21:23:53.408"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:23:53.408" endtime="20200402 21:23:53.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:24:03.417" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:23:53.415" endtime="20200402 21:24:03.417"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:24:03.418" level="INFO">Opening url 'https://www.youtube.com/watch?v=Ex1FSUd64D0'</msg>
<status status="PASS" starttime="20200402 21:24:03.417" endtime="20200402 21:24:06.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:24:16.762" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:24:06.760" endtime="20200402 21:24:16.762"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:24:16.794" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:24:16.762" endtime="20200402 21:24:16.794"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:24:16.795" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:24:16.795" endtime="20200402 21:24:16.795"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:16.795" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:16.795" endtime="20200402 21:24:16.802"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:21.803" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:16.802" endtime="20200402 21:24:21.803"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:24:21.834" level="INFO">${Full_View_Count} = 44 views</msg>
<status status="PASS" starttime="20200402 21:24:21.803" endtime="20200402 21:24:21.834"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:24:21.835" level="INFO">${Full_View_Count} = 44 views</msg>
<status status="PASS" starttime="20200402 21:24:21.835" endtime="20200402 21:24:21.835"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:21.836" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='44 views' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:21.835" endtime="20200402 21:24:21.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:26.843" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:21.843" endtime="20200402 21:24:26.843"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:24:26.870" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:24:26.843" endtime="20200402 21:24:26.870"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:24:26.871" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:24:26.871" endtime="20200402 21:24:26.871"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:24:26.872" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4356' </msg>
<status status="PASS" starttime="20200402 21:24:26.871" endtime="20200402 21:24:26.879"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:31.880" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:26.879" endtime="20200402 21:24:31.880"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:24:31.911" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:24:31.880" endtime="20200402 21:24:31.911"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:24:31.912" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:24:31.911" endtime="20200402 21:24:31.912"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:31.912" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:31.912" endtime="20200402 21:24:31.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:36.919" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:31.919" endtime="20200402 21:24:36.919"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:24:36.947" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:24:36.919" endtime="20200402 21:24:36.947"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:24:36.948" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:24:36.948" endtime="20200402 21:24:36.948"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:36.949" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:36.948" endtime="20200402 21:24:36.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:41.958" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:36.956" endtime="20200402 21:24:41.958"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:24:41.993" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:24:41.958" endtime="20200402 21:24:41.993"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:24:41.994" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:24:41.993" endtime="20200402 21:24:41.994"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:41.994" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:41.994" endtime="20200402 21:24:42.001"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:24:47.003" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:24:42.001" endtime="20200402 21:24:47.003"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:24:47.029" level="INFO">${Channel_Name} = EGM 6K</msg>
<status status="PASS" starttime="20200402 21:24:47.003" endtime="20200402 21:24:47.029"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:24:47.030" level="INFO">${Channel_Name} = EGM 6K</msg>
<status status="PASS" starttime="20200402 21:24:47.030" endtime="20200402 21:24:47.030"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:24:47.030" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'EGM 6K' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:24:47.030" endtime="20200402 21:24:47.037"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:24:47.038" endtime="20200402 21:24:48.468"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:25:03.469" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:24:48.468" endtime="20200402 21:25:03.469"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:25:03.470" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:25:03.469" endtime="20200402 21:25:03.681"></status>
</kw>
<status status="PASS" starttime="20200402 21:25:03.469" endtime="20200402 21:25:03.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:25:13.682" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:25:03.681" endtime="20200402 21:25:13.682"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:25:13.718" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:25:13.682" endtime="20200402 21:25:13.718"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:25:13.719" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:25:13.718" endtime="20200402 21:25:13.719"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:25:13.719" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:25:13.719" endtime="20200402 21:25:13.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:18.727" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:13.726" endtime="20200402 21:25:18.727"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:25:18.803" level="INFO">${Description} = PBS NewsHour's Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a 'nasty question.' Aired on 3/16/2020.
» Subscribe to...</msg>
<status status="PASS" starttime="20200402 21:25:18.727" endtime="20200402 21:25:18.803"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:25:18.803" level="INFO">${Description} = PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe...</msg>
<status status="PASS" starttime="20200402 21:25:18.803" endtime="20200402 21:25:18.803"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:25:18.804" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe to MSNBC: 

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: 
Subscribe to MSNBC Newsletter: 
Find MSNBC on Facebook: 
Follow MSNBC on Twitter: 
Follow MSNBC on Instagram: 

Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC' where id=4356 </msg>
<status status="PASS" starttime="20200402 21:25:18.804" endtime="20200402 21:25:18.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:23:52.970" endtime="20200402 21:25:18.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:23:52.970" endtime="20200402 21:25:18.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:23:22.670" endtime="20200402 21:25:18.811"></status>
</kw>
<msg timestamp="20200402 21:25:18.811" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:23:22.670" endtime="20200402 21:25:18.811"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:25:18.812" level="INFO">${Count2} = 25</msg>
<status status="PASS" starttime="20200402 21:25:18.811" endtime="20200402 21:25:18.812"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:25:18.812" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:25:18.812" endtime="20200402 21:25:18.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:25:18.813" endtime="20200402 21:25:18.971"></status>
</kw>
<status status="PASS" starttime="20200402 21:25:18.812" endtime="20200402 21:25:18.971"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:25:18.971" endtime="20200402 21:25:18.980"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:23.981" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:18.980" endtime="20200402 21:25:23.981"></status>
</kw>
<status status="PASS" starttime="20200402 21:23:12.668" endtime="20200402 21:25:23.981"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;76b262df-cc47-49b4-8ddf-3d6a7c5978c6&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:25:33.983" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:25:23.982" endtime="20200402 21:25:33.983"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:25:33.983" endtime="20200402 21:25:33.984"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:38.985" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:33.985" endtime="20200402 21:25:38.985"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:25:39.017" level="INFO">${Title} = FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020</msg>
<status status="PASS" starttime="20200402 21:25:38.985" endtime="20200402 21:25:39.017"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:25:39.018" level="INFO">${Title} = FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020</msg>
<status status="PASS" starttime="20200402 21:25:39.018" endtime="20200402 21:25:39.018"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:25:39.018" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020') </msg>
<status status="PASS" starttime="20200402 21:25:39.018" endtime="20200402 21:25:39.025"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:44.025" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:39.025" endtime="20200402 21:25:44.025"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:25:44.025" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:25:44.027" level="INFO">${list} = ((4357,),)</msg>
<status status="PASS" starttime="20200402 21:25:44.025" endtime="20200402 21:25:44.027"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:25:44.027" endtime="20200402 21:25:44.028"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:25:44.028" level="INFO">${list} = [4357]</msg>
<status status="PASS" starttime="20200402 21:25:44.028" endtime="20200402 21:25:44.028"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:25:44.029" level="INFO">${Count3} = 4357</msg>
<status status="PASS" starttime="20200402 21:25:44.028" endtime="20200402 21:25:44.029"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:49.030" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:44.029" endtime="20200402 21:25:49.030"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:25:49.061" level="INFO">${Total_View} = 2.6K views</msg>
<status status="PASS" starttime="20200402 21:25:49.030" endtime="20200402 21:25:49.061"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:25:49.062" level="INFO">${Total_View} = 2.6K views</msg>
<status status="PASS" starttime="20200402 21:25:49.061" endtime="20200402 21:25:49.062"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:25:49.062" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '2.6K views' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:25:49.062" endtime="20200402 21:25:49.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:54.070" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:49.069" endtime="20200402 21:25:54.070"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:25:54.101" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:25:54.070" endtime="20200402 21:25:54.101"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:25:54.101" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:25:54.101" endtime="20200402 21:25:54.101"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:25:54.102" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:25:54.101" endtime="20200402 21:25:54.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:25:59.110" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:54.108" endtime="20200402 21:25:59.110"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:25:59.130" level="INFO">${Duration} = 3 minutes, 9 seconds</msg>
<status status="PASS" starttime="20200402 21:25:59.110" endtime="20200402 21:25:59.130"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:25:59.130" level="INFO">${Duration} = 3 minutes, 9 seconds</msg>
<status status="PASS" starttime="20200402 21:25:59.130" endtime="20200402 21:25:59.130"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:25:59.131" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '3 minutes, 9 seconds' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:25:59.131" endtime="20200402 21:25:59.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:04.139" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:25:59.137" endtime="20200402 21:26:04.139"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:26:04.158" level="INFO">${URL} = https://www.youtube.com/watch?v=tHUDOTbI8YU</msg>
<status status="PASS" starttime="20200402 21:26:04.139" endtime="20200402 21:26:04.158"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:26:04.159" level="INFO">${URL} = https://www.youtube.com/watch?v=tHUDOTbI8YU</msg>
<status status="PASS" starttime="20200402 21:26:04.158" endtime="20200402 21:26:04.159"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:04.159" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=tHUDOTbI8YU' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:04.159" endtime="20200402 21:26:04.166"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:26:04.167" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:26:04.167" endtime="20200402 21:26:04.544"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:26:04.544" endtime="20200402 21:26:04.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:26:14.552" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:26:04.551" endtime="20200402 21:26:14.552"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:26:14.552" level="INFO">Opening url 'https://www.youtube.com/watch?v=tHUDOTbI8YU'</msg>
<status status="PASS" starttime="20200402 21:26:14.552" endtime="20200402 21:26:17.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:26:27.480" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:26:17.478" endtime="20200402 21:26:27.480"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:26:27.804" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:26:27.480" endtime="20200402 21:26:27.804"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:26:27.805" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:26:27.804" endtime="20200402 21:26:27.805"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:27.806" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:27.805" endtime="20200402 21:26:27.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:32.814" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:27.812" endtime="20200402 21:26:32.814"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:26:32.842" level="INFO">${Full_View_Count} = 3,262 views</msg>
<status status="PASS" starttime="20200402 21:26:32.814" endtime="20200402 21:26:32.842"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:26:32.843" level="INFO">${Full_View_Count} = 3,262 views</msg>
<status status="PASS" starttime="20200402 21:26:32.843" endtime="20200402 21:26:32.843"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:32.844" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='3,262 views' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:32.843" endtime="20200402 21:26:32.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:37.852" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:32.850" endtime="20200402 21:26:37.852"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:26:37.882" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:26:37.852" endtime="20200402 21:26:37.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:26:37.883" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:26:37.883" endtime="20200402 21:26:37.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:26:37.884" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4357' </msg>
<status status="PASS" starttime="20200402 21:26:37.883" endtime="20200402 21:26:37.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:42.891" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:37.890" endtime="20200402 21:26:42.891"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:26:42.937" level="INFO">${Total_Likes} = 22</msg>
<status status="PASS" starttime="20200402 21:26:42.891" endtime="20200402 21:26:42.937"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:26:42.938" level="INFO">${Total_Likes} = 22</msg>
<status status="PASS" starttime="20200402 21:26:42.937" endtime="20200402 21:26:42.938"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:42.938" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='22' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:42.938" endtime="20200402 21:26:42.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:47.945" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:42.944" endtime="20200402 21:26:47.945"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:26:47.984" level="INFO">${Total_Dis_Likes} = 16</msg>
<status status="PASS" starttime="20200402 21:26:47.945" endtime="20200402 21:26:47.984"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:26:47.985" level="INFO">${Total_Dis_Likes} = 16</msg>
<status status="PASS" starttime="20200402 21:26:47.984" endtime="20200402 21:26:47.985"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:47.985" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='16' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:47.985" endtime="20200402 21:26:47.991"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:52.992" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:47.991" endtime="20200402 21:26:52.992"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:26:53.039" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:26:52.992" endtime="20200402 21:26:53.039"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:26:53.040" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:26:53.039" endtime="20200402 21:26:53.040"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:53.040" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:53.040" endtime="20200402 21:26:53.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:26:58.048" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:26:53.046" endtime="20200402 21:26:58.048"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:26:58.084" level="INFO">${Channel_Name} = DM News</msg>
<status status="PASS" starttime="20200402 21:26:58.048" endtime="20200402 21:26:58.084"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:26:58.084" level="INFO">${Channel_Name} = DM News</msg>
<status status="PASS" starttime="20200402 21:26:58.084" endtime="20200402 21:26:58.084"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:26:58.085" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'DM News' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:26:58.085" endtime="20200402 21:26:58.091"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:26:58.092" endtime="20200402 21:26:59.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:27:14.793" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:26:59.792" endtime="20200402 21:27:14.793"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:27:14.794" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:27:14.794" endtime="20200402 21:27:15.030"></status>
</kw>
<status status="PASS" starttime="20200402 21:27:14.793" endtime="20200402 21:27:15.030"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:27:25.030" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:27:15.030" endtime="20200402 21:27:25.030"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:27:25.057" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:27:25.030" endtime="20200402 21:27:25.057"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:27:25.058" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:27:25.058" endtime="20200402 21:27:25.058"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:27:25.058" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:27:25.058" endtime="20200402 21:27:25.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:27:30.066" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:27:25.065" endtime="20200402 21:27:30.066"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:27:30.100" level="INFO">${Description} = FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020

#BreakingNews #MorningJoe #MSNBCNews</msg>
<status status="PASS" starttime="20200402 21:27:30.066" endtime="20200402 21:27:30.100"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:27:30.101" level="INFO">${Description} = FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020

#BreakingNews #MorningJoe #MSNBCNews</msg>
<status status="PASS" starttime="20200402 21:27:30.101" endtime="20200402 21:27:30.101"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:27:30.101" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL Morning Joe 4/2/20 | Joe and Mika MSNBC News Today April 02, 2020

#BreakingNews #MorningJoe #MSNBCNews' where id=4357 </msg>
<status status="PASS" starttime="20200402 21:27:30.101" endtime="20200402 21:27:30.108"></status>
</kw>
<status status="PASS" starttime="20200402 21:26:04.166" endtime="20200402 21:27:30.108"></status>
</kw>
<status status="PASS" starttime="20200402 21:26:04.166" endtime="20200402 21:27:30.108"></status>
</kw>
<status status="PASS" starttime="20200402 21:25:33.984" endtime="20200402 21:27:30.109"></status>
</kw>
<msg timestamp="20200402 21:27:30.109" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:25:33.984" endtime="20200402 21:27:30.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:27:30.109" level="INFO">${Count2} = 26</msg>
<status status="PASS" starttime="20200402 21:27:30.109" endtime="20200402 21:27:30.109"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:27:30.110" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:27:30.109" endtime="20200402 21:27:30.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:27:30.110" endtime="20200402 21:27:30.181"></status>
</kw>
<status status="PASS" starttime="20200402 21:27:30.110" endtime="20200402 21:27:30.182"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:27:30.182" endtime="20200402 21:27:30.188"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:27:35.189" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:27:30.188" endtime="20200402 21:27:35.189"></status>
</kw>
<status status="PASS" starttime="20200402 21:25:23.981" endtime="20200402 21:27:35.189"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;81876b4f-43d5-4b38-8398-72c9b386aa6e&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:27:45.191" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:27:35.189" endtime="20200402 21:27:45.191"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:27:45.191" endtime="20200402 21:27:45.192"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:27:50.193" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:27:45.193" endtime="20200402 21:27:50.193"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:27:50.344" level="INFO">${Title} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:27:50.193" endtime="20200402 21:27:50.345"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:27:50.345" level="INFO">${Title} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:27:50.345" endtime="20200402 21:27:50.345"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:27:50.346" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:27:50.345" endtime="20200402 21:27:50.353"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:27:55.354" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:27:50.353" endtime="20200402 21:27:55.354"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:27:55.354" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:27:55.356" level="INFO">${list} = ((4358,),)</msg>
<status status="PASS" starttime="20200402 21:27:55.354" endtime="20200402 21:27:55.356"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:27:55.356" endtime="20200402 21:27:55.356"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:27:55.357" level="INFO">${list} = [4358]</msg>
<status status="PASS" starttime="20200402 21:27:55.356" endtime="20200402 21:27:55.357"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:27:55.357" level="INFO">${Count3} = 4358</msg>
<status status="PASS" starttime="20200402 21:27:55.357" endtime="20200402 21:27:55.357"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:00.359" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:27:55.358" endtime="20200402 21:28:00.359"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:28:00.388" level="INFO">${Total_View} = 113 views</msg>
<status status="PASS" starttime="20200402 21:28:00.359" endtime="20200402 21:28:00.388"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:28:00.389" level="INFO">${Total_View} = 113 views</msg>
<status status="PASS" starttime="20200402 21:28:00.388" endtime="20200402 21:28:00.389"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:00.389" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '113 views' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:00.389" endtime="20200402 21:28:00.396"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:05.397" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:00.396" endtime="20200402 21:28:05.397"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:28:05.428" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:28:05.397" endtime="20200402 21:28:05.428"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:28:05.428" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:28:05.428" endtime="20200402 21:28:05.428"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:05.429" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:05.428" endtime="20200402 21:28:05.435"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:10.436" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:05.435" endtime="20200402 21:28:10.436"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:28:10.489" level="INFO">${Duration} = 53 minutes</msg>
<status status="PASS" starttime="20200402 21:28:10.436" endtime="20200402 21:28:10.489"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:28:10.489" level="INFO">${Duration} = 53 minutes</msg>
<status status="PASS" starttime="20200402 21:28:10.489" endtime="20200402 21:28:10.489"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:10.490" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '53 minutes' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:10.490" endtime="20200402 21:28:10.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:15.503" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:10.502" endtime="20200402 21:28:15.503"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:28:15.523" level="INFO">${URL} = https://www.youtube.com/watch?v=D7GkxOq23DQ</msg>
<status status="PASS" starttime="20200402 21:28:15.503" endtime="20200402 21:28:15.523"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:28:15.523" level="INFO">${URL} = https://www.youtube.com/watch?v=D7GkxOq23DQ</msg>
<status status="PASS" starttime="20200402 21:28:15.523" endtime="20200402 21:28:15.523"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:15.524" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=D7GkxOq23DQ' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:15.523" endtime="20200402 21:28:15.532"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:28:15.533" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:28:15.533" endtime="20200402 21:28:15.933"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:28:15.933" endtime="20200402 21:28:15.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:28:25.943" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:28:15.942" endtime="20200402 21:28:25.943"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:28:25.943" level="INFO">Opening url 'https://www.youtube.com/watch?v=D7GkxOq23DQ'</msg>
<status status="PASS" starttime="20200402 21:28:25.943" endtime="20200402 21:28:28.464"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:28:38.465" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:28:28.465" endtime="20200402 21:28:38.465"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:28:38.494" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:28:38.465" endtime="20200402 21:28:38.494"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:28:38.495" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:28:38.494" endtime="20200402 21:28:38.495"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:38.495" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:38.495" endtime="20200402 21:28:38.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:43.503" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:38.502" endtime="20200402 21:28:43.503"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:28:43.530" level="INFO">${Full_View_Count} = 882 views</msg>
<status status="PASS" starttime="20200402 21:28:43.503" endtime="20200402 21:28:43.530"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:28:43.531" level="INFO">${Full_View_Count} = 882 views</msg>
<status status="PASS" starttime="20200402 21:28:43.530" endtime="20200402 21:28:43.531"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:43.531" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='882 views' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:43.531" endtime="20200402 21:28:43.538"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:48.538" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:43.538" endtime="20200402 21:28:48.538"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:28:49.582" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:28:48.538" endtime="20200402 21:28:49.582"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:28:49.582" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:28:49.582" endtime="20200402 21:28:49.582"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:28:49.583" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4358' </msg>
<status status="PASS" starttime="20200402 21:28:49.582" endtime="20200402 21:28:49.589"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:54.591" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:49.589" endtime="20200402 21:28:54.591"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:28:54.631" level="INFO">${Total_Likes} = 6</msg>
<status status="PASS" starttime="20200402 21:28:54.591" endtime="20200402 21:28:54.631"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:28:54.631" level="INFO">${Total_Likes} = 6</msg>
<status status="PASS" starttime="20200402 21:28:54.631" endtime="20200402 21:28:54.632"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:54.632" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='6' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:54.632" endtime="20200402 21:28:54.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:28:59.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:54.639" endtime="20200402 21:28:59.640"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:28:59.669" level="INFO">${Total_Dis_Likes} = 23</msg>
<status status="PASS" starttime="20200402 21:28:59.640" endtime="20200402 21:28:59.669"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:28:59.670" level="INFO">${Total_Dis_Likes} = 23</msg>
<status status="PASS" starttime="20200402 21:28:59.669" endtime="20200402 21:28:59.670"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:28:59.670" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='23' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:28:59.670" endtime="20200402 21:28:59.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:29:04.678" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:28:59.677" endtime="20200402 21:29:04.678"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:29:04.718" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:29:04.678" endtime="20200402 21:29:04.718"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:29:04.719" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:29:04.718" endtime="20200402 21:29:04.719"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:29:04.719" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '6.61K subscribers' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:29:04.719" endtime="20200402 21:29:04.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:29:09.727" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:29:04.726" endtime="20200402 21:29:09.727"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:29:09.786" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:29:09.727" endtime="20200402 21:29:09.786"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:29:09.787" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:29:09.787" endtime="20200402 21:29:09.787"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:29:09.788" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Destor' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:29:09.787" endtime="20200402 21:29:09.795"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:29:09.795" endtime="20200402 21:29:11.081"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:29:26.084" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:29:11.081" endtime="20200402 21:29:26.084"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:29:26.085" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:29:26.084" endtime="20200402 21:29:26.201"></status>
</kw>
<status status="PASS" starttime="20200402 21:29:26.084" endtime="20200402 21:29:26.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:29:36.203" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:29:26.201" endtime="20200402 21:29:36.203"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:29:36.232" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:29:36.203" endtime="20200402 21:29:36.232"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:29:36.232" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:29:36.232" endtime="20200402 21:29:36.232"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:29:36.233" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:29:36.232" endtime="20200402 21:29:36.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:29:41.241" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:29:36.240" endtime="20200402 21:29:41.241"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:29:41.268" level="INFO">${Description} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:29:41.241" endtime="20200402 21:29:41.268"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:29:41.268" level="INFO">${Description} = Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:29:41.268" endtime="20200402 21:29:41.268"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:29:41.269" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Morning Joe 4/2/20 7AM [FULL] | Morning Joe MSNBC News Today April 2, 2020' where id=4358 </msg>
<status status="PASS" starttime="20200402 21:29:41.269" endtime="20200402 21:29:41.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:28:15.532" endtime="20200402 21:29:41.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:28:15.532" endtime="20200402 21:29:41.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:27:45.192" endtime="20200402 21:29:41.276"></status>
</kw>
<msg timestamp="20200402 21:29:41.276" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:27:45.192" endtime="20200402 21:29:41.276"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:29:41.276" level="INFO">${Count2} = 27</msg>
<status status="PASS" starttime="20200402 21:29:41.276" endtime="20200402 21:29:41.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:29:41.277" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:29:41.277" endtime="20200402 21:29:41.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:29:41.277" endtime="20200402 21:29:41.346"></status>
</kw>
<status status="PASS" starttime="20200402 21:29:41.277" endtime="20200402 21:29:41.346"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:29:41.346" endtime="20200402 21:29:41.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:29:46.354" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:29:41.354" endtime="20200402 21:29:46.354"></status>
</kw>
<status status="PASS" starttime="20200402 21:27:35.189" endtime="20200402 21:29:46.354"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;9bfff102-e593-4ebc-baa5-de401bb73faa&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:29:56.355" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:29:46.354" endtime="20200402 21:29:56.355"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:29:56.355" endtime="20200402 21:29:56.356"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:01.358" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:29:56.356" endtime="20200402 21:30:01.358"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:30:01.389" level="INFO">${Title} = FULL Morning Joe 4/2/20 [6AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:30:01.358" endtime="20200402 21:30:01.389"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:30:01.389" level="INFO">${Title} = FULL Morning Joe 4/2/20 [6AM] | MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:30:01.389" endtime="20200402 21:30:01.389"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:30:01.390" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 4/2/20 [6AM] | MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:30:01.390" endtime="20200402 21:30:01.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:06.398" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:01.397" endtime="20200402 21:30:06.398"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:30:06.399" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:30:06.401" level="INFO">${list} = ((4359,),)</msg>
<status status="PASS" starttime="20200402 21:30:06.398" endtime="20200402 21:30:06.401"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:30:06.401" endtime="20200402 21:30:06.401"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:30:06.403" level="INFO">${list} = [4359]</msg>
<status status="PASS" starttime="20200402 21:30:06.402" endtime="20200402 21:30:06.403"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:30:06.403" level="INFO">${Count3} = 4359</msg>
<status status="PASS" starttime="20200402 21:30:06.403" endtime="20200402 21:30:06.403"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:11.405" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:06.403" endtime="20200402 21:30:11.405"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:30:11.439" level="INFO">${Total_View} = 1.4K views</msg>
<status status="PASS" starttime="20200402 21:30:11.405" endtime="20200402 21:30:11.439"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:30:11.440" level="INFO">${Total_View} = 1.4K views</msg>
<status status="PASS" starttime="20200402 21:30:11.439" endtime="20200402 21:30:11.440"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:11.440" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.4K views' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:11.440" endtime="20200402 21:30:11.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:16.448" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:11.447" endtime="20200402 21:30:16.448"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:30:16.490" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:30:16.448" endtime="20200402 21:30:16.490"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:30:16.491" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:30:16.490" endtime="20200402 21:30:16.491"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:16.491" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:16.491" endtime="20200402 21:30:16.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:21.500" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:16.499" endtime="20200402 21:30:21.500"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:30:21.540" level="INFO">${Duration} = 28 seconds</msg>
<status status="PASS" starttime="20200402 21:30:21.500" endtime="20200402 21:30:21.540"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:30:21.540" level="INFO">${Duration} = 28 seconds</msg>
<status status="PASS" starttime="20200402 21:30:21.540" endtime="20200402 21:30:21.540"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:21.541" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '28 seconds' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:21.541" endtime="20200402 21:30:21.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:26.547" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:21.547" endtime="20200402 21:30:26.547"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:30:26.578" level="INFO">${URL} = https://www.youtube.com/watch?v=Zgvm6eSycGs</msg>
<status status="PASS" starttime="20200402 21:30:26.547" endtime="20200402 21:30:26.578"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:30:26.579" level="INFO">${URL} = https://www.youtube.com/watch?v=Zgvm6eSycGs</msg>
<status status="PASS" starttime="20200402 21:30:26.579" endtime="20200402 21:30:26.579"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:26.580" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=Zgvm6eSycGs' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:26.579" endtime="20200402 21:30:26.587"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:30:26.589" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:30:26.588" endtime="20200402 21:30:27.044"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:30:27.045" endtime="20200402 21:30:27.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:30:37.054" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:30:27.052" endtime="20200402 21:30:37.054"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:30:37.054" level="INFO">Opening url 'https://www.youtube.com/watch?v=Zgvm6eSycGs'</msg>
<status status="PASS" starttime="20200402 21:30:37.054" endtime="20200402 21:30:40.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:30:50.399" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:30:40.398" endtime="20200402 21:30:50.399"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:30:50.428" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:30:50.399" endtime="20200402 21:30:50.429"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:30:50.429" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:30:50.429" endtime="20200402 21:30:50.429"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:50.430" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:50.429" endtime="20200402 21:30:50.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:30:55.437" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:50.436" endtime="20200402 21:30:55.437"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:30:55.466" level="INFO">${Full_View_Count} = 5,921 views</msg>
<status status="PASS" starttime="20200402 21:30:55.437" endtime="20200402 21:30:55.466"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:30:55.467" level="INFO">${Full_View_Count} = 5,921 views</msg>
<status status="PASS" starttime="20200402 21:30:55.466" endtime="20200402 21:30:55.467"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:30:55.467" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='5,921 views' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:30:55.467" endtime="20200402 21:30:55.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:00.474" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:30:55.474" endtime="20200402 21:31:00.474"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:31:00.498" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:31:00.474" endtime="20200402 21:31:00.498"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:31:00.498" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:31:00.498" endtime="20200402 21:31:00.498"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:31:00.499" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4359' </msg>
<status status="PASS" starttime="20200402 21:31:00.498" endtime="20200402 21:31:00.505"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:05.506" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:00.505" endtime="20200402 21:31:05.506"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:31:05.535" level="INFO">${Total_Likes} = 61</msg>
<status status="PASS" starttime="20200402 21:31:05.506" endtime="20200402 21:31:05.535"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:31:05.535" level="INFO">${Total_Likes} = 61</msg>
<status status="PASS" starttime="20200402 21:31:05.535" endtime="20200402 21:31:05.535"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:05.536" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='61' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:05.536" endtime="20200402 21:31:05.542"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:10.543" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:05.542" endtime="20200402 21:31:10.543"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:31:10.571" level="INFO">${Total_Dis_Likes} = 14</msg>
<status status="PASS" starttime="20200402 21:31:10.543" endtime="20200402 21:31:10.571"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:31:10.571" level="INFO">${Total_Dis_Likes} = 14</msg>
<status status="PASS" starttime="20200402 21:31:10.571" endtime="20200402 21:31:10.572"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:10.572" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='14' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:10.572" endtime="20200402 21:31:10.579"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:15.580" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:10.579" endtime="20200402 21:31:15.580"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:31:15.615" level="INFO">${Total_Subscribers} = 1.33K subscribers</msg>
<status status="PASS" starttime="20200402 21:31:15.580" endtime="20200402 21:31:15.615"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:31:15.615" level="INFO">${Total_Subscribers} = 1.33K subscribers</msg>
<status status="PASS" starttime="20200402 21:31:15.615" endtime="20200402 21:31:15.615"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:15.616" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.33K subscribers' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:15.615" endtime="20200402 21:31:15.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:20.622" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:15.622" endtime="20200402 21:31:20.622"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:31:20.650" level="INFO">${Channel_Name} = CBN News</msg>
<status status="PASS" starttime="20200402 21:31:20.622" endtime="20200402 21:31:20.650"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:31:20.651" level="INFO">${Channel_Name} = CBN News</msg>
<status status="PASS" starttime="20200402 21:31:20.651" endtime="20200402 21:31:20.651"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:20.651" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'CBN News' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:20.651" endtime="20200402 21:31:20.658"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:31:20.658" endtime="20200402 21:31:22.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:31:37.119" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:31:22.117" endtime="20200402 21:31:37.119"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:31:37.120" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200402 21:31:37.608" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-41.png"&gt;&lt;img src="selenium-screenshot-41.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200402 21:31:37.188" endtime="20200402 21:31:37.608"></status>
</kw>
<msg timestamp="20200402 21:31:37.609" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=80.0.3987.149)
</msg>
<status status="FAIL" starttime="20200402 21:31:37.120" endtime="20200402 21:31:37.609"></status>
</kw>
<status status="PASS" starttime="20200402 21:31:37.119" endtime="20200402 21:31:37.609"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:31:47.611" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:31:37.609" endtime="20200402 21:31:47.611"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:31:47.665" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:31:47.611" endtime="20200402 21:31:47.665"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:31:47.666" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:31:47.665" endtime="20200402 21:31:47.666"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:47.666" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:47.666" endtime="20200402 21:31:47.673"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:52.675" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:47.673" endtime="20200402 21:31:52.675"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:31:52.776" level="INFO">${Description} = Expected live at 5 p.m. ET: 



Get the very latest information on the coronavirus pandemic as we go LIVE  from the White House for The Coronavirus Task Force daily media briefing. President Donald Tr...</msg>
<status status="PASS" starttime="20200402 21:31:52.675" endtime="20200402 21:31:52.776"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:31:52.776" level="INFO">${Description} = Expected live at 5 p.m. ET: 



Get the very latest information on the coronavirus pandemic as we go LIVE  from the White House for The Coronavirus Task Force daily media briefing. President Donald Tr...</msg>
<status status="PASS" starttime="20200402 21:31:52.776" endtime="20200402 21:31:52.776"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:31:52.777" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Expected live at 5 p.m. ET: 



Get the very latest information on the coronavirus pandemic as we go LIVE  from the White House for The Coronavirus Task Force daily media briefing. President Donald Trump''s task force is led by Vice President Mike Pence, Deborah Birx, Dr. Anthony Fauci, Dr. Ben Carson, and others. 

Get the latest timelines, projections, guidelines, and other key information related to ending the spread of this devastating coronavirus.

Share this important live feed with your friends and family: https://www.youtube.com/c/CBNnewsonli...

SUBSCRIBE to our YouTube channel for more videos: https://www.youtube.com/user/CBNnewso...

CBN features 24-hour TV news from a Christian perspective. The CBN News Channel provides independent news programming to an underserved audience to enlighten, entertain and inspire Christians around the world. Comments below do not necessarily reflect the views of CBN.

Like us on Facebook: https://www.facebook.com/cbnnews/
Like us on Twitter: https://twitter.com/CBNNews
Follow us on Instagram: https://www.instagram.com/cbnnews/
Contact News Editors: https://www1.cbn.com/contact/contact-...
Questions about other CBN programs: https://www1.cbn.com/contact/contact-...
Questions about supporting CBN? 
http://www1.cbn.com/cbn-partners  (and)  https://support.google.com/youtube/?p...
Questions about Helping the Home Front? Call: 757-226-2333  
https://www1.cbn.com/700club/helping-...

DONATE BY TEXT
Text “OBDisaster” to 71777 to send an urgent gift to help victims of disaster and humanitarian crisis in their time of need.

https://www.ob.org/ways-to-give/

What''s coming up next? Have a look at our program guide: http://www1.cbn.com/cbnnews/newschann...



#Coronavirustaskforce #coronavirus #COVID-19 #WhiteHousePressBriefing #DailyPressBriefing
#DrFauci #MikePence #DonaldTrump #PresidentTrump #BREAKING #CoronavirusLatestInformation #CoronavirusPressConference #WatchCoronavirusUpdate
#christiannews #live #livenews #SOTU #christiannewsfeed #christiannewswire #christian #christlike #christianity #faith #faithvsculture #church #bible #love #christianinspiration' where id=4359 </msg>
<status status="PASS" starttime="20200402 21:31:52.777" endtime="20200402 21:31:52.784"></status>
</kw>
<status status="PASS" starttime="20200402 21:30:26.588" endtime="20200402 21:31:52.784"></status>
</kw>
<status status="PASS" starttime="20200402 21:30:26.587" endtime="20200402 21:31:52.784"></status>
</kw>
<status status="PASS" starttime="20200402 21:29:56.356" endtime="20200402 21:31:52.784"></status>
</kw>
<msg timestamp="20200402 21:31:52.784" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:29:56.356" endtime="20200402 21:31:52.784"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:31:52.785" level="INFO">${Count2} = 28</msg>
<status status="PASS" starttime="20200402 21:31:52.785" endtime="20200402 21:31:52.785"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:31:52.785" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:31:52.785" endtime="20200402 21:31:52.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:31:52.786" endtime="20200402 21:31:52.872"></status>
</kw>
<status status="PASS" starttime="20200402 21:31:52.786" endtime="20200402 21:31:52.872"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:31:52.873" endtime="20200402 21:31:52.879"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:31:57.880" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:31:52.879" endtime="20200402 21:31:57.880"></status>
</kw>
<status status="PASS" starttime="20200402 21:29:46.354" endtime="20200402 21:31:57.880"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;d0de6515-852a-440f-9068-3eb81d4346de&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:32:07.881" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:31:57.881" endtime="20200402 21:32:07.881"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:32:07.881" endtime="20200402 21:32:07.882"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:12.884" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:07.883" endtime="20200402 21:32:12.884"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:32:12.987" level="INFO">${Title} = Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:32:12.884" endtime="20200402 21:32:12.987"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:32:12.987" level="INFO">${Title} = Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:32:12.987" endtime="20200402 21:32:12.987"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:32:12.988" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:32:12.988" endtime="20200402 21:32:12.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:17.997" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:12.994" endtime="20200402 21:32:17.997"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:32:17.997" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:32:17.999" level="INFO">${list} = ((4360,),)</msg>
<status status="PASS" starttime="20200402 21:32:17.997" endtime="20200402 21:32:17.999"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:32:17.999" endtime="20200402 21:32:17.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:32:18.000" level="INFO">${list} = [4360]</msg>
<status status="PASS" starttime="20200402 21:32:18.000" endtime="20200402 21:32:18.000"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:32:18.000" level="INFO">${Count3} = 4360</msg>
<status status="PASS" starttime="20200402 21:32:18.000" endtime="20200402 21:32:18.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:23.002" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:18.001" endtime="20200402 21:32:23.002"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:32:23.035" level="INFO">${Total_View} = 563 views</msg>
<status status="PASS" starttime="20200402 21:32:23.002" endtime="20200402 21:32:23.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:32:23.035" level="INFO">${Total_View} = 563 views</msg>
<status status="PASS" starttime="20200402 21:32:23.035" endtime="20200402 21:32:23.035"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:32:23.036" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '563 views' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:32:23.035" endtime="20200402 21:32:23.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:28.043" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:23.042" endtime="20200402 21:32:28.043"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:32:28.573" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:32:28.043" endtime="20200402 21:32:28.573"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:32:28.573" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:32:28.573" endtime="20200402 21:32:28.573"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:32:28.574" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:32:28.574" endtime="20200402 21:32:28.581"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:33.582" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:28.581" endtime="20200402 21:32:33.582"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:32:33.603" level="INFO">${Duration} = 4 minutes, 38 seconds</msg>
<status status="PASS" starttime="20200402 21:32:33.582" endtime="20200402 21:32:33.603"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:32:33.603" level="INFO">${Duration} = 4 minutes, 38 seconds</msg>
<status status="PASS" starttime="20200402 21:32:33.603" endtime="20200402 21:32:33.603"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:32:33.604" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '4 minutes, 38 seconds' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:32:33.604" endtime="20200402 21:32:33.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:32:38.612" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:32:33.610" endtime="20200402 21:32:38.612"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:32:38.637" level="INFO">${URL} = https://www.youtube.com/watch?v=6N95nHvfFAA</msg>
<status status="PASS" starttime="20200402 21:32:38.612" endtime="20200402 21:32:38.637"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:32:38.638" level="INFO">${URL} = https://www.youtube.com/watch?v=6N95nHvfFAA</msg>
<status status="PASS" starttime="20200402 21:32:38.637" endtime="20200402 21:32:38.638"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:32:38.638" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=6N95nHvfFAA' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:32:38.638" endtime="20200402 21:32:38.645"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:32:38.646" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:32:38.646" endtime="20200402 21:32:39.039"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:32:39.039" endtime="20200402 21:32:39.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:32:49.047" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:32:39.046" endtime="20200402 21:32:49.047"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:32:49.048" level="INFO">Opening url 'https://www.youtube.com/watch?v=6N95nHvfFAA'</msg>
<status status="PASS" starttime="20200402 21:32:49.047" endtime="20200402 21:32:52.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:33:02.030" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:32:52.028" endtime="20200402 21:33:02.030"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:33:02.061" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:33:02.030" endtime="20200402 21:33:02.062"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:33:02.062" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:33:02.062" endtime="20200402 21:33:02.063"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:02.063" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:02.063" endtime="20200402 21:33:02.070"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:07.070" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:02.070" endtime="20200402 21:33:07.070"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:33:07.118" level="INFO">${Full_View_Count} = 1,380 views</msg>
<status status="PASS" starttime="20200402 21:33:07.070" endtime="20200402 21:33:07.118"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:33:07.119" level="INFO">${Full_View_Count} = 1,380 views</msg>
<status status="PASS" starttime="20200402 21:33:07.119" endtime="20200402 21:33:07.119"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:07.119" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,380 views' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:07.119" endtime="20200402 21:33:07.125"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:12.126" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:07.126" endtime="20200402 21:33:12.126"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:33:12.152" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:33:12.126" endtime="20200402 21:33:12.152"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:33:12.153" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:33:12.153" endtime="20200402 21:33:12.153"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:33:12.153" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4360' </msg>
<status status="PASS" starttime="20200402 21:33:12.153" endtime="20200402 21:33:12.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:17.161" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:12.160" endtime="20200402 21:33:17.161"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:33:17.241" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 21:33:17.161" endtime="20200402 21:33:17.241"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:33:17.242" level="INFO">${Total_Likes} = 4</msg>
<status status="PASS" starttime="20200402 21:33:17.242" endtime="20200402 21:33:17.242"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:17.242" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='4' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:17.242" endtime="20200402 21:33:17.249"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:22.251" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:17.249" endtime="20200402 21:33:22.251"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:33:22.278" level="INFO">${Total_Dis_Likes} = 20</msg>
<status status="PASS" starttime="20200402 21:33:22.251" endtime="20200402 21:33:22.278"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:33:22.279" level="INFO">${Total_Dis_Likes} = 20</msg>
<status status="PASS" starttime="20200402 21:33:22.278" endtime="20200402 21:33:22.279"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:22.279" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='20' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:22.279" endtime="20200402 21:33:22.285"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:27.285" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:22.285" endtime="20200402 21:33:27.285"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:33:27.333" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:33:27.285" endtime="20200402 21:33:27.333"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:33:27.334" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:33:27.333" endtime="20200402 21:33:27.334"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:27.334" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '6.61K subscribers' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:27.334" endtime="20200402 21:33:27.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:33:32.341" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:27.341" endtime="20200402 21:33:32.341"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:33:32.368" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:33:32.341" endtime="20200402 21:33:32.368"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:33:32.369" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:33:32.368" endtime="20200402 21:33:32.369"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:32.369" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Destor' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:32.369" endtime="20200402 21:33:32.375"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:33:32.376" endtime="20200402 21:33:33.647"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:33:48.649" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:33:33.648" endtime="20200402 21:33:48.649"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:33:48.650" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:33:48.650" endtime="20200402 21:33:48.758"></status>
</kw>
<status status="PASS" starttime="20200402 21:33:48.649" endtime="20200402 21:33:48.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:33:58.761" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:33:48.759" endtime="20200402 21:33:58.761"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:33:58.806" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:33:58.761" endtime="20200402 21:33:58.806"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:33:58.806" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:33:58.806" endtime="20200402 21:33:58.806"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:33:58.807" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:33:58.806" endtime="20200402 21:33:58.813"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:03.815" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:33:58.813" endtime="20200402 21:34:03.815"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:34:03.852" level="INFO">${Description} = Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:34:03.815" endtime="20200402 21:34:03.852"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:34:03.852" level="INFO">${Description} = Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:34:03.852" endtime="20200402 21:34:03.852"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:34:03.853" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Morning Joe 4/2/20 6AM [FULL] | Morning Joe MSNBC News Today April 2, 2020' where id=4360 </msg>
<status status="PASS" starttime="20200402 21:34:03.852" endtime="20200402 21:34:03.860"></status>
</kw>
<status status="PASS" starttime="20200402 21:32:38.645" endtime="20200402 21:34:03.860"></status>
</kw>
<status status="PASS" starttime="20200402 21:32:38.645" endtime="20200402 21:34:03.860"></status>
</kw>
<status status="PASS" starttime="20200402 21:32:07.882" endtime="20200402 21:34:03.860"></status>
</kw>
<msg timestamp="20200402 21:34:03.860" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:32:07.882" endtime="20200402 21:34:03.860"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:34:03.861" level="INFO">${Count2} = 29</msg>
<status status="PASS" starttime="20200402 21:34:03.861" endtime="20200402 21:34:03.861"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:34:03.861" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:34:03.861" endtime="20200402 21:34:03.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:34:03.862" endtime="20200402 21:34:03.935"></status>
</kw>
<status status="PASS" starttime="20200402 21:34:03.862" endtime="20200402 21:34:03.935"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:34:03.935" endtime="20200402 21:34:03.948"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:08.950" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:03.949" endtime="20200402 21:34:08.950"></status>
</kw>
<status status="PASS" starttime="20200402 21:31:57.880" endtime="20200402 21:34:08.950"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;62beebf8-ea46-4a4e-a69f-cbf7151e002a&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:34:18.951" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:34:08.950" endtime="20200402 21:34:18.951"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:34:18.951" endtime="20200402 21:34:18.952"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:23.954" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:18.952" endtime="20200402 21:34:23.954"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:34:23.986" level="INFO">${Title} = MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:34:23.954" endtime="20200402 21:34:23.986"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:34:23.986" level="INFO">${Title} = MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:34:23.986" endtime="20200402 21:34:23.986"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:34:23.987" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:34:23.987" endtime="20200402 21:34:23.992"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:28.993" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:23.992" endtime="20200402 21:34:28.993"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:34:28.993" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:34:28.995" level="INFO">${list} = ((4361,),)</msg>
<status status="PASS" starttime="20200402 21:34:28.993" endtime="20200402 21:34:28.995"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:34:28.995" endtime="20200402 21:34:28.996"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:34:28.996" level="INFO">${list} = [4361]</msg>
<status status="PASS" starttime="20200402 21:34:28.996" endtime="20200402 21:34:28.996"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:34:28.996" level="INFO">${Count3} = 4361</msg>
<status status="PASS" starttime="20200402 21:34:28.996" endtime="20200402 21:34:28.997"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:33.998" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:28.997" endtime="20200402 21:34:33.998"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:34:34.035" level="INFO">${Total_View} = 2.7K views</msg>
<status status="PASS" starttime="20200402 21:34:33.998" endtime="20200402 21:34:34.035"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:34:34.036" level="INFO">${Total_View} = 2.7K views</msg>
<status status="PASS" starttime="20200402 21:34:34.035" endtime="20200402 21:34:34.036"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:34:34.036" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '2.7K views' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:34:34.036" endtime="20200402 21:34:34.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:39.044" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:34.042" endtime="20200402 21:34:39.044"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:34:39.070" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:34:39.044" endtime="20200402 21:34:39.070"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:34:39.071" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:34:39.071" endtime="20200402 21:34:39.071"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:34:39.071" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:34:39.071" endtime="20200402 21:34:39.078"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:44.078" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:39.078" endtime="20200402 21:34:44.078"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:34:44.099" level="INFO">${Duration} = 13 minutes, 13 seconds</msg>
<status status="PASS" starttime="20200402 21:34:44.078" endtime="20200402 21:34:44.099"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:34:44.099" level="INFO">${Duration} = 13 minutes, 13 seconds</msg>
<status status="PASS" starttime="20200402 21:34:44.099" endtime="20200402 21:34:44.099"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:34:44.100" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '13 minutes, 13 seconds' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:34:44.100" endtime="20200402 21:34:44.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:34:49.106" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:34:44.106" endtime="20200402 21:34:49.106"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:34:49.126" level="INFO">${URL} = https://www.youtube.com/watch?v=EEvY_RDed9c</msg>
<status status="PASS" starttime="20200402 21:34:49.106" endtime="20200402 21:34:49.126"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:34:49.127" level="INFO">${URL} = https://www.youtube.com/watch?v=EEvY_RDed9c</msg>
<status status="PASS" starttime="20200402 21:34:49.127" endtime="20200402 21:34:49.127"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:34:49.127" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=EEvY_RDed9c' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:34:49.127" endtime="20200402 21:34:49.134"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:34:49.135" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:34:49.135" endtime="20200402 21:34:49.543"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:34:49.543" endtime="20200402 21:34:49.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:34:59.552" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:34:49.551" endtime="20200402 21:34:59.552"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:34:59.552" level="INFO">Opening url 'https://www.youtube.com/watch?v=EEvY_RDed9c'</msg>
<status status="PASS" starttime="20200402 21:34:59.552" endtime="20200402 21:35:02.790"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:35:12.791" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:35:02.790" endtime="20200402 21:35:12.791"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:35:12.823" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:35:12.791" endtime="20200402 21:35:12.823"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:35:12.824" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:35:12.823" endtime="20200402 21:35:12.824"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:12.824" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:12.824" endtime="20200402 21:35:12.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:17.833" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:12.832" endtime="20200402 21:35:17.833"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:35:19.647" level="INFO">${Full_View_Count} = 2,942 views</msg>
<status status="PASS" starttime="20200402 21:35:17.833" endtime="20200402 21:35:19.647"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:35:19.648" level="INFO">${Full_View_Count} = 2,942 views</msg>
<status status="PASS" starttime="20200402 21:35:19.648" endtime="20200402 21:35:19.648"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:19.648" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='2,942 views' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:19.648" endtime="20200402 21:35:19.663"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:24.664" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:19.663" endtime="20200402 21:35:24.664"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:35:24.692" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:35:24.664" endtime="20200402 21:35:24.692"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:35:24.693" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:35:24.693" endtime="20200402 21:35:24.693"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:35:24.694" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4361' </msg>
<status status="PASS" starttime="20200402 21:35:24.693" endtime="20200402 21:35:24.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:29.702" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:24.700" endtime="20200402 21:35:29.702"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:35:29.752" level="INFO">${Total_Likes} = 74</msg>
<status status="PASS" starttime="20200402 21:35:29.702" endtime="20200402 21:35:29.752"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:35:29.752" level="INFO">${Total_Likes} = 74</msg>
<status status="PASS" starttime="20200402 21:35:29.752" endtime="20200402 21:35:29.752"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:29.753" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='74' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:29.753" endtime="20200402 21:35:29.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:34.760" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:29.759" endtime="20200402 21:35:34.760"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:35:34.795" level="INFO">${Total_Dis_Likes} = 9</msg>
<status status="PASS" starttime="20200402 21:35:34.760" endtime="20200402 21:35:34.795"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:35:34.795" level="INFO">${Total_Dis_Likes} = 9</msg>
<status status="PASS" starttime="20200402 21:35:34.795" endtime="20200402 21:35:34.795"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:34.796" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='9' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:34.796" endtime="20200402 21:35:34.802"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:39.803" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:34.803" endtime="20200402 21:35:39.803"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:35:39.834" level="INFO">${Total_Subscribers} = 3.37K subscribers</msg>
<status status="PASS" starttime="20200402 21:35:39.803" endtime="20200402 21:35:39.834"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:35:39.835" level="INFO">${Total_Subscribers} = 3.37K subscribers</msg>
<status status="PASS" starttime="20200402 21:35:39.835" endtime="20200402 21:35:39.835"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:39.836" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '3.37K subscribers' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:39.835" endtime="20200402 21:35:39.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:35:44.843" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:35:39.842" endtime="20200402 21:35:44.843"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:35:44.879" level="INFO">${Channel_Name} = BiggBoiProductions</msg>
<status status="PASS" starttime="20200402 21:35:44.843" endtime="20200402 21:35:44.879"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:35:44.880" level="INFO">${Channel_Name} = BiggBoiProductions</msg>
<status status="PASS" starttime="20200402 21:35:44.880" endtime="20200402 21:35:44.880"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:35:44.880" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'BiggBoiProductions' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:35:44.880" endtime="20200402 21:35:44.887"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:35:44.887" endtime="20200402 21:35:46.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:36:01.501" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:35:46.501" endtime="20200402 21:36:01.501"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:36:01.502" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:36:01.501" endtime="20200402 21:36:01.601"></status>
</kw>
<status status="PASS" starttime="20200402 21:36:01.501" endtime="20200402 21:36:01.601"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:36:11.603" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:36:01.601" endtime="20200402 21:36:11.603"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:36:11.631" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:36:11.603" endtime="20200402 21:36:11.631"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:36:11.631" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:36:11.631" endtime="20200402 21:36:11.631"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:36:11.632" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:36:11.632" endtime="20200402 21:36:11.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:16.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:11.638" endtime="20200402 21:36:16.640"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:36:16.666" level="INFO">${Description} = MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:36:16.640" endtime="20200402 21:36:16.666"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:36:16.667" level="INFO">${Description} = MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:36:16.667" endtime="20200402 21:36:16.667"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:36:16.667" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'MSNBC Morning Joe 4/2/20 [6AM] | MSNBC News Today April 2, 2020' where id=4361 </msg>
<status status="PASS" starttime="20200402 21:36:16.667" endtime="20200402 21:36:16.673"></status>
</kw>
<status status="PASS" starttime="20200402 21:34:49.134" endtime="20200402 21:36:16.673"></status>
</kw>
<status status="PASS" starttime="20200402 21:34:49.134" endtime="20200402 21:36:16.673"></status>
</kw>
<status status="PASS" starttime="20200402 21:34:18.952" endtime="20200402 21:36:16.673"></status>
</kw>
<msg timestamp="20200402 21:36:16.673" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:34:18.952" endtime="20200402 21:36:16.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:36:16.674" level="INFO">${Count2} = 30</msg>
<status status="PASS" starttime="20200402 21:36:16.674" endtime="20200402 21:36:16.674"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:36:16.674" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:36:16.674" endtime="20200402 21:36:16.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:36:16.675" endtime="20200402 21:36:16.737"></status>
</kw>
<status status="PASS" starttime="20200402 21:36:16.675" endtime="20200402 21:36:16.737"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:36:16.737" endtime="20200402 21:36:16.744"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:21.745" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:16.744" endtime="20200402 21:36:21.745"></status>
</kw>
<status status="PASS" starttime="20200402 21:34:08.950" endtime="20200402 21:36:21.745"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;37a58163-b49a-45cf-ad69-262fb16a3ba7&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:36:31.747" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:36:21.745" endtime="20200402 21:36:31.747"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:36:31.747" endtime="20200402 21:36:31.748"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:36.749" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:31.748" endtime="20200402 21:36:36.749"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:36:36.787" level="INFO">${Title} = MORNING JOE 6AM 4/2/20 | MSNBC Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:36:36.749" endtime="20200402 21:36:36.787"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:36:36.788" level="INFO">${Title} = MORNING JOE 6AM 4/2/20 | MSNBC Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:36:36.787" endtime="20200402 21:36:36.788"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:36:36.788" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MORNING JOE 6AM 4/2/20 | MSNBC Breaking News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:36:36.788" endtime="20200402 21:36:36.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:41.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:36.794" endtime="20200402 21:36:41.795"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:36:41.795" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:36:41.797" level="INFO">${list} = ((4362,),)</msg>
<status status="PASS" starttime="20200402 21:36:41.795" endtime="20200402 21:36:41.797"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:36:41.797" endtime="20200402 21:36:41.797"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:36:41.798" level="INFO">${list} = [4362]</msg>
<status status="PASS" starttime="20200402 21:36:41.798" endtime="20200402 21:36:41.798"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:36:41.798" level="INFO">${Count3} = 4362</msg>
<status status="PASS" starttime="20200402 21:36:41.798" endtime="20200402 21:36:41.798"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:46.801" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:41.799" endtime="20200402 21:36:46.801"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:36:47.627" level="INFO">${Total_View} = 182 views</msg>
<status status="PASS" starttime="20200402 21:36:46.801" endtime="20200402 21:36:47.627"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:36:47.628" level="INFO">${Total_View} = 182 views</msg>
<status status="PASS" starttime="20200402 21:36:47.628" endtime="20200402 21:36:47.628"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:36:47.629" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '182 views' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:36:47.628" endtime="20200402 21:36:47.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:52.638" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:47.636" endtime="20200402 21:36:52.638"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:36:52.678" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:36:52.638" endtime="20200402 21:36:52.678"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:36:52.679" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:36:52.678" endtime="20200402 21:36:52.679"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:36:52.679" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:36:52.679" endtime="20200402 21:36:52.685"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:36:57.686" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:52.685" endtime="20200402 21:36:57.686"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:36:57.710" level="INFO">${Duration} = 42 minutes</msg>
<status status="PASS" starttime="20200402 21:36:57.686" endtime="20200402 21:36:57.710"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:36:57.711" level="INFO">${Duration} = 42 minutes</msg>
<status status="PASS" starttime="20200402 21:36:57.710" endtime="20200402 21:36:57.711"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:36:57.711" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '42 minutes' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:36:57.711" endtime="20200402 21:36:57.717"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:02.717" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:36:57.717" endtime="20200402 21:37:02.717"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:37:02.738" level="INFO">${URL} = https://www.youtube.com/watch?v=j20LJSCT5DY</msg>
<status status="PASS" starttime="20200402 21:37:02.717" endtime="20200402 21:37:02.738"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:37:02.739" level="INFO">${URL} = https://www.youtube.com/watch?v=j20LJSCT5DY</msg>
<status status="PASS" starttime="20200402 21:37:02.738" endtime="20200402 21:37:02.739"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:02.739" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=j20LJSCT5DY' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:02.739" endtime="20200402 21:37:02.745"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:37:02.747" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:37:02.746" endtime="20200402 21:37:03.181"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:37:03.181" endtime="20200402 21:37:03.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:37:13.190" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:37:03.190" endtime="20200402 21:37:13.190"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:37:13.190" level="INFO">Opening url 'https://www.youtube.com/watch?v=j20LJSCT5DY'</msg>
<status status="PASS" starttime="20200402 21:37:13.190" endtime="20200402 21:37:15.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:37:25.315" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:37:15.313" endtime="20200402 21:37:25.315"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:37:25.505" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:37:25.315" endtime="20200402 21:37:25.505"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:37:25.506" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:37:25.505" endtime="20200402 21:37:25.506"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:25.506" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:25.506" endtime="20200402 21:37:25.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:30.514" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:25.513" endtime="20200402 21:37:30.514"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:37:30.631" level="INFO">${Full_View_Count} = 13,322 watching now</msg>
<status status="PASS" starttime="20200402 21:37:30.514" endtime="20200402 21:37:30.631"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:37:30.632" level="INFO">${Full_View_Count} = 13,322 watching now</msg>
<status status="PASS" starttime="20200402 21:37:30.632" endtime="20200402 21:37:30.632"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:30.632" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='13,322 watching now' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:30.632" endtime="20200402 21:37:30.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:35.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:30.638" endtime="20200402 21:37:35.640"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:37:35.665" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:37:35.640" endtime="20200402 21:37:35.665"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:37:35.665" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:37:35.665" endtime="20200402 21:37:35.665"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:37:35.666" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4362' </msg>
<status status="PASS" starttime="20200402 21:37:35.665" endtime="20200402 21:37:35.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:40.672" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:35.671" endtime="20200402 21:37:40.672"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:37:40.705" level="INFO">${Total_Likes} = 493</msg>
<status status="PASS" starttime="20200402 21:37:40.672" endtime="20200402 21:37:40.705"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:37:40.706" level="INFO">${Total_Likes} = 493</msg>
<status status="PASS" starttime="20200402 21:37:40.706" endtime="20200402 21:37:40.706"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:40.707" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='493' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:40.706" endtime="20200402 21:37:40.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:45.715" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:40.714" endtime="20200402 21:37:45.715"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:37:45.747" level="INFO">${Total_Dis_Likes} = 28</msg>
<status status="PASS" starttime="20200402 21:37:45.715" endtime="20200402 21:37:45.748"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:37:45.748" level="INFO">${Total_Dis_Likes} = 28</msg>
<status status="PASS" starttime="20200402 21:37:45.748" endtime="20200402 21:37:45.748"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:45.749" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='28' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:45.749" endtime="20200402 21:37:45.756"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:50.758" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:45.756" endtime="20200402 21:37:50.758"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:37:50.808" level="INFO">${Total_Subscribers} = 926K subscribers</msg>
<status status="PASS" starttime="20200402 21:37:50.758" endtime="20200402 21:37:50.808"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:37:50.809" level="INFO">${Total_Subscribers} = 926K subscribers</msg>
<status status="PASS" starttime="20200402 21:37:50.809" endtime="20200402 21:37:50.809"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:50.810" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '926K subscribers' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:50.809" endtime="20200402 21:37:50.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:37:55.817" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:37:50.816" endtime="20200402 21:37:55.817"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:37:55.845" level="INFO">${Channel_Name} = FOX 10 Phoenix</msg>
<status status="PASS" starttime="20200402 21:37:55.817" endtime="20200402 21:37:55.845"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:37:55.845" level="INFO">${Channel_Name} = FOX 10 Phoenix</msg>
<status status="PASS" starttime="20200402 21:37:55.845" endtime="20200402 21:37:55.845"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:37:55.846" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'FOX 10 Phoenix' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:37:55.845" endtime="20200402 21:37:55.852"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:37:55.852" endtime="20200402 21:37:59.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:38:14.112" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:37:59.112" endtime="20200402 21:38:14.112"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:38:14.113" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200402 21:38:14.459" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-44.png"&gt;&lt;img src="selenium-screenshot-44.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200402 21:38:14.139" endtime="20200402 21:38:14.459"></status>
</kw>
<msg timestamp="20200402 21:38:14.460" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=80.0.3987.149)
</msg>
<status status="FAIL" starttime="20200402 21:38:14.112" endtime="20200402 21:38:14.460"></status>
</kw>
<status status="PASS" starttime="20200402 21:38:14.112" endtime="20200402 21:38:14.460"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:38:24.461" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:38:14.460" endtime="20200402 21:38:24.461"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:38:24.489" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:38:24.462" endtime="20200402 21:38:24.490"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:38:24.490" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:38:24.490" endtime="20200402 21:38:24.490"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:38:24.491" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:38:24.490" endtime="20200402 21:38:24.497"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:38:29.498" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:24.497" endtime="20200402 21:38:29.498"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:38:29.526" level="INFO">${Description} = Sharing a mix of breaking news, top stories, popular culture and engaging discussions.</msg>
<status status="PASS" starttime="20200402 21:38:29.498" endtime="20200402 21:38:29.526"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:38:29.526" level="INFO">${Description} = Sharing a mix of breaking news, top stories, popular culture and engaging discussions.</msg>
<status status="PASS" starttime="20200402 21:38:29.526" endtime="20200402 21:38:29.526"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:38:29.527" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Sharing a mix of breaking news, top stories, popular culture and engaging discussions.' where id=4362 </msg>
<status status="PASS" starttime="20200402 21:38:29.527" endtime="20200402 21:38:29.533"></status>
</kw>
<status status="PASS" starttime="20200402 21:37:02.746" endtime="20200402 21:38:29.534"></status>
</kw>
<status status="PASS" starttime="20200402 21:37:02.745" endtime="20200402 21:38:29.534"></status>
</kw>
<status status="PASS" starttime="20200402 21:36:31.748" endtime="20200402 21:38:29.534"></status>
</kw>
<msg timestamp="20200402 21:38:29.534" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:36:31.748" endtime="20200402 21:38:29.534"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:38:29.534" level="INFO">${Count2} = 31</msg>
<status status="PASS" starttime="20200402 21:38:29.534" endtime="20200402 21:38:29.534"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:38:29.535" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:38:29.535" endtime="20200402 21:38:29.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:38:29.536" endtime="20200402 21:38:29.595"></status>
</kw>
<status status="PASS" starttime="20200402 21:38:29.535" endtime="20200402 21:38:29.595"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:38:29.595" endtime="20200402 21:38:29.625"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:38:34.625" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:29.625" endtime="20200402 21:38:34.625"></status>
</kw>
<status status="PASS" starttime="20200402 21:36:21.745" endtime="20200402 21:38:34.625"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;1685d592-a716-47cb-80f7-ae3a3889a278&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:38:44.628" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:38:34.625" endtime="20200402 21:38:44.628"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:38:44.628" endtime="20200402 21:38:44.629"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:38:49.631" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:44.630" endtime="20200402 21:38:49.631"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:38:49.663" level="INFO">${Title} = FULL MSNBC MORNING JOE [6AM] 4/01/20 | MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:38:49.631" endtime="20200402 21:38:49.663"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:38:49.664" level="INFO">${Title} = FULL MSNBC MORNING JOE [6AM] 4/01/20 | MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:38:49.663" endtime="20200402 21:38:49.664"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:38:49.664" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL MSNBC MORNING JOE [6AM] 4/01/20 | MSNBC Trump Breaking News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:38:49.664" endtime="20200402 21:38:49.670"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:38:54.672" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:49.670" endtime="20200402 21:38:54.672"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:38:54.672" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:38:54.674" level="INFO">${list} = ((4363,),)</msg>
<status status="PASS" starttime="20200402 21:38:54.672" endtime="20200402 21:38:54.674"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:38:54.674" endtime="20200402 21:38:54.674"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:38:54.675" level="INFO">${list} = [4363]</msg>
<status status="PASS" starttime="20200402 21:38:54.674" endtime="20200402 21:38:54.675"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:38:54.675" level="INFO">${Count3} = 4363</msg>
<status status="PASS" starttime="20200402 21:38:54.675" endtime="20200402 21:38:54.675"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:38:59.677" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:54.676" endtime="20200402 21:38:59.677"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:38:59.705" level="INFO">${Total_View} = 172 views</msg>
<status status="PASS" starttime="20200402 21:38:59.677" endtime="20200402 21:38:59.705"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:38:59.706" level="INFO">${Total_View} = 172 views</msg>
<status status="PASS" starttime="20200402 21:38:59.706" endtime="20200402 21:38:59.706"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:38:59.706" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '172 views' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:38:59.706" endtime="20200402 21:38:59.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:04.715" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:38:59.713" endtime="20200402 21:39:04.715"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:39:04.758" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:39:04.715" endtime="20200402 21:39:04.758"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:39:04.758" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:39:04.758" endtime="20200402 21:39:04.758"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:04.759" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:04.759" endtime="20200402 21:39:04.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:09.767" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:04.765" endtime="20200402 21:39:09.767"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:39:09.786" level="INFO">${Duration} = 2 minutes, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:39:09.767" endtime="20200402 21:39:09.786"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:39:09.787" level="INFO">${Duration} = 2 minutes, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:39:09.786" endtime="20200402 21:39:09.787"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:09.787" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 54 seconds' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:09.787" endtime="20200402 21:39:09.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:14.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:09.793" endtime="20200402 21:39:14.795"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:39:14.815" level="INFO">${URL} = https://www.youtube.com/watch?v=_nXNqNUBkP8</msg>
<status status="PASS" starttime="20200402 21:39:14.795" endtime="20200402 21:39:14.815"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:39:14.815" level="INFO">${URL} = https://www.youtube.com/watch?v=_nXNqNUBkP8</msg>
<status status="PASS" starttime="20200402 21:39:14.815" endtime="20200402 21:39:14.815"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:14.816" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=_nXNqNUBkP8' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:14.815" endtime="20200402 21:39:14.822"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:39:14.824" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:39:14.823" endtime="20200402 21:39:15.251"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:39:15.251" endtime="20200402 21:39:15.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:39:25.258" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:39:15.258" endtime="20200402 21:39:25.258"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:39:25.258" level="INFO">Opening url 'https://www.youtube.com/watch?v=_nXNqNUBkP8'</msg>
<status status="PASS" starttime="20200402 21:39:25.258" endtime="20200402 21:39:28.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:39:38.392" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:39:28.391" endtime="20200402 21:39:38.392"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:39:38.420" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:39:38.392" endtime="20200402 21:39:38.420"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:39:38.421" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:39:38.420" endtime="20200402 21:39:38.421"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:38.421" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:38.421" endtime="20200402 21:39:38.428"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:43.429" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:38.428" endtime="20200402 21:39:43.429"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:39:43.455" level="INFO">${Full_View_Count} = 313 views</msg>
<status status="PASS" starttime="20200402 21:39:43.429" endtime="20200402 21:39:43.455"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:39:43.456" level="INFO">${Full_View_Count} = 313 views</msg>
<status status="PASS" starttime="20200402 21:39:43.456" endtime="20200402 21:39:43.456"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:43.457" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='313 views' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:43.456" endtime="20200402 21:39:43.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:48.464" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:43.463" endtime="20200402 21:39:48.464"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:39:48.507" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:39:48.464" endtime="20200402 21:39:48.507"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:39:48.507" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:39:48.507" endtime="20200402 21:39:48.507"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:39:48.508" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4363' </msg>
<status status="PASS" starttime="20200402 21:39:48.507" endtime="20200402 21:39:48.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:53.515" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:48.514" endtime="20200402 21:39:53.515"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:39:53.556" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:39:53.515" endtime="20200402 21:39:53.556"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:39:53.556" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:39:53.556" endtime="20200402 21:39:53.557"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:53.557" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:53.557" endtime="20200402 21:39:53.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:39:58.565" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:53.564" endtime="20200402 21:39:58.565"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:39:58.593" level="INFO">${Total_Dis_Likes} = 13</msg>
<status status="PASS" starttime="20200402 21:39:58.565" endtime="20200402 21:39:58.593"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:39:58.593" level="INFO">${Total_Dis_Likes} = 13</msg>
<status status="PASS" starttime="20200402 21:39:58.593" endtime="20200402 21:39:58.593"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:39:58.594" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='13' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:39:58.594" endtime="20200402 21:39:58.600"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:40:03.602" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:39:58.601" endtime="20200402 21:40:03.602"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:40:03.627" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:40:03.602" endtime="20200402 21:40:03.627"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:40:03.628" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:40:03.627" endtime="20200402 21:40:03.628"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:40:03.628" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:40:03.628" endtime="20200402 21:40:03.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:40:08.636" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:40:03.635" endtime="20200402 21:40:08.636"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:40:08.678" level="INFO">${Channel_Name} = Jackson Mcgonigal</msg>
<status status="PASS" starttime="20200402 21:40:08.636" endtime="20200402 21:40:08.678"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:40:08.679" level="INFO">${Channel_Name} = Jackson Mcgonigal</msg>
<status status="PASS" starttime="20200402 21:40:08.678" endtime="20200402 21:40:08.679"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:40:08.679" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Jackson Mcgonigal' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:40:08.679" endtime="20200402 21:40:08.688"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:40:08.688" endtime="20200402 21:40:10.504"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:40:25.505" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:40:10.504" endtime="20200402 21:40:25.505"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:40:25.506" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:40:25.505" endtime="20200402 21:40:25.610"></status>
</kw>
<status status="PASS" starttime="20200402 21:40:25.505" endtime="20200402 21:40:25.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:40:35.611" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:40:25.610" endtime="20200402 21:40:35.611"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:40:35.638" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:40:35.611" endtime="20200402 21:40:35.638"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:40:35.638" level="INFO">${Category} = Entertainment</msg>
<status status="PASS" starttime="20200402 21:40:35.638" endtime="20200402 21:40:35.638"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:40:35.639" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Entertainment' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:40:35.639" endtime="20200402 21:40:35.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:40:40.649" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:40:35.648" endtime="20200402 21:40:40.649"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:40:40.680" level="INFO">${Description} = FULL MSNBC MORNING JOE [6AM] 4/01/20  |  MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:40:40.649" endtime="20200402 21:40:40.680"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:40:40.681" level="INFO">${Description} = FULL MSNBC MORNING JOE [6AM] 4/01/20  |  MSNBC Trump Breaking News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:40:40.681" endtime="20200402 21:40:40.681"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:40:40.681" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL MSNBC MORNING JOE [6AM] 4/01/20  |  MSNBC Trump Breaking News April 2, 2020' where id=4363 </msg>
<status status="PASS" starttime="20200402 21:40:40.681" endtime="20200402 21:40:40.688"></status>
</kw>
<status status="PASS" starttime="20200402 21:39:14.823" endtime="20200402 21:40:40.688"></status>
</kw>
<status status="PASS" starttime="20200402 21:39:14.822" endtime="20200402 21:40:40.688"></status>
</kw>
<status status="PASS" starttime="20200402 21:38:44.629" endtime="20200402 21:40:40.688"></status>
</kw>
<msg timestamp="20200402 21:40:40.688" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:38:44.629" endtime="20200402 21:40:40.688"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:40:40.689" level="INFO">${Count2} = 32</msg>
<status status="PASS" starttime="20200402 21:40:40.688" endtime="20200402 21:40:40.689"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:40:40.689" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:40:40.689" endtime="20200402 21:40:40.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:40:40.690" endtime="20200402 21:40:40.757"></status>
</kw>
<status status="PASS" starttime="20200402 21:40:40.689" endtime="20200402 21:40:40.758"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:40:40.758" endtime="20200402 21:40:40.766"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:40:45.767" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:40:40.766" endtime="20200402 21:40:45.767"></status>
</kw>
<status status="PASS" starttime="20200402 21:38:34.625" endtime="20200402 21:40:45.767"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;9bb33ff9-9da8-4c96-8133-64111fd9f82b&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:40:55.767" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:40:45.767" endtime="20200402 21:40:55.767"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:40:55.767" endtime="20200402 21:40:55.768"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:00.770" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:40:55.768" endtime="20200402 21:41:00.770"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:41:00.800" level="INFO">${Title} = Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:41:00.770" endtime="20200402 21:41:00.800"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:41:00.801" level="INFO">${Title} = Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:41:00.800" endtime="20200402 21:41:00.801"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:41:00.801" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:41:00.801" endtime="20200402 21:41:00.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:05.808" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:00.807" endtime="20200402 21:41:05.808"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:41:05.808" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:41:05.810" level="INFO">${list} = ((4364,),)</msg>
<status status="PASS" starttime="20200402 21:41:05.808" endtime="20200402 21:41:05.810"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:41:05.810" endtime="20200402 21:41:05.810"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:41:05.811" level="INFO">${list} = [4364]</msg>
<status status="PASS" starttime="20200402 21:41:05.810" endtime="20200402 21:41:05.811"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:41:05.812" level="INFO">${Count3} = 4364</msg>
<status status="PASS" starttime="20200402 21:41:05.811" endtime="20200402 21:41:05.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:10.812" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:05.812" endtime="20200402 21:41:10.812"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:41:10.841" level="INFO">${Total_View} = 1.7K views</msg>
<status status="PASS" starttime="20200402 21:41:10.812" endtime="20200402 21:41:10.841"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:41:10.841" level="INFO">${Total_View} = 1.7K views</msg>
<status status="PASS" starttime="20200402 21:41:10.841" endtime="20200402 21:41:10.841"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:10.842" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.7K views' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:10.842" endtime="20200402 21:41:10.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:15.850" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:10.848" endtime="20200402 21:41:15.850"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:41:15.882" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:41:15.850" endtime="20200402 21:41:15.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:41:15.883" level="INFO">${Video_Rendered_Before} = 9 hours ago</msg>
<status status="PASS" starttime="20200402 21:41:15.882" endtime="20200402 21:41:15.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:15.883" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '9 hours ago' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:15.883" endtime="20200402 21:41:15.889"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:20.890" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:15.889" endtime="20200402 21:41:20.890"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:41:20.910" level="INFO">${Duration} = 2 minutes, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:41:20.890" endtime="20200402 21:41:20.910"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:41:20.911" level="INFO">${Duration} = 2 minutes, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:41:20.910" endtime="20200402 21:41:20.911"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:20.911" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 54 seconds' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:20.911" endtime="20200402 21:41:20.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:25.918" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:20.917" endtime="20200402 21:41:25.918"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:41:25.936" level="INFO">${URL} = https://www.youtube.com/watch?v=KrG83bB-UPA</msg>
<status status="PASS" starttime="20200402 21:41:25.918" endtime="20200402 21:41:25.936"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:41:25.937" level="INFO">${URL} = https://www.youtube.com/watch?v=KrG83bB-UPA</msg>
<status status="PASS" starttime="20200402 21:41:25.937" endtime="20200402 21:41:25.937"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:25.938" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=KrG83bB-UPA' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:25.937" endtime="20200402 21:41:25.944"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:41:25.946" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:41:25.945" endtime="20200402 21:41:26.331"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:41:26.331" endtime="20200402 21:41:26.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:41:36.339" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:41:26.338" endtime="20200402 21:41:36.339"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:41:36.339" level="INFO">Opening url 'https://www.youtube.com/watch?v=KrG83bB-UPA'</msg>
<status status="PASS" starttime="20200402 21:41:36.339" endtime="20200402 21:41:39.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:41:49.672" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:41:39.669" endtime="20200402 21:41:49.672"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:41:49.879" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:41:49.672" endtime="20200402 21:41:49.879"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:41:49.880" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:41:49.879" endtime="20200402 21:41:49.880"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:49.880" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:49.880" endtime="20200402 21:41:49.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:54.888" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:49.887" endtime="20200402 21:41:54.888"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:41:54.916" level="INFO">${Full_View_Count} = 1,863 views</msg>
<status status="PASS" starttime="20200402 21:41:54.888" endtime="20200402 21:41:54.916"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:41:54.916" level="INFO">${Full_View_Count} = 1,863 views</msg>
<status status="PASS" starttime="20200402 21:41:54.916" endtime="20200402 21:41:54.916"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:41:54.917" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,863 views' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:41:54.917" endtime="20200402 21:41:54.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:41:59.924" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:54.923" endtime="20200402 21:41:59.924"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:41:59.948" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:41:59.924" endtime="20200402 21:41:59.949"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:41:59.949" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:41:59.949" endtime="20200402 21:41:59.949"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:41:59.950" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4364' </msg>
<status status="PASS" starttime="20200402 21:41:59.949" endtime="20200402 21:41:59.956"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:04.958" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:41:59.956" endtime="20200402 21:42:04.958"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:42:04.988" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 21:42:04.958" endtime="20200402 21:42:04.988"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:42:04.988" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 21:42:04.988" endtime="20200402 21:42:04.988"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:04.989" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='5' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:04.988" endtime="20200402 21:42:04.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:09.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:42:04.995" endtime="20200402 21:42:09.996"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:42:10.063" level="INFO">${Total_Dis_Likes} = 17</msg>
<status status="PASS" starttime="20200402 21:42:09.996" endtime="20200402 21:42:10.063"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:42:10.064" level="INFO">${Total_Dis_Likes} = 17</msg>
<status status="PASS" starttime="20200402 21:42:10.064" endtime="20200402 21:42:10.064"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:10.065" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='17' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:10.064" endtime="20200402 21:42:10.070"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:15.072" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:42:10.071" endtime="20200402 21:42:15.072"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:42:15.098" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:42:15.072" endtime="20200402 21:42:15.098"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:42:15.098" level="INFO">${Total_Subscribers} = 6.61K subscribers</msg>
<status status="PASS" starttime="20200402 21:42:15.098" endtime="20200402 21:42:15.099"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:15.099" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '6.61K subscribers' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:15.099" endtime="20200402 21:42:15.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:20.108" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:42:15.106" endtime="20200402 21:42:20.108"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:42:20.135" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:42:20.108" endtime="20200402 21:42:20.135"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:42:20.135" level="INFO">${Channel_Name} = Destor</msg>
<status status="PASS" starttime="20200402 21:42:20.135" endtime="20200402 21:42:20.135"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:20.136" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Destor' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:20.135" endtime="20200402 21:42:20.142"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:42:20.142" endtime="20200402 21:42:21.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:42:36.486" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:42:21.485" endtime="20200402 21:42:36.486"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:42:36.487" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:42:36.486" endtime="20200402 21:42:36.587"></status>
</kw>
<status status="PASS" starttime="20200402 21:42:36.486" endtime="20200402 21:42:36.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:42:46.588" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:42:36.587" endtime="20200402 21:42:46.588"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:42:46.640" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:42:46.588" endtime="20200402 21:42:46.640"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:42:46.640" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 21:42:46.640" endtime="20200402 21:42:46.641"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:46.641" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:46.641" endtime="20200402 21:42:46.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:51.649" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:42:46.648" endtime="20200402 21:42:51.649"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:42:51.675" level="INFO">${Description} = Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:42:51.649" endtime="20200402 21:42:51.675"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:42:51.676" level="INFO">${Description} = Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:42:51.676" endtime="20200402 21:42:51.676"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:42:51.676" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Morning Joe 4/2/20 [6AM] | Morning Joe MSNBC News Today April 2, 2020' where id=4364 </msg>
<status status="PASS" starttime="20200402 21:42:51.676" endtime="20200402 21:42:51.683"></status>
</kw>
<status status="PASS" starttime="20200402 21:41:25.945" endtime="20200402 21:42:51.683"></status>
</kw>
<status status="PASS" starttime="20200402 21:41:25.944" endtime="20200402 21:42:51.683"></status>
</kw>
<status status="PASS" starttime="20200402 21:40:55.768" endtime="20200402 21:42:51.683"></status>
</kw>
<msg timestamp="20200402 21:42:51.684" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:40:55.768" endtime="20200402 21:42:51.684"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:42:51.684" level="INFO">${Count2} = 33</msg>
<status status="PASS" starttime="20200402 21:42:51.684" endtime="20200402 21:42:51.684"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:42:51.685" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:42:51.684" endtime="20200402 21:42:51.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:42:51.685" endtime="20200402 21:42:51.754"></status>
</kw>
<status status="PASS" starttime="20200402 21:42:51.685" endtime="20200402 21:42:51.755"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:42:51.755" endtime="20200402 21:42:51.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:42:56.763" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:42:51.761" endtime="20200402 21:42:56.763"></status>
</kw>
<status status="PASS" starttime="20200402 21:40:45.767" endtime="20200402 21:42:56.763"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;c845011e-08df-496c-b18b-8aacda11452e&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:43:06.765" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:42:56.763" endtime="20200402 21:43:06.765"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:43:06.765" endtime="20200402 21:43:06.766"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:11.768" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:06.766" endtime="20200402 21:43:11.768"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:43:11.799" level="INFO">${Title} = FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020</msg>
<status status="PASS" starttime="20200402 21:43:11.768" endtime="20200402 21:43:11.799"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:43:11.800" level="INFO">${Title} = FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020</msg>
<status status="PASS" starttime="20200402 21:43:11.799" endtime="20200402 21:43:11.800"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:43:11.800" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020') </msg>
<status status="PASS" starttime="20200402 21:43:11.800" endtime="20200402 21:43:11.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:16.809" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:11.808" endtime="20200402 21:43:16.809"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:43:16.809" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:43:16.811" level="INFO">${list} = ((4365,),)</msg>
<status status="PASS" starttime="20200402 21:43:16.809" endtime="20200402 21:43:16.811"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:43:16.811" endtime="20200402 21:43:16.811"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:43:16.812" level="INFO">${list} = [4365]</msg>
<status status="PASS" starttime="20200402 21:43:16.812" endtime="20200402 21:43:16.812"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:43:16.812" level="INFO">${Count3} = 4365</msg>
<status status="PASS" starttime="20200402 21:43:16.812" endtime="20200402 21:43:16.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:21.814" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:16.813" endtime="20200402 21:43:21.814"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:43:21.847" level="INFO">${Total_View} = 139 views</msg>
<status status="PASS" starttime="20200402 21:43:21.814" endtime="20200402 21:43:21.847"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:43:21.847" level="INFO">${Total_View} = 139 views</msg>
<status status="PASS" starttime="20200402 21:43:21.847" endtime="20200402 21:43:21.847"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:43:21.848" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '139 views' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:43:21.847" endtime="20200402 21:43:21.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:26.854" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:21.854" endtime="20200402 21:43:26.854"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:43:26.882" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:43:26.854" endtime="20200402 21:43:26.882"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:43:26.883" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:43:26.882" endtime="20200402 21:43:26.883"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:43:26.883" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '10 hours ago' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:43:26.883" endtime="20200402 21:43:26.889"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:31.891" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:26.889" endtime="20200402 21:43:31.891"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:43:31.912" level="INFO">${Duration} = 8 minutes, 59 seconds</msg>
<status status="PASS" starttime="20200402 21:43:31.891" endtime="20200402 21:43:31.912"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:43:31.912" level="INFO">${Duration} = 8 minutes, 59 seconds</msg>
<status status="PASS" starttime="20200402 21:43:31.912" endtime="20200402 21:43:31.912"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:43:31.913" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '8 minutes, 59 seconds' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:43:31.913" endtime="20200402 21:43:31.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:43:36.919" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:43:31.919" endtime="20200402 21:43:36.919"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:43:36.939" level="INFO">${URL} = https://www.youtube.com/watch?v=5SDaOBXsrMM</msg>
<status status="PASS" starttime="20200402 21:43:36.919" endtime="20200402 21:43:36.939"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:43:36.940" level="INFO">${URL} = https://www.youtube.com/watch?v=5SDaOBXsrMM</msg>
<status status="PASS" starttime="20200402 21:43:36.939" endtime="20200402 21:43:36.940"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:43:36.940" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=5SDaOBXsrMM' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:43:36.940" endtime="20200402 21:43:36.946"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:43:36.947" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:43:36.947" endtime="20200402 21:43:37.338"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:43:37.338" endtime="20200402 21:43:37.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:43:47.346" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:43:37.345" endtime="20200402 21:43:47.346"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:43:47.346" level="INFO">Opening url 'https://www.youtube.com/watch?v=5SDaOBXsrMM'</msg>
<status status="PASS" starttime="20200402 21:43:47.346" endtime="20200402 21:43:50.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:44:00.188" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:43:50.187" endtime="20200402 21:44:00.188"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:44:00.214" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:44:00.188" endtime="20200402 21:44:00.214"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:44:00.215" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:44:00.214" endtime="20200402 21:44:00.215"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:00.215" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:00.215" endtime="20200402 21:44:00.222"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:05.225" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:00.222" endtime="20200402 21:44:05.225"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:44:05.252" level="INFO">${Full_View_Count} = 279 views</msg>
<status status="PASS" starttime="20200402 21:44:05.225" endtime="20200402 21:44:05.252"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:44:05.252" level="INFO">${Full_View_Count} = 279 views</msg>
<status status="PASS" starttime="20200402 21:44:05.252" endtime="20200402 21:44:05.252"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:05.253" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='279 views' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:05.252" endtime="20200402 21:44:05.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:10.259" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:05.259" endtime="20200402 21:44:10.259"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:44:10.284" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:44:10.259" endtime="20200402 21:44:10.284"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:44:10.284" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:44:10.284" endtime="20200402 21:44:10.284"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:44:10.285" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4365' </msg>
<status status="PASS" starttime="20200402 21:44:10.285" endtime="20200402 21:44:10.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:15.293" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:10.291" endtime="20200402 21:44:15.293"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:44:15.323" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:44:15.293" endtime="20200402 21:44:15.323"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:44:15.324" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:44:15.323" endtime="20200402 21:44:15.324"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:15.324" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:15.324" endtime="20200402 21:44:15.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:20.331" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:15.331" endtime="20200402 21:44:20.331"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:44:20.358" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:44:20.331" endtime="20200402 21:44:20.358"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:44:20.359" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 21:44:20.358" endtime="20200402 21:44:20.359"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:20.359" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:20.359" endtime="20200402 21:44:20.365"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:25.366" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:20.365" endtime="20200402 21:44:25.366"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:44:25.395" level="INFO">${Total_Subscribers} = 1.24K subscribers</msg>
<status status="PASS" starttime="20200402 21:44:25.366" endtime="20200402 21:44:25.395"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:44:25.396" level="INFO">${Total_Subscribers} = 1.24K subscribers</msg>
<status status="PASS" starttime="20200402 21:44:25.395" endtime="20200402 21:44:25.396"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:25.396" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.24K subscribers' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:25.396" endtime="20200402 21:44:25.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:44:30.404" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:25.403" endtime="20200402 21:44:30.404"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:44:30.437" level="INFO">${Channel_Name} = Act Now 2020</msg>
<status status="PASS" starttime="20200402 21:44:30.404" endtime="20200402 21:44:30.437"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:44:30.438" level="INFO">${Channel_Name} = Act Now 2020</msg>
<status status="PASS" starttime="20200402 21:44:30.437" endtime="20200402 21:44:30.438"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:30.438" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Act Now 2020' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:30.438" endtime="20200402 21:44:30.445"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:44:30.445" endtime="20200402 21:44:32.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:44:47.055" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:44:32.054" endtime="20200402 21:44:47.055"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:44:47.056" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:44:47.056" endtime="20200402 21:44:47.245"></status>
</kw>
<status status="PASS" starttime="20200402 21:44:47.055" endtime="20200402 21:44:47.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:44:57.246" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:44:47.245" endtime="20200402 21:44:57.246"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:44:57.276" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:44:57.246" endtime="20200402 21:44:57.276"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:44:57.277" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:44:57.277" endtime="20200402 21:44:57.277"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:44:57.277" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:44:57.277" endtime="20200402 21:44:57.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:02.285" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:44:57.284" endtime="20200402 21:45:02.285"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:45:02.325" level="INFO">${Description} = FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020

ＬＩＫＥ | ＣＯＭＭＥＮＴ | ＳＨＡＲＥ | ＳＵＢＳＣＲＩＢＥ 
♛ Subscribe For Update Latest News: https://www.youtube.com/channel/UCbSK...
#breakingnew,#morn...</msg>
<status status="PASS" starttime="20200402 21:45:02.285" endtime="20200402 21:45:02.325"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:45:02.326" level="INFO">${Description} = FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020

ＬＩＫＥ | ＣＯＭＭＥＮＴ | ＳＨＡＲＥ | ＳＵＢＳＣＲＩＢＥ 
♛ Subscribe For Update Latest News: https://www.youtube.com/channel/UCbSK...
#breakingnew,#morn...</msg>
<status status="PASS" starttime="20200402 21:45:02.325" endtime="20200402 21:45:02.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:45:02.326" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL Morning Joe 5AM 4/2/20 [NEW] | MSNBC News Today April 02, 2020

ＬＩＫＥ | ＣＯＭＭＥＮＴ | ＳＨＡＲＥ | ＳＵＢＳＣＲＩＢＥ 
♛ Subscribe For Update Latest News: https://www.youtube.com/channel/UCbSK...
#breakingnew,#morningjoe,#msnbcnew,#msnbclive' where id=4365 </msg>
<status status="PASS" starttime="20200402 21:45:02.326" endtime="20200402 21:45:02.332"></status>
</kw>
<status status="PASS" starttime="20200402 21:43:36.947" endtime="20200402 21:45:02.333"></status>
</kw>
<status status="PASS" starttime="20200402 21:43:36.946" endtime="20200402 21:45:02.333"></status>
</kw>
<status status="PASS" starttime="20200402 21:43:06.766" endtime="20200402 21:45:02.333"></status>
</kw>
<msg timestamp="20200402 21:45:02.333" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:43:06.766" endtime="20200402 21:45:02.333"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:45:02.333" level="INFO">${Count2} = 34</msg>
<status status="PASS" starttime="20200402 21:45:02.333" endtime="20200402 21:45:02.333"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:45:02.334" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:45:02.334" endtime="20200402 21:45:02.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:45:02.335" endtime="20200402 21:45:02.407"></status>
</kw>
<status status="PASS" starttime="20200402 21:45:02.334" endtime="20200402 21:45:02.407"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:45:02.408" endtime="20200402 21:45:02.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:07.414" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:02.414" endtime="20200402 21:45:07.414"></status>
</kw>
<status status="PASS" starttime="20200402 21:42:56.763" endtime="20200402 21:45:07.414"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;5f92ba7a-0076-4030-ace5-78af3922f79c&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:45:17.415" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:45:07.414" endtime="20200402 21:45:17.415"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:45:17.415" endtime="20200402 21:45:17.416"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:22.418" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:17.417" endtime="20200402 21:45:22.418"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:45:22.450" level="INFO">${Title} = MSNBC Morning Joe 4/1/20 [6AM][NEW] | MSNBC News Today April 1, 2020</msg>
<status status="PASS" starttime="20200402 21:45:22.418" endtime="20200402 21:45:22.450"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:45:22.451" level="INFO">${Title} = MSNBC Morning Joe 4/1/20 [6AM][NEW] | MSNBC News Today April 1, 2020</msg>
<status status="PASS" starttime="20200402 21:45:22.450" endtime="20200402 21:45:22.451"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:45:22.451" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('MSNBC Morning Joe 4/1/20 [6AM][NEW] | MSNBC News Today April 1, 2020') </msg>
<status status="PASS" starttime="20200402 21:45:22.451" endtime="20200402 21:45:22.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:27.459" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:22.457" endtime="20200402 21:45:27.459"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:45:27.459" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:45:27.461" level="INFO">${list} = ((4366,),)</msg>
<status status="PASS" starttime="20200402 21:45:27.459" endtime="20200402 21:45:27.461"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:45:27.461" endtime="20200402 21:45:27.461"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:45:27.462" level="INFO">${list} = [4366]</msg>
<status status="PASS" starttime="20200402 21:45:27.461" endtime="20200402 21:45:27.462"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:45:27.463" level="INFO">${Count3} = 4366</msg>
<status status="PASS" starttime="20200402 21:45:27.462" endtime="20200402 21:45:27.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:32.463" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:27.463" endtime="20200402 21:45:32.463"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:45:32.492" level="INFO">${Total_View} = 654 views</msg>
<status status="PASS" starttime="20200402 21:45:32.463" endtime="20200402 21:45:32.492"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:45:32.492" level="INFO">${Total_View} = 654 views</msg>
<status status="PASS" starttime="20200402 21:45:32.492" endtime="20200402 21:45:32.493"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:45:32.493" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '654 views' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:45:32.493" endtime="20200402 21:45:32.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:37.501" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:32.500" endtime="20200402 21:45:37.501"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:45:37.528" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:45:37.501" endtime="20200402 21:45:37.528"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:45:37.529" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:45:37.528" endtime="20200402 21:45:37.529"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:45:37.529" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '10 hours ago' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:45:37.529" endtime="20200402 21:45:37.535"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:42.536" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:37.535" endtime="20200402 21:45:42.536"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:45:42.556" level="INFO">${Duration} = 3 seconds</msg>
<status status="PASS" starttime="20200402 21:45:42.536" endtime="20200402 21:45:42.556"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:45:42.557" level="INFO">${Duration} = 3 seconds</msg>
<status status="PASS" starttime="20200402 21:45:42.556" endtime="20200402 21:45:42.557"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:45:42.557" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '3 seconds' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:45:42.557" endtime="20200402 21:45:42.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:45:47.564" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:45:42.564" endtime="20200402 21:45:47.564"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:45:47.583" level="INFO">${URL} = https://www.youtube.com/watch?v=OtC5k83D3mA</msg>
<status status="PASS" starttime="20200402 21:45:47.564" endtime="20200402 21:45:47.583"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:45:47.584" level="INFO">${URL} = https://www.youtube.com/watch?v=OtC5k83D3mA</msg>
<status status="PASS" starttime="20200402 21:45:47.583" endtime="20200402 21:45:47.584"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:45:47.584" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=OtC5k83D3mA' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:45:47.584" endtime="20200402 21:45:47.591"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:45:47.593" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:45:47.592" endtime="20200402 21:45:47.992"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:45:47.993" endtime="20200402 21:45:48.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:45:58.001" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:45:48.000" endtime="20200402 21:45:58.001"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:45:58.001" level="INFO">Opening url 'https://www.youtube.com/watch?v=OtC5k83D3mA'</msg>
<status status="PASS" starttime="20200402 21:45:58.001" endtime="20200402 21:46:00.504"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:46:10.505" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:46:00.504" endtime="20200402 21:46:10.505"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:46:10.532" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:46:10.505" endtime="20200402 21:46:10.532"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:46:10.533" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:46:10.533" endtime="20200402 21:46:10.533"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:10.533" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:10.533" endtime="20200402 21:46:10.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:15.542" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:10.540" endtime="20200402 21:46:15.542"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:46:16.655" level="INFO">${Full_View_Count} = 61,928 views</msg>
<status status="PASS" starttime="20200402 21:46:15.542" endtime="20200402 21:46:16.655"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:46:16.655" level="INFO">${Full_View_Count} = 61,928 views</msg>
<status status="PASS" starttime="20200402 21:46:16.655" endtime="20200402 21:46:16.655"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:16.656" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='61,928 views' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:16.656" endtime="20200402 21:46:16.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:21.663" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:16.662" endtime="20200402 21:46:21.663"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:46:21.690" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:46:21.663" endtime="20200402 21:46:21.690"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:46:21.690" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:46:21.690" endtime="20200402 21:46:21.690"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:46:21.691" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4366' </msg>
<status status="PASS" starttime="20200402 21:46:21.690" endtime="20200402 21:46:21.699"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:26.700" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:21.699" endtime="20200402 21:46:26.700"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:46:26.736" level="INFO">${Total_Likes} = 7.1K</msg>
<status status="PASS" starttime="20200402 21:46:26.700" endtime="20200402 21:46:26.736"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:46:26.736" level="INFO">${Total_Likes} = 7.1K</msg>
<status status="PASS" starttime="20200402 21:46:26.736" endtime="20200402 21:46:26.736"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:26.737" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='7.1K' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:26.737" endtime="20200402 21:46:26.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:31.744" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:26.743" endtime="20200402 21:46:31.744"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:46:31.772" level="INFO">${Total_Dis_Likes} = 554</msg>
<status status="PASS" starttime="20200402 21:46:31.744" endtime="20200402 21:46:31.772"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:46:31.773" level="INFO">${Total_Dis_Likes} = 554</msg>
<status status="PASS" starttime="20200402 21:46:31.772" endtime="20200402 21:46:31.773"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:31.773" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='554' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:31.773" endtime="20200402 21:46:31.780"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:36.781" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:31.780" endtime="20200402 21:46:36.781"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:46:36.807" level="INFO">${Total_Subscribers} = 9.13M subscribers</msg>
<status status="PASS" starttime="20200402 21:46:36.781" endtime="20200402 21:46:36.807"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:46:36.808" level="INFO">${Total_Subscribers} = 9.13M subscribers</msg>
<status status="PASS" starttime="20200402 21:46:36.808" endtime="20200402 21:46:36.808"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:36.808" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '9.13M subscribers' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:36.808" endtime="20200402 21:46:36.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:46:41.817" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:46:36.815" endtime="20200402 21:46:41.817"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:46:41.844" level="INFO">${Channel_Name} = CNN</msg>
<status status="PASS" starttime="20200402 21:46:41.817" endtime="20200402 21:46:41.844"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:46:41.845" level="INFO">${Channel_Name} = CNN</msg>
<status status="PASS" starttime="20200402 21:46:41.844" endtime="20200402 21:46:41.845"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:46:41.845" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'CNN' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:46:41.845" endtime="20200402 21:46:41.851"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:46:41.851" endtime="20200402 21:46:43.144"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:46:58.144" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:46:43.144" endtime="20200402 21:46:58.144"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:46:58.145" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:46:58.144" endtime="20200402 21:46:58.269"></status>
</kw>
<status status="PASS" starttime="20200402 21:46:58.144" endtime="20200402 21:46:58.269"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:47:08.271" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:46:58.269" endtime="20200402 21:47:08.271"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:47:08.298" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:47:08.271" endtime="20200402 21:47:08.298"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:47:08.299" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:47:08.299" endtime="20200402 21:47:08.299"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:08.299" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:47:08.299" endtime="20200402 21:47:08.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:13.307" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:08.305" endtime="20200402 21:47:13.307"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:47:13.481" level="INFO">${Description} = CNN's Chris Cuomo joined his brother, New York Gov. Andrew Cuomo, during his press briefing to give an update on his experience fighting coronavirus. #CNN #News</msg>
<status status="PASS" starttime="20200402 21:47:13.307" endtime="20200402 21:47:13.481"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:47:13.481" level="INFO">${Description} = CNN''s Chris Cuomo joined his brother, New York Gov. Andrew Cuomo, during his press briefing to give an update on his experience fighting coronavirus. #CNN #News</msg>
<status status="PASS" starttime="20200402 21:47:13.481" endtime="20200402 21:47:13.482"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:13.482" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'CNN''s Chris Cuomo joined his brother, New York Gov. Andrew Cuomo, during his press briefing to give an update on his experience fighting coronavirus. #CNN #News' where id=4366 </msg>
<status status="PASS" starttime="20200402 21:47:13.482" endtime="20200402 21:47:13.489"></status>
</kw>
<status status="PASS" starttime="20200402 21:45:47.592" endtime="20200402 21:47:13.489"></status>
</kw>
<status status="PASS" starttime="20200402 21:45:47.591" endtime="20200402 21:47:13.489"></status>
</kw>
<status status="PASS" starttime="20200402 21:45:17.416" endtime="20200402 21:47:13.489"></status>
</kw>
<msg timestamp="20200402 21:47:13.489" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:45:17.416" endtime="20200402 21:47:13.489"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:47:13.490" level="INFO">${Count2} = 35</msg>
<status status="PASS" starttime="20200402 21:47:13.489" endtime="20200402 21:47:13.490"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:47:13.490" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:47:13.490" endtime="20200402 21:47:13.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:47:13.491" endtime="20200402 21:47:13.556"></status>
</kw>
<status status="PASS" starttime="20200402 21:47:13.490" endtime="20200402 21:47:13.556"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:47:13.556" endtime="20200402 21:47:13.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:18.562" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:13.562" endtime="20200402 21:47:18.562"></status>
</kw>
<status status="PASS" starttime="20200402 21:45:07.414" endtime="20200402 21:47:18.562"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;fe4e5bb4-4888-4705-bfda-00e7ebc49bcf&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:47:28.563" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:47:18.562" endtime="20200402 21:47:28.563"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:47:28.563" endtime="20200402 21:47:28.564"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:33.565" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:28.564" endtime="20200402 21:47:33.565"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:47:33.596" level="INFO">${Title} = FULL Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:47:33.565" endtime="20200402 21:47:33.596"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:47:33.597" level="INFO">${Title} = FULL Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:47:33.596" endtime="20200402 21:47:33.597"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:47:33.597" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:47:33.597" endtime="20200402 21:47:33.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:38.605" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:33.604" endtime="20200402 21:47:38.605"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:47:38.605" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:47:38.607" level="INFO">${list} = ((4367,),)</msg>
<status status="PASS" starttime="20200402 21:47:38.605" endtime="20200402 21:47:38.607"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:47:38.607" endtime="20200402 21:47:38.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:47:38.608" level="INFO">${list} = [4367]</msg>
<status status="PASS" starttime="20200402 21:47:38.608" endtime="20200402 21:47:38.608"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:47:38.608" level="INFO">${Count3} = 4367</msg>
<status status="PASS" starttime="20200402 21:47:38.608" endtime="20200402 21:47:38.608"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:43.610" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:38.609" endtime="20200402 21:47:43.610"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:47:43.637" level="INFO">${Total_View} = 156 views</msg>
<status status="PASS" starttime="20200402 21:47:43.610" endtime="20200402 21:47:43.637"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:47:43.638" level="INFO">${Total_View} = 156 views</msg>
<status status="PASS" starttime="20200402 21:47:43.637" endtime="20200402 21:47:43.638"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:43.638" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '156 views' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:47:43.638" endtime="20200402 21:47:43.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:48.645" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:43.645" endtime="20200402 21:47:48.645"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:47:48.671" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:47:48.645" endtime="20200402 21:47:48.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:47:48.672" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:47:48.671" endtime="20200402 21:47:48.672"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:48.672" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '10 hours ago' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:47:48.672" endtime="20200402 21:47:48.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:53.679" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:48.679" endtime="20200402 21:47:53.679"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:47:53.719" level="INFO">${Duration} = 10 seconds</msg>
<status status="PASS" starttime="20200402 21:47:53.679" endtime="20200402 21:47:53.719"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:47:53.720" level="INFO">${Duration} = 10 seconds</msg>
<status status="PASS" starttime="20200402 21:47:53.719" endtime="20200402 21:47:53.720"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:53.720" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '10 seconds' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:47:53.720" endtime="20200402 21:47:53.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:47:58.728" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:47:53.726" endtime="20200402 21:47:58.728"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:47:58.748" level="INFO">${URL} = https://www.youtube.com/watch?v=GfYCUskK2tU</msg>
<status status="PASS" starttime="20200402 21:47:58.728" endtime="20200402 21:47:58.748"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:47:58.749" level="INFO">${URL} = https://www.youtube.com/watch?v=GfYCUskK2tU</msg>
<status status="PASS" starttime="20200402 21:47:58.748" endtime="20200402 21:47:58.749"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:47:58.749" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=GfYCUskK2tU' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:47:58.749" endtime="20200402 21:47:58.755"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:47:58.757" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:47:58.756" endtime="20200402 21:47:59.178"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:47:59.178" endtime="20200402 21:47:59.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:48:09.186" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:47:59.185" endtime="20200402 21:48:09.186"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:48:09.186" level="INFO">Opening url 'https://www.youtube.com/watch?v=GfYCUskK2tU'</msg>
<status status="PASS" starttime="20200402 21:48:09.186" endtime="20200402 21:48:11.910"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:48:21.910" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:48:11.910" endtime="20200402 21:48:21.910"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:48:21.938" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:48:21.910" endtime="20200402 21:48:21.938"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:48:21.939" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:48:21.939" endtime="20200402 21:48:21.939"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:21.939" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:21.939" endtime="20200402 21:48:21.946"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:26.947" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:21.946" endtime="20200402 21:48:26.947"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:48:26.976" level="INFO">${Full_View_Count} = 437 views</msg>
<status status="PASS" starttime="20200402 21:48:26.947" endtime="20200402 21:48:26.976"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:48:26.977" level="INFO">${Full_View_Count} = 437 views</msg>
<status status="PASS" starttime="20200402 21:48:26.976" endtime="20200402 21:48:26.977"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:26.977" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='437 views' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:26.977" endtime="20200402 21:48:26.984"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:31.985" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:26.984" endtime="20200402 21:48:31.985"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:48:32.010" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:48:31.985" endtime="20200402 21:48:32.011"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:48:32.011" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:48:32.011" endtime="20200402 21:48:32.011"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:48:32.012" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4367' </msg>
<status status="PASS" starttime="20200402 21:48:32.011" endtime="20200402 21:48:32.018"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:37.018" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:32.018" endtime="20200402 21:48:37.018"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:48:37.045" level="INFO">${Total_Likes} = 198</msg>
<status status="PASS" starttime="20200402 21:48:37.018" endtime="20200402 21:48:37.046"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:48:37.046" level="INFO">${Total_Likes} = 198</msg>
<status status="PASS" starttime="20200402 21:48:37.046" endtime="20200402 21:48:37.046"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:37.047" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='198' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:37.046" endtime="20200402 21:48:37.053"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:42.054" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:37.053" endtime="20200402 21:48:42.054"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:48:42.080" level="INFO">${Total_Dis_Likes} = 76</msg>
<status status="PASS" starttime="20200402 21:48:42.054" endtime="20200402 21:48:42.080"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:48:42.080" level="INFO">${Total_Dis_Likes} = 76</msg>
<status status="PASS" starttime="20200402 21:48:42.080" endtime="20200402 21:48:42.080"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:42.081" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='76' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:42.081" endtime="20200402 21:48:42.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:47.089" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:42.088" endtime="20200402 21:48:47.089"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:48:47.114" level="INFO">${Total_Subscribers} = 1.46M subscribers</msg>
<status status="PASS" starttime="20200402 21:48:47.089" endtime="20200402 21:48:47.115"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:48:47.115" level="INFO">${Total_Subscribers} = 1.46M subscribers</msg>
<status status="PASS" starttime="20200402 21:48:47.115" endtime="20200402 21:48:47.115"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:47.116" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.46M subscribers' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:47.115" endtime="20200402 21:48:47.121"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:48:52.123" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:48:47.121" endtime="20200402 21:48:52.123"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:48:52.149" level="INFO">${Channel_Name} = Global News</msg>
<status status="PASS" starttime="20200402 21:48:52.123" endtime="20200402 21:48:52.149"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:48:52.150" level="INFO">${Channel_Name} = Global News</msg>
<status status="PASS" starttime="20200402 21:48:52.149" endtime="20200402 21:48:52.150"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:48:52.150" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Global News' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:48:52.150" endtime="20200402 21:48:52.155"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:48:52.155" endtime="20200402 21:48:54.237"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:49:09.240" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:48:54.237" endtime="20200402 21:49:09.240"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:49:09.241" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200402 21:49:09.719" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-45.png"&gt;&lt;img src="selenium-screenshot-45.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200402 21:49:09.343" endtime="20200402 21:49:09.719"></status>
</kw>
<msg timestamp="20200402 21:49:09.719" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=80.0.3987.149)
</msg>
<status status="FAIL" starttime="20200402 21:49:09.240" endtime="20200402 21:49:09.720"></status>
</kw>
<status status="PASS" starttime="20200402 21:49:09.240" endtime="20200402 21:49:09.720"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:49:19.720" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:49:09.720" endtime="20200402 21:49:19.720"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:49:19.747" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:49:19.720" endtime="20200402 21:49:19.747"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:49:19.747" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:49:19.747" endtime="20200402 21:49:19.747"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:49:19.748" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:49:19.747" endtime="20200402 21:49:19.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:24.755" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:19.754" endtime="20200402 21:49:24.755"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:49:24.798" level="INFO">${Description} = U.S. President Donald Trump and the U.S. coronavirus task force provide an update on the country's efforts to battle the COVID-19 pandemic on Thursday afternoon. 

On Wednesday, Trump said they'll soo...</msg>
<status status="PASS" starttime="20200402 21:49:24.755" endtime="20200402 21:49:24.798"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:49:24.799" level="INFO">${Description} = U.S. President Donald Trump and the U.S. coronavirus task force provide an update on the country''s efforts to battle the COVID-19 pandemic on Thursday afternoon. 

On Wednesday, Trump said they''ll s...</msg>
<status status="PASS" starttime="20200402 21:49:24.798" endtime="20200402 21:49:24.799"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:49:24.799" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'U.S. President Donald Trump and the U.S. coronavirus task force provide an update on the country''s efforts to battle the COVID-19 pandemic on Thursday afternoon. 

On Wednesday, Trump said they''ll soon be at a point where they''ll have far more ventilators than they can use and said he''s put in a very huge order to Walmart for protective gear for medical personnel.

The United States leads the most cases of any single country with more than 210,000 confirmed.

For more info, please go to https://globalnews.ca/news/6744076/u-...

Subscribe to Global News Channel HERE: http://bit.ly/20fcXDc
Like Global News on Facebook HERE: http://bit.ly/255GMJQ
Follow Global News on Twitter HERE: http://bit.ly/1Toz8mt
Follow Global News on Instagram HERE: https://bit.ly/2QZaZIB
#Coronavirus #COVID19 #DonaldTrump #GlobalNews' where id=4367 </msg>
<status status="PASS" starttime="20200402 21:49:24.799" endtime="20200402 21:49:24.805"></status>
</kw>
<status status="PASS" starttime="20200402 21:47:58.756" endtime="20200402 21:49:24.805"></status>
</kw>
<status status="PASS" starttime="20200402 21:47:58.755" endtime="20200402 21:49:24.805"></status>
</kw>
<status status="PASS" starttime="20200402 21:47:28.564" endtime="20200402 21:49:24.805"></status>
</kw>
<msg timestamp="20200402 21:49:24.806" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:47:28.564" endtime="20200402 21:49:24.806"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:49:24.806" level="INFO">${Count2} = 36</msg>
<status status="PASS" starttime="20200402 21:49:24.806" endtime="20200402 21:49:24.806"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:49:24.807" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:49:24.806" endtime="20200402 21:49:24.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:49:24.807" endtime="20200402 21:49:24.875"></status>
</kw>
<status status="PASS" starttime="20200402 21:49:24.807" endtime="20200402 21:49:24.875"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:49:24.875" endtime="20200402 21:49:24.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:29.884" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:24.882" endtime="20200402 21:49:29.884"></status>
</kw>
<status status="PASS" starttime="20200402 21:47:18.562" endtime="20200402 21:49:29.884"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;1542f737-994c-4fe0-9c0c-28f3191aff65&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:49:39.886" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:49:29.884" endtime="20200402 21:49:39.886"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:49:39.886" endtime="20200402 21:49:39.887"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:44.889" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:39.888" endtime="20200402 21:49:44.889"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:49:44.930" level="INFO">${Title} = Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:49:44.889" endtime="20200402 21:49:44.930"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:49:44.930" level="INFO">${Title} = Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:49:44.930" endtime="20200402 21:49:44.930"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:49:44.931" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 5AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:49:44.931" endtime="20200402 21:49:44.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:49.939" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:44.937" endtime="20200402 21:49:49.939"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:49:49.939" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:49:49.941" level="INFO">${list} = ((4368,),)</msg>
<status status="PASS" starttime="20200402 21:49:49.939" endtime="20200402 21:49:49.941"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:49:49.941" endtime="20200402 21:49:49.941"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:49:49.942" level="INFO">${list} = [4368]</msg>
<status status="PASS" starttime="20200402 21:49:49.942" endtime="20200402 21:49:49.942"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:49:49.942" level="INFO">${Count3} = 4368</msg>
<status status="PASS" starttime="20200402 21:49:49.942" endtime="20200402 21:49:49.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:54.943" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:49.943" endtime="20200402 21:49:54.943"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:49:54.970" level="INFO">${Total_View} = 151 views</msg>
<status status="PASS" starttime="20200402 21:49:54.943" endtime="20200402 21:49:54.970"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:49:54.970" level="INFO">${Total_View} = 151 views</msg>
<status status="PASS" starttime="20200402 21:49:54.970" endtime="20200402 21:49:54.971"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:49:54.971" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '151 views' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:49:54.971" endtime="20200402 21:49:54.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:49:59.978" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:49:54.978" endtime="20200402 21:49:59.978"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:50:00.008" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:49:59.978" endtime="20200402 21:50:00.008"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:50:00.008" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:50:00.008" endtime="20200402 21:50:00.008"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:00.009" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '10 hours ago' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:00.008" endtime="20200402 21:50:00.015"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:05.016" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:00.015" endtime="20200402 21:50:05.016"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:50:05.037" level="INFO">${Duration} = 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:05.016" endtime="20200402 21:50:05.038"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:50:05.038" level="INFO">${Duration} = 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:05.038" endtime="20200402 21:50:05.038"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:05.039" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '5 seconds' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:05.038" endtime="20200402 21:50:05.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:10.046" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:05.044" endtime="20200402 21:50:10.046"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:50:10.080" level="INFO">${URL} = https://www.youtube.com/watch?v=_mwmbcCqJKI</msg>
<status status="PASS" starttime="20200402 21:50:10.046" endtime="20200402 21:50:10.080"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:50:10.080" level="INFO">${URL} = https://www.youtube.com/watch?v=_mwmbcCqJKI</msg>
<status status="PASS" starttime="20200402 21:50:10.080" endtime="20200402 21:50:10.080"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:10.081" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=_mwmbcCqJKI' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:10.081" endtime="20200402 21:50:10.087"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:50:10.089" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:50:10.088" endtime="20200402 21:50:10.501"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:50:10.501" endtime="20200402 21:50:10.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:50:20.510" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:50:10.508" endtime="20200402 21:50:20.510"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:50:20.510" level="INFO">Opening url 'https://www.youtube.com/watch?v=_mwmbcCqJKI'</msg>
<status status="PASS" starttime="20200402 21:50:20.510" endtime="20200402 21:50:23.023"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:50:33.024" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:50:23.023" endtime="20200402 21:50:33.024"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:50:33.100" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:50:33.024" endtime="20200402 21:50:33.100"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:50:33.101" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:50:33.101" endtime="20200402 21:50:33.101"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:33.101" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:33.101" endtime="20200402 21:50:33.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:38.109" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:33.108" endtime="20200402 21:50:38.109"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:50:38.140" level="INFO">${Full_View_Count} = 573,122 views</msg>
<status status="PASS" starttime="20200402 21:50:38.109" endtime="20200402 21:50:38.140"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:50:38.141" level="INFO">${Full_View_Count} = 573,122 views</msg>
<status status="PASS" starttime="20200402 21:50:38.140" endtime="20200402 21:50:38.141"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:38.141" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='573,122 views' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:38.141" endtime="20200402 21:50:38.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:43.149" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:38.148" endtime="20200402 21:50:43.149"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:50:43.174" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:50:43.149" endtime="20200402 21:50:43.174"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:50:43.175" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:50:43.175" endtime="20200402 21:50:43.175"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:50:43.176" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4368' </msg>
<status status="PASS" starttime="20200402 21:50:43.175" endtime="20200402 21:50:43.182"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:48.184" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:43.183" endtime="20200402 21:50:48.184"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:50:48.210" level="INFO">${Total_Likes} = 13K</msg>
<status status="PASS" starttime="20200402 21:50:48.184" endtime="20200402 21:50:48.210"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:50:48.210" level="INFO">${Total_Likes} = 13K</msg>
<status status="PASS" starttime="20200402 21:50:48.210" endtime="20200402 21:50:48.210"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:48.211" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='13K' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:48.211" endtime="20200402 21:50:48.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:53.219" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:48.217" endtime="20200402 21:50:53.219"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:50:53.246" level="INFO">${Total_Dis_Likes} = 1.9K</msg>
<status status="PASS" starttime="20200402 21:50:53.219" endtime="20200402 21:50:53.246"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:50:53.246" level="INFO">${Total_Dis_Likes} = 1.9K</msg>
<status status="PASS" starttime="20200402 21:50:53.246" endtime="20200402 21:50:53.246"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:53.247" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='1.9K' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:53.246" endtime="20200402 21:50:53.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:50:58.255" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:53.254" endtime="20200402 21:50:58.255"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:50:58.282" level="INFO">${Total_Subscribers} = 9.13M subscribers</msg>
<status status="PASS" starttime="20200402 21:50:58.255" endtime="20200402 21:50:58.282"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:50:58.282" level="INFO">${Total_Subscribers} = 9.13M subscribers</msg>
<status status="PASS" starttime="20200402 21:50:58.282" endtime="20200402 21:50:58.282"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:50:58.283" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '9.13M subscribers' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:50:58.282" endtime="20200402 21:50:58.289"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:51:03.290" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:50:58.289" endtime="20200402 21:51:03.290"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:51:03.316" level="INFO">${Channel_Name} = CNN</msg>
<status status="PASS" starttime="20200402 21:51:03.290" endtime="20200402 21:51:03.316"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:51:03.317" level="INFO">${Channel_Name} = CNN</msg>
<status status="PASS" starttime="20200402 21:51:03.316" endtime="20200402 21:51:03.317"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:51:03.317" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'CNN' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:51:03.317" endtime="20200402 21:51:03.323"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:51:03.323" endtime="20200402 21:51:05.892"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:51:20.894" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:51:05.892" endtime="20200402 21:51:20.894"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:51:20.895" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:51:20.894" endtime="20200402 21:51:21.141"></status>
</kw>
<status status="PASS" starttime="20200402 21:51:20.894" endtime="20200402 21:51:21.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:51:31.143" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:51:21.141" endtime="20200402 21:51:31.143"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:51:31.183" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:51:31.143" endtime="20200402 21:51:31.183"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:51:31.184" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:51:31.184" endtime="20200402 21:51:31.184"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:51:31.185" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:51:31.184" endtime="20200402 21:51:31.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:51:36.192" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:51:31.191" endtime="20200402 21:51:36.192"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:51:36.268" level="INFO">${Description} = President Trump mocked Democratic nominee Michael Bloomberg at CPAC, an annual conservative gathering, and got a big reaction from the crowd.

#CNN #News</msg>
<status status="PASS" starttime="20200402 21:51:36.192" endtime="20200402 21:51:36.268"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:51:36.269" level="INFO">${Description} = President Trump mocked Democratic nominee Michael Bloomberg at CPAC, an annual conservative gathering, and got a big reaction from the crowd.

#CNN #News</msg>
<status status="PASS" starttime="20200402 21:51:36.268" endtime="20200402 21:51:36.269"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:51:36.269" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'President Trump mocked Democratic nominee Michael Bloomberg at CPAC, an annual conservative gathering, and got a big reaction from the crowd.

#CNN #News' where id=4368 </msg>
<status status="PASS" starttime="20200402 21:51:36.269" endtime="20200402 21:51:36.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:50:10.088" endtime="20200402 21:51:36.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:50:10.087" endtime="20200402 21:51:36.275"></status>
</kw>
<status status="PASS" starttime="20200402 21:49:39.887" endtime="20200402 21:51:36.275"></status>
</kw>
<msg timestamp="20200402 21:51:36.276" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:49:39.887" endtime="20200402 21:51:36.276"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:51:36.276" level="INFO">${Count2} = 37</msg>
<status status="PASS" starttime="20200402 21:51:36.276" endtime="20200402 21:51:36.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:51:36.277" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:51:36.276" endtime="20200402 21:51:36.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:51:36.277" endtime="20200402 21:51:36.347"></status>
</kw>
<status status="PASS" starttime="20200402 21:51:36.277" endtime="20200402 21:51:36.347"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:51:36.347" endtime="20200402 21:51:36.356"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:51:41.357" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:51:36.356" endtime="20200402 21:51:41.357"></status>
</kw>
<status status="PASS" starttime="20200402 21:49:29.884" endtime="20200402 21:51:41.357"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;cba79eb6-3232-484f-bc53-6d19e5673aaa&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:51:51.358" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:51:41.357" endtime="20200402 21:51:51.358"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:51:51.358" endtime="20200402 21:51:51.358"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:51:56.361" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:51:51.359" endtime="20200402 21:51:56.361"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:51:56.392" level="INFO">${Title} = FULL MORNING JOE 5AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 21:51:56.361" endtime="20200402 21:51:56.392"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:51:56.392" level="INFO">${Title} = FULL MORNING JOE 5AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 21:51:56.392" endtime="20200402 21:51:56.393"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:51:56.393" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('FULL MORNING JOE 5AM 4/2/2020 | MSNBC') </msg>
<status status="PASS" starttime="20200402 21:51:56.393" endtime="20200402 21:51:56.399"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:01.399" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:51:56.399" endtime="20200402 21:52:01.399"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:52:01.399" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:52:01.401" level="INFO">${list} = ((4369,),)</msg>
<status status="PASS" starttime="20200402 21:52:01.399" endtime="20200402 21:52:01.401"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:52:01.401" endtime="20200402 21:52:01.401"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:52:01.402" level="INFO">${list} = [4369]</msg>
<status status="PASS" starttime="20200402 21:52:01.401" endtime="20200402 21:52:01.402"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:52:01.402" level="INFO">${Count3} = 4369</msg>
<status status="PASS" starttime="20200402 21:52:01.402" endtime="20200402 21:52:01.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:06.403" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:01.402" endtime="20200402 21:52:06.403"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:52:06.431" level="INFO">${Total_View} = 197 views</msg>
<status status="PASS" starttime="20200402 21:52:06.403" endtime="20200402 21:52:06.431"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:52:06.432" level="INFO">${Total_View} = 197 views</msg>
<status status="PASS" starttime="20200402 21:52:06.432" endtime="20200402 21:52:06.432"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:06.432" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '197 views' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:06.432" endtime="20200402 21:52:06.438"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:11.439" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:06.439" endtime="20200402 21:52:11.439"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:52:11.466" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:52:11.439" endtime="20200402 21:52:11.466"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:52:11.467" level="INFO">${Video_Rendered_Before} = 10 hours ago</msg>
<status status="PASS" starttime="20200402 21:52:11.466" endtime="20200402 21:52:11.467"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:11.467" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '10 hours ago' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:11.467" endtime="20200402 21:52:11.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:16.475" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:11.474" endtime="20200402 21:52:16.475"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:52:16.495" level="INFO">${Duration} = 42 minutes</msg>
<status status="PASS" starttime="20200402 21:52:16.475" endtime="20200402 21:52:16.495"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:52:16.495" level="INFO">${Duration} = 42 minutes</msg>
<status status="PASS" starttime="20200402 21:52:16.495" endtime="20200402 21:52:16.495"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:16.496" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '42 minutes' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:16.496" endtime="20200402 21:52:16.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:21.503" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:16.502" endtime="20200402 21:52:21.503"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:52:21.523" level="INFO">${URL} = https://www.youtube.com/watch?v=FY23TlWytn8</msg>
<status status="PASS" starttime="20200402 21:52:21.503" endtime="20200402 21:52:21.523"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:52:21.524" level="INFO">${URL} = https://www.youtube.com/watch?v=FY23TlWytn8</msg>
<status status="PASS" starttime="20200402 21:52:21.523" endtime="20200402 21:52:21.524"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:21.524" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=FY23TlWytn8' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:21.524" endtime="20200402 21:52:21.530"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:52:21.532" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:52:21.531" endtime="20200402 21:52:21.900"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:52:21.900" endtime="20200402 21:52:21.907"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:52:31.922" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:52:21.907" endtime="20200402 21:52:31.922"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:52:31.922" level="INFO">Opening url 'https://www.youtube.com/watch?v=FY23TlWytn8'</msg>
<status status="PASS" starttime="20200402 21:52:31.922" endtime="20200402 21:52:34.014"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:52:44.015" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:52:34.014" endtime="20200402 21:52:44.015"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:52:44.066" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:52:44.015" endtime="20200402 21:52:44.066"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:52:44.066" level="INFO">${Date} = Apr 2, 2020</msg>
<status status="PASS" starttime="20200402 21:52:44.066" endtime="20200402 21:52:44.066"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:44.067" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 2, 2020' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:44.067" endtime="20200402 21:52:44.073"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:49.073" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:44.073" endtime="20200402 21:52:49.073"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:52:49.101" level="INFO">${Full_View_Count} = 236 views</msg>
<status status="PASS" starttime="20200402 21:52:49.073" endtime="20200402 21:52:49.101"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:52:49.102" level="INFO">${Full_View_Count} = 236 views</msg>
<status status="PASS" starttime="20200402 21:52:49.102" endtime="20200402 21:52:49.102"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:49.102" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='236 views' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:49.102" endtime="20200402 21:52:49.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:54.109" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:49.109" endtime="20200402 21:52:54.109"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:52:54.134" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:52:54.109" endtime="20200402 21:52:54.134"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:52:54.135" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:52:54.135" endtime="20200402 21:52:54.135"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:52:54.136" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4369' </msg>
<status status="PASS" starttime="20200402 21:52:54.135" endtime="20200402 21:52:54.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:52:59.149" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:54.146" endtime="20200402 21:52:59.149"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:52:59.210" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:52:59.149" endtime="20200402 21:52:59.210"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:52:59.210" level="INFO">${Total_Likes} = 2</msg>
<status status="PASS" starttime="20200402 21:52:59.210" endtime="20200402 21:52:59.211"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:52:59.211" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:52:59.211" endtime="20200402 21:52:59.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:53:04.218" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:52:59.217" endtime="20200402 21:53:04.218"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:53:04.246" level="INFO">${Total_Dis_Likes} = 7</msg>
<status status="PASS" starttime="20200402 21:53:04.218" endtime="20200402 21:53:04.246"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:53:04.246" level="INFO">${Total_Dis_Likes} = 7</msg>
<status status="PASS" starttime="20200402 21:53:04.246" endtime="20200402 21:53:04.247"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:53:04.247" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='7' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:53:04.247" endtime="20200402 21:53:04.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:53:09.255" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:53:04.254" endtime="20200402 21:53:09.255"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:53:09.279" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:53:09.255" endtime="20200402 21:53:09.279"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:53:09.280" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:53:09.279" endtime="20200402 21:53:09.280"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:53:09.280" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:53:09.280" endtime="20200402 21:53:09.286"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:53:14.286" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:53:09.286" endtime="20200402 21:53:14.286"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:53:14.315" level="INFO">${Channel_Name} = Aduslan Joi</msg>
<status status="PASS" starttime="20200402 21:53:14.286" endtime="20200402 21:53:14.315"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:53:14.316" level="INFO">${Channel_Name} = Aduslan Joi</msg>
<status status="PASS" starttime="20200402 21:53:14.315" endtime="20200402 21:53:14.316"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:53:14.316" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Aduslan Joi' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:53:14.316" endtime="20200402 21:53:14.323"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:53:14.323" endtime="20200402 21:53:16.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:53:31.076" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:53:16.075" endtime="20200402 21:53:31.076"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:53:31.077" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:53:31.076" endtime="20200402 21:53:31.186"></status>
</kw>
<status status="PASS" starttime="20200402 21:53:31.076" endtime="20200402 21:53:31.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:53:41.187" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:53:31.186" endtime="20200402 21:53:41.187"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:53:41.221" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:53:41.187" endtime="20200402 21:53:41.221"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:53:41.221" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:53:41.221" endtime="20200402 21:53:41.221"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:53:41.222" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:53:41.222" endtime="20200402 21:53:41.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:53:46.237" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:53:41.236" endtime="20200402 21:53:46.237"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:53:46.404" level="INFO">${Description} = FULL MORNING JOE 5AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 21:53:46.237" endtime="20200402 21:53:46.404"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:53:46.404" level="INFO">${Description} = FULL MORNING JOE 5AM 4/2/2020 | MSNBC</msg>
<status status="PASS" starttime="20200402 21:53:46.404" endtime="20200402 21:53:46.404"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:53:46.405" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'FULL MORNING JOE 5AM 4/2/2020 | MSNBC' where id=4369 </msg>
<status status="PASS" starttime="20200402 21:53:46.404" endtime="20200402 21:53:46.411"></status>
</kw>
<status status="PASS" starttime="20200402 21:52:21.531" endtime="20200402 21:53:46.411"></status>
</kw>
<status status="PASS" starttime="20200402 21:52:21.530" endtime="20200402 21:53:46.411"></status>
</kw>
<status status="PASS" starttime="20200402 21:51:51.359" endtime="20200402 21:53:46.411"></status>
</kw>
<msg timestamp="20200402 21:53:46.411" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:51:51.359" endtime="20200402 21:53:46.411"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:53:46.412" level="INFO">${Count2} = 38</msg>
<status status="PASS" starttime="20200402 21:53:46.411" endtime="20200402 21:53:46.412"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:53:46.412" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:53:46.412" endtime="20200402 21:53:46.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:53:46.413" endtime="20200402 21:53:46.509"></status>
</kw>
<status status="PASS" starttime="20200402 21:53:46.412" endtime="20200402 21:53:46.510"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:53:46.510" endtime="20200402 21:53:46.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:53:51.523" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:53:46.522" endtime="20200402 21:53:51.523"></status>
</kw>
<status status="PASS" starttime="20200402 21:51:41.357" endtime="20200402 21:53:51.523"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;624dfb99-e6a5-4071-a97e-c588c73ba563&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:54:01.524" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:53:51.523" endtime="20200402 21:54:01.524"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:54:01.524" endtime="20200402 21:54:01.524"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:06.526" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:01.526" endtime="20200402 21:54:06.526"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:54:06.558" level="INFO">${Title} = Morning Joe 4AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:54:06.526" endtime="20200402 21:54:06.558"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:54:06.558" level="INFO">${Title} = Morning Joe 4AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020</msg>
<status status="PASS" starttime="20200402 21:54:06.558" endtime="20200402 21:54:06.558"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:54:06.559" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Morning Joe 4AM 4/2/20[NEW] | Morning Joe MSNBC News April 2, 2020') </msg>
<status status="PASS" starttime="20200402 21:54:06.558" endtime="20200402 21:54:06.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:11.564" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:06.564" endtime="20200402 21:54:11.564"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:54:11.564" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:54:11.566" level="INFO">${list} = ((4370,),)</msg>
<status status="PASS" starttime="20200402 21:54:11.564" endtime="20200402 21:54:11.566"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:54:11.566" endtime="20200402 21:54:11.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:54:11.567" level="INFO">${list} = [4370]</msg>
<status status="PASS" starttime="20200402 21:54:11.566" endtime="20200402 21:54:11.567"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:54:11.567" level="INFO">${Count3} = 4370</msg>
<status status="PASS" starttime="20200402 21:54:11.567" endtime="20200402 21:54:11.567"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:16.569" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:11.567" endtime="20200402 21:54:16.569"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:54:16.596" level="INFO">${Total_View} = 238 views</msg>
<status status="PASS" starttime="20200402 21:54:16.569" endtime="20200402 21:54:16.596"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:54:16.597" level="INFO">${Total_View} = 238 views</msg>
<status status="PASS" starttime="20200402 21:54:16.596" endtime="20200402 21:54:16.597"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:16.597" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '238 views' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:16.597" endtime="20200402 21:54:16.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:21.605" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:16.604" endtime="20200402 21:54:21.605"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:54:21.632" level="INFO">${Video_Rendered_Before} = 11 hours ago</msg>
<status status="PASS" starttime="20200402 21:54:21.605" endtime="20200402 21:54:21.632"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:54:21.633" level="INFO">${Video_Rendered_Before} = 11 hours ago</msg>
<status status="PASS" starttime="20200402 21:54:21.632" endtime="20200402 21:54:21.633"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:21.633" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '11 hours ago' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:21.633" endtime="20200402 21:54:21.639"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:26.641" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:21.639" endtime="20200402 21:54:26.641"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:54:26.664" level="INFO">${Duration} = 13 seconds</msg>
<status status="PASS" starttime="20200402 21:54:26.641" endtime="20200402 21:54:26.664"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:54:26.664" level="INFO">${Duration} = 13 seconds</msg>
<status status="PASS" starttime="20200402 21:54:26.664" endtime="20200402 21:54:26.664"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:26.665" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '13 seconds' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:26.665" endtime="20200402 21:54:26.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:31.672" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:26.671" endtime="20200402 21:54:31.672"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:54:31.692" level="INFO">${URL} = https://www.youtube.com/watch?v=32uI2euH8BM</msg>
<status status="PASS" starttime="20200402 21:54:31.672" endtime="20200402 21:54:31.692"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:54:31.693" level="INFO">${URL} = https://www.youtube.com/watch?v=32uI2euH8BM</msg>
<status status="PASS" starttime="20200402 21:54:31.692" endtime="20200402 21:54:31.693"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:31.693" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=32uI2euH8BM' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:31.693" endtime="20200402 21:54:31.699"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:54:31.701" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:54:31.700" endtime="20200402 21:54:32.077"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:54:32.077" endtime="20200402 21:54:32.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:54:42.089" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:54:32.085" endtime="20200402 21:54:42.089"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:54:42.089" level="INFO">Opening url 'https://www.youtube.com/watch?v=32uI2euH8BM'</msg>
<status status="PASS" starttime="20200402 21:54:42.089" endtime="20200402 21:54:44.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:54:54.377" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:54:44.376" endtime="20200402 21:54:54.377"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:54:54.407" level="INFO">${Date} = Premiered 12 hours ago</msg>
<status status="PASS" starttime="20200402 21:54:54.377" endtime="20200402 21:54:54.407"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:54:54.408" level="INFO">${Date} = Premiered 12 hours ago</msg>
<status status="PASS" starttime="20200402 21:54:54.407" endtime="20200402 21:54:54.408"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:54.408" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Premiered 12 hours ago' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:54.408" endtime="20200402 21:54:54.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:54:59.419" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:54.419" endtime="20200402 21:54:59.419"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:54:59.547" level="INFO">${Full_View_Count} = 328 views</msg>
<status status="PASS" starttime="20200402 21:54:59.419" endtime="20200402 21:54:59.547"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:54:59.548" level="INFO">${Full_View_Count} = 328 views</msg>
<status status="PASS" starttime="20200402 21:54:59.548" endtime="20200402 21:54:59.548"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:54:59.549" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='328 views' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:54:59.548" endtime="20200402 21:54:59.555"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:04.556" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:54:59.555" endtime="20200402 21:55:04.556"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:55:04.581" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:55:04.556" endtime="20200402 21:55:04.581"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:55:04.581" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:55:04.581" endtime="20200402 21:55:04.581"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:55:04.582" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4370' </msg>
<status status="PASS" starttime="20200402 21:55:04.581" endtime="20200402 21:55:04.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:09.589" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:04.588" endtime="20200402 21:55:09.589"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:55:09.615" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 21:55:09.589" endtime="20200402 21:55:09.615"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:55:09.616" level="INFO">${Total_Likes} = 2.4K</msg>
<status status="PASS" starttime="20200402 21:55:09.616" endtime="20200402 21:55:09.616"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:09.616" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2.4K' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:09.616" endtime="20200402 21:55:09.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:14.623" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:09.623" endtime="20200402 21:55:14.623"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:55:14.651" level="INFO">${Total_Dis_Likes} = 179</msg>
<status status="PASS" starttime="20200402 21:55:14.623" endtime="20200402 21:55:14.651"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:55:14.651" level="INFO">${Total_Dis_Likes} = 179</msg>
<status status="PASS" starttime="20200402 21:55:14.651" endtime="20200402 21:55:14.651"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:14.652" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='179' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:14.652" endtime="20200402 21:55:14.658"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:19.658" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:14.658" endtime="20200402 21:55:19.658"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:55:19.684" level="INFO">${Total_Subscribers} = 926K subscribers</msg>
<status status="PASS" starttime="20200402 21:55:19.658" endtime="20200402 21:55:19.684"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:55:19.685" level="INFO">${Total_Subscribers} = 926K subscribers</msg>
<status status="PASS" starttime="20200402 21:55:19.684" endtime="20200402 21:55:19.685"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:19.685" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '926K subscribers' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:19.685" endtime="20200402 21:55:19.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:24.693" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:19.692" endtime="20200402 21:55:24.693"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:55:24.719" level="INFO">${Channel_Name} = FOX 10 Phoenix</msg>
<status status="PASS" starttime="20200402 21:55:24.693" endtime="20200402 21:55:24.719"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:55:24.720" level="INFO">${Channel_Name} = FOX 10 Phoenix</msg>
<status status="PASS" starttime="20200402 21:55:24.720" endtime="20200402 21:55:24.720"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:24.720" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'FOX 10 Phoenix' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:24.720" endtime="20200402 21:55:24.726"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:55:24.726" endtime="20200402 21:55:26.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:55:41.039" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:55:26.037" endtime="20200402 21:55:41.039"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:55:41.040" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:55:41.039" endtime="20200402 21:55:41.143"></status>
</kw>
<status status="PASS" starttime="20200402 21:55:41.039" endtime="20200402 21:55:41.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:55:51.144" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:55:41.143" endtime="20200402 21:55:51.144"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:55:51.170" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:55:51.144" endtime="20200402 21:55:51.170"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:55:51.170" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:55:51.170" endtime="20200402 21:55:51.171"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:51.171" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:51.171" endtime="20200402 21:55:51.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:55:56.179" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:51.177" endtime="20200402 21:55:56.179"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:55:56.204" level="INFO">${Description} = Sharing a mix of breaking news, top stories, popular culture and engaging discussions.</msg>
<status status="PASS" starttime="20200402 21:55:56.179" endtime="20200402 21:55:56.204"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:55:56.204" level="INFO">${Description} = Sharing a mix of breaking news, top stories, popular culture and engaging discussions.</msg>
<status status="PASS" starttime="20200402 21:55:56.204" endtime="20200402 21:55:56.204"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:55:56.205" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Sharing a mix of breaking news, top stories, popular culture and engaging discussions.' where id=4370 </msg>
<status status="PASS" starttime="20200402 21:55:56.204" endtime="20200402 21:55:56.212"></status>
</kw>
<status status="PASS" starttime="20200402 21:54:31.700" endtime="20200402 21:55:56.212"></status>
</kw>
<status status="PASS" starttime="20200402 21:54:31.700" endtime="20200402 21:55:56.212"></status>
</kw>
<status status="PASS" starttime="20200402 21:54:01.525" endtime="20200402 21:55:56.212"></status>
</kw>
<msg timestamp="20200402 21:55:56.212" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:54:01.525" endtime="20200402 21:55:56.212"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:55:56.213" level="INFO">${Count2} = 39</msg>
<status status="PASS" starttime="20200402 21:55:56.212" endtime="20200402 21:55:56.213"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:55:56.213" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:55:56.213" endtime="20200402 21:55:56.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:55:56.214" endtime="20200402 21:55:56.283"></status>
</kw>
<status status="PASS" starttime="20200402 21:55:56.213" endtime="20200402 21:55:56.283"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:55:56.284" endtime="20200402 21:55:56.289"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:01.292" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:55:56.290" endtime="20200402 21:56:01.292"></status>
</kw>
<status status="PASS" starttime="20200402 21:53:51.523" endtime="20200402 21:56:01.292"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;702c5f40-005e-4c65-b70d-e8de5c74e8ae&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:56:11.293" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:56:01.292" endtime="20200402 21:56:11.293"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:56:11.293" endtime="20200402 21:56:11.294"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:16.295" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:11.294" endtime="20200402 21:56:16.295"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:56:16.325" level="INFO">${Title} = WAPO: McConnell Says Pelosi Should 'Stand Down' On Coronavirus Rescue Bill | The 11th Hour | MSNBC</msg>
<status status="PASS" starttime="20200402 21:56:16.295" endtime="20200402 21:56:16.325"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:56:16.326" level="INFO">${Title} = WAPO: McConnell Says Pelosi Should ''Stand Down'' On Coronavirus Rescue Bill | The 11th Hour | MSNBC</msg>
<status status="PASS" starttime="20200402 21:56:16.326" endtime="20200402 21:56:16.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:56:16.326" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('WAPO: McConnell Says Pelosi Should ''Stand Down'' On Coronavirus Rescue Bill | The 11th Hour | MSNBC') </msg>
<status status="PASS" starttime="20200402 21:56:16.326" endtime="20200402 21:56:16.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:21.334" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:16.333" endtime="20200402 21:56:21.334"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:56:21.334" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:56:21.336" level="INFO">${list} = ((4371,),)</msg>
<status status="PASS" starttime="20200402 21:56:21.334" endtime="20200402 21:56:21.336"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:56:21.336" endtime="20200402 21:56:21.336"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:56:21.337" level="INFO">${list} = [4371]</msg>
<status status="PASS" starttime="20200402 21:56:21.337" endtime="20200402 21:56:21.337"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:56:21.337" level="INFO">${Count3} = 4371</msg>
<status status="PASS" starttime="20200402 21:56:21.337" endtime="20200402 21:56:21.337"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:26.339" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:21.338" endtime="20200402 21:56:26.339"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:56:26.366" level="INFO">${Total_View} = 32K views</msg>
<status status="PASS" starttime="20200402 21:56:26.339" endtime="20200402 21:56:26.366"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:56:26.367" level="INFO">${Total_View} = 32K views</msg>
<status status="PASS" starttime="20200402 21:56:26.366" endtime="20200402 21:56:26.367"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:56:26.367" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '32K views' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:56:26.367" endtime="20200402 21:56:26.373"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:31.374" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:26.374" endtime="20200402 21:56:31.374"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:56:31.403" level="INFO">${Video_Rendered_Before} = 15 hours ago</msg>
<status status="PASS" starttime="20200402 21:56:31.374" endtime="20200402 21:56:31.403"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:56:31.403" level="INFO">${Video_Rendered_Before} = 15 hours ago</msg>
<status status="PASS" starttime="20200402 21:56:31.403" endtime="20200402 21:56:31.403"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:56:31.404" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '15 hours ago' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:56:31.403" endtime="20200402 21:56:31.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:36.411" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:31.410" endtime="20200402 21:56:36.411"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:56:36.430" level="INFO">${Duration} = 1 minute, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:56:36.411" endtime="20200402 21:56:36.430"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:56:36.431" level="INFO">${Duration} = 1 minute, 54 seconds</msg>
<status status="PASS" starttime="20200402 21:56:36.431" endtime="20200402 21:56:36.431"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:56:36.432" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '1 minute, 54 seconds' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:56:36.431" endtime="20200402 21:56:36.438"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:56:41.439" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:56:36.438" endtime="20200402 21:56:41.439"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:56:41.458" level="INFO">${URL} = https://www.youtube.com/watch?v=ZVtODP85-_o</msg>
<status status="PASS" starttime="20200402 21:56:41.439" endtime="20200402 21:56:41.458"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:56:41.458" level="INFO">${URL} = https://www.youtube.com/watch?v=ZVtODP85-_o</msg>
<status status="PASS" starttime="20200402 21:56:41.458" endtime="20200402 21:56:41.458"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:56:41.459" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=ZVtODP85-_o' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:56:41.458" endtime="20200402 21:56:41.465"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:56:41.467" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:56:41.466" endtime="20200402 21:56:41.853"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:56:41.853" endtime="20200402 21:56:41.860"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:56:51.861" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:56:41.860" endtime="20200402 21:56:51.861"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:56:51.861" level="INFO">Opening url 'https://www.youtube.com/watch?v=ZVtODP85-_o'</msg>
<status status="PASS" starttime="20200402 21:56:51.861" endtime="20200402 21:56:54.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:57:04.664" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:56:54.662" endtime="20200402 21:57:04.664"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:57:04.691" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 21:57:04.664" endtime="20200402 21:57:04.691"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:57:04.692" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 21:57:04.692" endtime="20200402 21:57:04.692"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:04.692" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:04.692" endtime="20200402 21:57:04.698"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:09.700" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:04.698" endtime="20200402 21:57:09.700"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:57:09.727" level="INFO">${Full_View_Count} = 34,768 views</msg>
<status status="PASS" starttime="20200402 21:57:09.700" endtime="20200402 21:57:09.727"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:57:09.728" level="INFO">${Full_View_Count} = 34,768 views</msg>
<status status="PASS" starttime="20200402 21:57:09.727" endtime="20200402 21:57:09.728"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:09.728" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='34,768 views' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:09.728" endtime="20200402 21:57:09.742"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:14.743" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:09.742" endtime="20200402 21:57:14.743"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:57:14.767" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:57:14.743" endtime="20200402 21:57:14.767"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:57:14.768" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:57:14.767" endtime="20200402 21:57:14.768"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:57:14.768" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4371' </msg>
<status status="PASS" starttime="20200402 21:57:14.768" endtime="20200402 21:57:14.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:19.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:14.775" endtime="20200402 21:57:19.776"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:57:20.034" level="INFO">${Total_Likes} = 509</msg>
<status status="PASS" starttime="20200402 21:57:19.776" endtime="20200402 21:57:20.034"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:57:20.034" level="INFO">${Total_Likes} = 509</msg>
<status status="PASS" starttime="20200402 21:57:20.034" endtime="20200402 21:57:20.034"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:20.035" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='509' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:20.035" endtime="20200402 21:57:20.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:25.042" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:20.041" endtime="20200402 21:57:25.042"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:57:25.070" level="INFO">${Total_Dis_Likes} = 68</msg>
<status status="PASS" starttime="20200402 21:57:25.042" endtime="20200402 21:57:25.070"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:57:25.071" level="INFO">${Total_Dis_Likes} = 68</msg>
<status status="PASS" starttime="20200402 21:57:25.070" endtime="20200402 21:57:25.071"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:25.071" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='68' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:25.071" endtime="20200402 21:57:25.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:30.077" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:25.077" endtime="20200402 21:57:30.077"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:57:30.103" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 21:57:30.077" endtime="20200402 21:57:30.103"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:57:30.103" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 21:57:30.103" endtime="20200402 21:57:30.103"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:30.104" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:30.103" endtime="20200402 21:57:30.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:57:35.112" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:57:30.110" endtime="20200402 21:57:35.112"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:57:35.138" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 21:57:35.112" endtime="20200402 21:57:35.138"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:57:35.139" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 21:57:35.138" endtime="20200402 21:57:35.139"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:57:35.139" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:57:35.139" endtime="20200402 21:57:35.146"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:57:35.146" endtime="20200402 21:57:36.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 21:57:51.915" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:57:36.914" endtime="20200402 21:57:51.915"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 21:57:51.916" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 21:57:51.915" endtime="20200402 21:57:52.040"></status>
</kw>
<status status="PASS" starttime="20200402 21:57:51.915" endtime="20200402 21:57:52.040"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:58:02.041" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:57:52.040" endtime="20200402 21:58:02.041"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:58:02.068" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:58:02.041" endtime="20200402 21:58:02.068"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 21:58:02.069" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 21:58:02.069" endtime="20200402 21:58:02.069"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:02.069" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:58:02.069" endtime="20200402 21:58:02.075"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:07.076" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:02.075" endtime="20200402 21:58:07.076"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:58:07.116" level="INFO">${Description} = Is there already disagreement on Capitol Hill about another coronavirus emergency relief bill? Robert Costa of The Washington Post joins to discuss his latest reporting. Aired on 4/1/20.
» Subscribe t...</msg>
<status status="PASS" starttime="20200402 21:58:07.076" endtime="20200402 21:58:07.116"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 21:58:07.116" level="INFO">${Description} = Is there already disagreement on Capitol Hill about another coronavirus emergency relief bill? Robert Costa of The Washington Post joins to discuss his latest reporting. Aired on 4/1/20.
» Subscribe t...</msg>
<status status="PASS" starttime="20200402 21:58:07.116" endtime="20200402 21:58:07.116"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:07.117" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Is there already disagreement on Capitol Hill about another coronavirus emergency relief bill? Robert Costa of The Washington Post joins to discuss his latest reporting. Aired on 4/1/20.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news and in-depth analysis of the headlines, as well as informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

WAPO: McConnell Says Pelosi Should ''Stand Down'' On Coronavirus Rescue Bill | The 11th Hour | MSNBC' where id=4371 </msg>
<status status="PASS" starttime="20200402 21:58:07.116" endtime="20200402 21:58:07.124"></status>
</kw>
<status status="PASS" starttime="20200402 21:56:41.466" endtime="20200402 21:58:07.124"></status>
</kw>
<status status="PASS" starttime="20200402 21:56:41.465" endtime="20200402 21:58:07.124"></status>
</kw>
<status status="PASS" starttime="20200402 21:56:11.294" endtime="20200402 21:58:07.124"></status>
</kw>
<msg timestamp="20200402 21:58:07.124" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:56:11.294" endtime="20200402 21:58:07.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 21:58:07.125" level="INFO">${Count2} = 40</msg>
<status status="PASS" starttime="20200402 21:58:07.124" endtime="20200402 21:58:07.125"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 21:58:07.125" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 21:58:07.125" endtime="20200402 21:58:07.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 21:58:07.126" endtime="20200402 21:58:07.184"></status>
</kw>
<status status="PASS" starttime="20200402 21:58:07.125" endtime="20200402 21:58:07.184"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 21:58:07.184" endtime="20200402 21:58:07.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:12.193" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:07.192" endtime="20200402 21:58:12.193"></status>
</kw>
<status status="PASS" starttime="20200402 21:56:01.292" endtime="20200402 21:58:12.193"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;b268c239-753c-459b-8a69-4708db2deaec&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:58:22.193" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:58:12.193" endtime="20200402 21:58:22.193"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 21:58:22.193" endtime="20200402 21:58:22.194"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:27.195" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:22.195" endtime="20200402 21:58:27.195"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:58:27.226" level="INFO">${Title} = BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe</msg>
<status status="PASS" starttime="20200402 21:58:27.195" endtime="20200402 21:58:27.226"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 21:58:27.226" level="INFO">${Title} = BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe</msg>
<status status="PASS" starttime="20200402 21:58:27.226" endtime="20200402 21:58:27.226"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 21:58:27.227" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe') </msg>
<status status="PASS" starttime="20200402 21:58:27.226" endtime="20200402 21:58:27.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:32.236" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:27.234" endtime="20200402 21:58:32.236"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:58:32.236" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 21:58:32.238" level="INFO">${list} = ((4372,),)</msg>
<status status="PASS" starttime="20200402 21:58:32.236" endtime="20200402 21:58:32.238"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 21:58:32.238" endtime="20200402 21:58:32.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 21:58:32.239" level="INFO">${list} = [4372]</msg>
<status status="PASS" starttime="20200402 21:58:32.238" endtime="20200402 21:58:32.239"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 21:58:32.239" level="INFO">${Count3} = 4372</msg>
<status status="PASS" starttime="20200402 21:58:32.239" endtime="20200402 21:58:32.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:37.240" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:32.239" endtime="20200402 21:58:37.240"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:58:37.269" level="INFO">${Total_View} = 138 views</msg>
<status status="PASS" starttime="20200402 21:58:37.240" endtime="20200402 21:58:37.269"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 21:58:37.270" level="INFO">${Total_View} = 138 views</msg>
<status status="PASS" starttime="20200402 21:58:37.269" endtime="20200402 21:58:37.270"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:37.270" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '138 views' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:58:37.270" endtime="20200402 21:58:37.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:42.277" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:37.276" endtime="20200402 21:58:42.277"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:58:42.305" level="INFO">${Video_Rendered_Before} = 17 hours ago</msg>
<status status="PASS" starttime="20200402 21:58:42.277" endtime="20200402 21:58:42.305"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 21:58:42.305" level="INFO">${Video_Rendered_Before} = 17 hours ago</msg>
<status status="PASS" starttime="20200402 21:58:42.305" endtime="20200402 21:58:42.305"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:42.306" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '17 hours ago' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:58:42.306" endtime="20200402 21:58:42.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:47.312" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:42.312" endtime="20200402 21:58:47.312"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:58:47.333" level="INFO">${Duration} = 3 minutes, 16 seconds</msg>
<status status="PASS" starttime="20200402 21:58:47.312" endtime="20200402 21:58:47.333"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 21:58:47.333" level="INFO">${Duration} = 3 minutes, 16 seconds</msg>
<status status="PASS" starttime="20200402 21:58:47.333" endtime="20200402 21:58:47.333"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:47.334" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '3 minutes, 16 seconds' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:58:47.334" endtime="20200402 21:58:47.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:58:52.341" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:58:47.340" endtime="20200402 21:58:52.341"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:58:52.360" level="INFO">${URL} = https://www.youtube.com/watch?v=Djhi07DOW4A</msg>
<status status="PASS" starttime="20200402 21:58:52.341" endtime="20200402 21:58:52.360"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 21:58:52.361" level="INFO">${URL} = https://www.youtube.com/watch?v=Djhi07DOW4A</msg>
<status status="PASS" starttime="20200402 21:58:52.360" endtime="20200402 21:58:52.361"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:58:52.361" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=Djhi07DOW4A' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:58:52.361" endtime="20200402 21:58:52.368"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 21:58:52.370" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 21:58:52.369" endtime="20200402 21:58:52.751"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 21:58:52.751" endtime="20200402 21:58:52.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:59:02.761" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:58:52.758" endtime="20200402 21:59:02.761"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 21:59:02.761" level="INFO">Opening url 'https://www.youtube.com/watch?v=Djhi07DOW4A'</msg>
<status status="PASS" starttime="20200402 21:59:02.761" endtime="20200402 21:59:05.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 21:59:15.066" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 21:59:05.064" endtime="20200402 21:59:15.066"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:59:15.099" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 21:59:15.066" endtime="20200402 21:59:15.099"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 21:59:15.099" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 21:59:15.099" endtime="20200402 21:59:15.099"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:15.100" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:15.100" endtime="20200402 21:59:15.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:20.108" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:15.106" endtime="20200402 21:59:20.108"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:59:20.224" level="INFO">${Full_View_Count} = 993 views</msg>
<status status="PASS" starttime="20200402 21:59:20.108" endtime="20200402 21:59:20.224"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 21:59:20.225" level="INFO">${Full_View_Count} = 993 views</msg>
<status status="PASS" starttime="20200402 21:59:20.224" endtime="20200402 21:59:20.225"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:20.225" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='993 views' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:20.225" endtime="20200402 21:59:20.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:25.233" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:20.232" endtime="20200402 21:59:25.233"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:59:25.257" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:59:25.233" endtime="20200402 21:59:25.257"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 21:59:25.258" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 21:59:25.257" endtime="20200402 21:59:25.258"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 21:59:25.258" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4372' </msg>
<status status="PASS" starttime="20200402 21:59:25.258" endtime="20200402 21:59:25.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:30.265" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:25.264" endtime="20200402 21:59:30.265"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:59:30.291" level="INFO">${Total_Likes} = 45</msg>
<status status="PASS" starttime="20200402 21:59:30.265" endtime="20200402 21:59:30.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 21:59:30.292" level="INFO">${Total_Likes} = 45</msg>
<status status="PASS" starttime="20200402 21:59:30.292" endtime="20200402 21:59:30.292"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:30.293" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='45' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:30.292" endtime="20200402 21:59:30.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:35.300" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:30.299" endtime="20200402 21:59:35.300"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:59:35.326" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:59:35.300" endtime="20200402 21:59:35.326"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 21:59:35.326" level="INFO">${Total_Dis_Likes} = 1</msg>
<status status="PASS" starttime="20200402 21:59:35.326" endtime="20200402 21:59:35.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:35.327" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='1' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:35.326" endtime="20200402 21:59:35.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:40.334" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:35.333" endtime="20200402 21:59:40.334"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:59:40.358" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:59:40.334" endtime="20200402 21:59:40.358"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 21:59:40.358" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 21:59:40.358" endtime="20200402 21:59:40.358"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:40.359" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:40.358" endtime="20200402 21:59:40.365"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 21:59:45.366" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 21:59:40.365" endtime="20200402 21:59:45.366"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:59:45.391" level="INFO">${Channel_Name} = NEWS COOC</msg>
<status status="PASS" starttime="20200402 21:59:45.366" endtime="20200402 21:59:45.391"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 21:59:45.392" level="INFO">${Channel_Name} = NEWS COOC</msg>
<status status="PASS" starttime="20200402 21:59:45.391" endtime="20200402 21:59:45.392"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 21:59:45.392" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'NEWS COOC' where id=4372 </msg>
<status status="PASS" starttime="20200402 21:59:45.392" endtime="20200402 21:59:45.398"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 21:59:45.398" endtime="20200402 21:59:46.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:00:01.574" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 21:59:46.574" endtime="20200402 22:00:01.574"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:00:01.576" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:00:01.574" endtime="20200402 22:00:01.692"></status>
</kw>
<status status="PASS" starttime="20200402 22:00:01.574" endtime="20200402 22:00:01.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:00:11.694" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:00:01.692" endtime="20200402 22:00:11.694"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:00:11.720" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:00:11.694" endtime="20200402 22:00:11.720"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:00:11.721" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:00:11.721" endtime="20200402 22:00:11.721"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:00:11.721" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4372 </msg>
<status status="PASS" starttime="20200402 22:00:11.721" endtime="20200402 22:00:11.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:16.730" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:11.728" endtime="20200402 22:00:16.730"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:00:16.804" level="INFO">${Description} = BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe</msg>
<status status="PASS" starttime="20200402 22:00:16.730" endtime="20200402 22:00:16.804"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:00:16.805" level="INFO">${Description} = BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe</msg>
<status status="PASS" starttime="20200402 22:00:16.805" endtime="20200402 22:00:16.805"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:00:16.805" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'BREAKING NEWS: Trump mocks Pelosi’s praying and Trashes “PSYCHO” Morning Joe' where id=4372 </msg>
<status status="PASS" starttime="20200402 22:00:16.805" endtime="20200402 22:00:16.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:58:52.369" endtime="20200402 22:00:16.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:58:52.368" endtime="20200402 22:00:16.811"></status>
</kw>
<status status="PASS" starttime="20200402 21:58:22.194" endtime="20200402 22:00:16.811"></status>
</kw>
<msg timestamp="20200402 22:00:16.812" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 21:58:22.194" endtime="20200402 22:00:16.812"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:00:16.812" level="INFO">${Count2} = 41</msg>
<status status="PASS" starttime="20200402 22:00:16.812" endtime="20200402 22:00:16.812"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:00:16.813" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:00:16.813" endtime="20200402 22:00:16.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:00:16.813" endtime="20200402 22:00:16.937"></status>
</kw>
<status status="PASS" starttime="20200402 22:00:16.813" endtime="20200402 22:00:16.938"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:00:16.938" endtime="20200402 22:00:16.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:21.951" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:16.950" endtime="20200402 22:00:21.951"></status>
</kw>
<status status="PASS" starttime="20200402 21:58:12.193" endtime="20200402 22:00:21.951"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;4a763d59-2d7b-4989-937c-f52792a9409b&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:00:31.952" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:00:21.951" endtime="20200402 22:00:31.952"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:00:31.952" endtime="20200402 22:00:31.952"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:36.955" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:31.954" endtime="20200402 22:00:36.955"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:00:36.985" level="INFO">${Title} = Joe - Good Morning (prod by 라보 Beats)</msg>
<status status="PASS" starttime="20200402 22:00:36.955" endtime="20200402 22:00:36.985"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:00:36.985" level="INFO">${Title} = Joe - Good Morning (prod by 라보 Beats)</msg>
<status status="PASS" starttime="20200402 22:00:36.985" endtime="20200402 22:00:36.985"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:00:36.986" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Joe - Good Morning (prod by 라보 Beats)') </msg>
<status status="PASS" starttime="20200402 22:00:36.985" endtime="20200402 22:00:36.992"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:41.994" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:36.992" endtime="20200402 22:00:41.994"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:00:41.994" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:00:41.995" level="INFO">${list} = ((4373,),)</msg>
<status status="PASS" starttime="20200402 22:00:41.994" endtime="20200402 22:00:41.995"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:00:41.995" endtime="20200402 22:00:41.995"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:00:41.996" level="INFO">${list} = [4373]</msg>
<status status="PASS" starttime="20200402 22:00:41.995" endtime="20200402 22:00:41.996"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:00:41.996" level="INFO">${Count3} = 4373</msg>
<status status="PASS" starttime="20200402 22:00:41.996" endtime="20200402 22:00:41.996"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:46.998" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:41.996" endtime="20200402 22:00:46.998"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:00:47.025" level="INFO">${Total_View} = 4 views</msg>
<status status="PASS" starttime="20200402 22:00:46.998" endtime="20200402 22:00:47.025"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:00:47.025" level="INFO">${Total_View} = 4 views</msg>
<status status="PASS" starttime="20200402 22:00:47.025" endtime="20200402 22:00:47.025"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:00:47.026" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '4 views' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:00:47.025" endtime="20200402 22:00:47.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:52.034" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:47.033" endtime="20200402 22:00:52.034"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:00:52.060" level="INFO">${Video_Rendered_Before} = 18 hours ago</msg>
<status status="PASS" starttime="20200402 22:00:52.034" endtime="20200402 22:00:52.060"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:00:52.061" level="INFO">${Video_Rendered_Before} = 18 hours ago</msg>
<status status="PASS" starttime="20200402 22:00:52.060" endtime="20200402 22:00:52.061"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:00:52.062" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '18 hours ago' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:00:52.061" endtime="20200402 22:00:52.068"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:00:57.069" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:52.068" endtime="20200402 22:00:57.069"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:00:57.090" level="INFO">${Duration} = 2 minutes, 31 seconds</msg>
<status status="PASS" starttime="20200402 22:00:57.069" endtime="20200402 22:00:57.091"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:00:57.091" level="INFO">${Duration} = 2 minutes, 31 seconds</msg>
<status status="PASS" starttime="20200402 22:00:57.091" endtime="20200402 22:00:57.091"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:00:57.092" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 31 seconds' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:00:57.091" endtime="20200402 22:00:57.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:02.099" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:00:57.099" endtime="20200402 22:01:02.099"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:01:02.118" level="INFO">${URL} = https://www.youtube.com/watch?v=1w8pgOIrhMw</msg>
<status status="PASS" starttime="20200402 22:01:02.099" endtime="20200402 22:01:02.118"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:01:02.119" level="INFO">${URL} = https://www.youtube.com/watch?v=1w8pgOIrhMw</msg>
<status status="PASS" starttime="20200402 22:01:02.118" endtime="20200402 22:01:02.119"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:02.119" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=1w8pgOIrhMw' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:02.119" endtime="20200402 22:01:02.126"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:01:02.128" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:01:02.127" endtime="20200402 22:01:02.511"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:01:02.511" endtime="20200402 22:01:02.518"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:01:12.523" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:01:02.518" endtime="20200402 22:01:12.523"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:01:12.523" level="INFO">Opening url 'https://www.youtube.com/watch?v=1w8pgOIrhMw'</msg>
<status status="PASS" starttime="20200402 22:01:12.523" endtime="20200402 22:01:14.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:01:24.852" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:01:14.850" endtime="20200402 22:01:24.852"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:01:24.880" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:01:24.852" endtime="20200402 22:01:24.880"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:01:24.880" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:01:24.880" endtime="20200402 22:01:24.880"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:24.881" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:24.880" endtime="20200402 22:01:24.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:29.887" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:24.887" endtime="20200402 22:01:29.887"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:01:29.912" level="INFO">${Full_View_Count} = 9 views</msg>
<status status="PASS" starttime="20200402 22:01:29.887" endtime="20200402 22:01:29.912"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:01:29.913" level="INFO">${Full_View_Count} = 9 views</msg>
<status status="PASS" starttime="20200402 22:01:29.912" endtime="20200402 22:01:29.913"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:29.913" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='9 views' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:29.913" endtime="20200402 22:01:29.920"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:34.920" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:29.920" endtime="20200402 22:01:34.920"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:01:34.943" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:01:34.920" endtime="20200402 22:01:34.943"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:01:34.944" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:01:34.944" endtime="20200402 22:01:34.944"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:01:34.945" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4373' </msg>
<status status="PASS" starttime="20200402 22:01:34.944" endtime="20200402 22:01:34.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:39.951" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:34.951" endtime="20200402 22:01:39.951"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:01:39.978" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 22:01:39.951" endtime="20200402 22:01:39.978"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:01:39.979" level="INFO">${Total_Likes} = 1</msg>
<status status="PASS" starttime="20200402 22:01:39.978" endtime="20200402 22:01:39.979"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:39.979" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:39.979" endtime="20200402 22:01:39.985"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:44.987" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:39.985" endtime="20200402 22:01:44.987"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:01:45.012" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:01:44.987" endtime="20200402 22:01:45.012"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:01:45.013" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:01:45.012" endtime="20200402 22:01:45.013"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:45.013" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:45.013" endtime="20200402 22:01:45.021"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:50.022" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:45.022" endtime="20200402 22:01:50.022"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:01:50.048" level="INFO">${Total_Subscribers} = 2 subscribers</msg>
<status status="PASS" starttime="20200402 22:01:50.022" endtime="20200402 22:01:50.048"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:01:50.049" level="INFO">${Total_Subscribers} = 2 subscribers</msg>
<status status="PASS" starttime="20200402 22:01:50.049" endtime="20200402 22:01:50.049"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:50.049" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2 subscribers' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:50.049" endtime="20200402 22:01:50.056"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:01:55.057" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:01:50.056" endtime="20200402 22:01:55.057"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:01:55.084" level="INFO">${Channel_Name} = simplyj0e</msg>
<status status="PASS" starttime="20200402 22:01:55.057" endtime="20200402 22:01:55.084"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:01:55.085" level="INFO">${Channel_Name} = simplyj0e</msg>
<status status="PASS" starttime="20200402 22:01:55.085" endtime="20200402 22:01:55.085"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:01:55.085" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'simplyj0e' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:01:55.085" endtime="20200402 22:01:55.092"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:01:55.092" endtime="20200402 22:01:56.127"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:02:11.129" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:01:56.128" endtime="20200402 22:02:11.129"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:02:11.130" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:02:11.129" endtime="20200402 22:02:11.240"></status>
</kw>
<status status="PASS" starttime="20200402 22:02:11.129" endtime="20200402 22:02:11.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:02:21.241" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:02:11.240" endtime="20200402 22:02:21.241"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:02:21.267" level="INFO">${Category} = Music</msg>
<status status="PASS" starttime="20200402 22:02:21.241" endtime="20200402 22:02:21.268"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:02:21.268" level="INFO">${Category} = Music</msg>
<status status="PASS" starttime="20200402 22:02:21.268" endtime="20200402 22:02:21.268"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:02:21.269" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'Music' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:02:21.268" endtime="20200402 22:02:21.275"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:02:26.276" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:21.275" endtime="20200402 22:02:26.276"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:02:26.302" level="INFO">${Description} = A song with chill vibe &amp; message applicable to anyone.
Hope you like it.

Instrumental by 라보 Beats
Lyrics by simplyj0e

Link to the original beat used:
bit.ly/3aCcqaw</msg>
<status status="PASS" starttime="20200402 22:02:26.276" endtime="20200402 22:02:26.302"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:02:26.303" level="INFO">${Description} = A song with chill vibe &amp; message applicable to anyone.
Hope you like it.

Instrumental by 라보 Beats
Lyrics by simplyj0e

Link to the original beat used:
bit.ly/3aCcqaw</msg>
<status status="PASS" starttime="20200402 22:02:26.302" endtime="20200402 22:02:26.303"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:02:26.303" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'A song with chill vibe &amp; message applicable to anyone.
Hope you like it.

Instrumental by 라보 Beats
Lyrics by simplyj0e

Link to the original beat used:
bit.ly/3aCcqaw' where id=4373 </msg>
<status status="PASS" starttime="20200402 22:02:26.303" endtime="20200402 22:02:26.309"></status>
</kw>
<status status="PASS" starttime="20200402 22:01:02.127" endtime="20200402 22:02:26.309"></status>
</kw>
<status status="PASS" starttime="20200402 22:01:02.126" endtime="20200402 22:02:26.310"></status>
</kw>
<status status="PASS" starttime="20200402 22:00:31.954" endtime="20200402 22:02:26.310"></status>
</kw>
<msg timestamp="20200402 22:02:26.310" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:00:31.954" endtime="20200402 22:02:26.310"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:02:26.310" level="INFO">${Count2} = 42</msg>
<status status="PASS" starttime="20200402 22:02:26.310" endtime="20200402 22:02:26.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:02:26.311" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:02:26.310" endtime="20200402 22:02:26.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:02:26.311" endtime="20200402 22:02:26.380"></status>
</kw>
<status status="PASS" starttime="20200402 22:02:26.311" endtime="20200402 22:02:26.380"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:02:26.381" endtime="20200402 22:02:26.387"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:02:31.388" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:26.387" endtime="20200402 22:02:31.388"></status>
</kw>
<status status="PASS" starttime="20200402 22:00:21.951" endtime="20200402 22:02:31.388"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;ea37c276-bced-46b9-ad1c-0b1bda672ab4&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:02:41.389" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:02:31.388" endtime="20200402 22:02:41.389"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:02:41.389" endtime="20200402 22:02:41.389"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:02:46.392" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:41.390" endtime="20200402 22:02:46.392"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:02:46.424" level="INFO">${Title} = Watch Morning Joe Highlights: April 1 | MSNBC</msg>
<status status="PASS" starttime="20200402 22:02:46.392" endtime="20200402 22:02:46.424"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:02:46.425" level="INFO">${Title} = Watch Morning Joe Highlights: April 1 | MSNBC</msg>
<status status="PASS" starttime="20200402 22:02:46.424" endtime="20200402 22:02:46.425"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:02:46.425" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Watch Morning Joe Highlights: April 1 | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:02:46.425" endtime="20200402 22:02:46.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:02:51.433" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:46.431" endtime="20200402 22:02:51.433"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:02:51.433" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:02:51.435" level="INFO">${list} = ((4374,),)</msg>
<status status="PASS" starttime="20200402 22:02:51.433" endtime="20200402 22:02:51.435"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:02:51.435" endtime="20200402 22:02:51.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:02:51.436" level="INFO">${list} = [4374]</msg>
<status status="PASS" starttime="20200402 22:02:51.435" endtime="20200402 22:02:51.436"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:02:51.436" level="INFO">${Count3} = 4374</msg>
<status status="PASS" starttime="20200402 22:02:51.436" endtime="20200402 22:02:51.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:02:56.439" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:51.436" endtime="20200402 22:02:56.439"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:02:56.467" level="INFO">${Total_View} = 146K views</msg>
<status status="PASS" starttime="20200402 22:02:56.439" endtime="20200402 22:02:56.467"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:02:56.468" level="INFO">${Total_View} = 146K views</msg>
<status status="PASS" starttime="20200402 22:02:56.467" endtime="20200402 22:02:56.468"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:02:56.468" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '146K views' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:02:56.468" endtime="20200402 22:02:56.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:01.476" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:02:56.475" endtime="20200402 22:03:01.476"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:03:01.503" level="INFO">${Video_Rendered_Before} = 19 hours ago</msg>
<status status="PASS" starttime="20200402 22:03:01.476" endtime="20200402 22:03:01.504"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:03:01.504" level="INFO">${Video_Rendered_Before} = 19 hours ago</msg>
<status status="PASS" starttime="20200402 22:03:01.504" endtime="20200402 22:03:01.504"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:01.505" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '19 hours ago' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:01.504" endtime="20200402 22:03:01.511"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:06.512" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:01.511" endtime="20200402 22:03:06.512"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:03:06.532" level="INFO">${Duration} = 12 minutes, 59 seconds</msg>
<status status="PASS" starttime="20200402 22:03:06.512" endtime="20200402 22:03:06.532"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:03:06.532" level="INFO">${Duration} = 12 minutes, 59 seconds</msg>
<status status="PASS" starttime="20200402 22:03:06.532" endtime="20200402 22:03:06.532"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:06.533" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '12 minutes, 59 seconds' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:06.533" endtime="20200402 22:03:06.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:11.539" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:06.539" endtime="20200402 22:03:11.539"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:03:11.560" level="INFO">${URL} = https://www.youtube.com/watch?v=6HBo-I9iSfw</msg>
<status status="PASS" starttime="20200402 22:03:11.539" endtime="20200402 22:03:11.560"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:03:11.561" level="INFO">${URL} = https://www.youtube.com/watch?v=6HBo-I9iSfw</msg>
<status status="PASS" starttime="20200402 22:03:11.561" endtime="20200402 22:03:11.561"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:11.561" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=6HBo-I9iSfw' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:11.561" endtime="20200402 22:03:11.568"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:03:11.570" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:03:11.569" endtime="20200402 22:03:11.953"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:03:11.953" endtime="20200402 22:03:11.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:03:21.965" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:03:11.961" endtime="20200402 22:03:21.965"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:03:21.965" level="INFO">Opening url 'https://www.youtube.com/watch?v=6HBo-I9iSfw'</msg>
<status status="PASS" starttime="20200402 22:03:21.965" endtime="20200402 22:03:24.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:03:34.584" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:03:24.583" endtime="20200402 22:03:34.584"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:03:34.612" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:03:34.584" endtime="20200402 22:03:34.613"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:03:34.613" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:03:34.613" endtime="20200402 22:03:34.613"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:34.614" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:34.613" endtime="20200402 22:03:34.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:39.622" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:34.621" endtime="20200402 22:03:39.622"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:03:39.647" level="INFO">${Full_View_Count} = 155,221 views</msg>
<status status="PASS" starttime="20200402 22:03:39.622" endtime="20200402 22:03:39.647"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:03:39.648" level="INFO">${Full_View_Count} = 155,221 views</msg>
<status status="PASS" starttime="20200402 22:03:39.648" endtime="20200402 22:03:39.648"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:39.649" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='155,221 views' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:39.648" endtime="20200402 22:03:39.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:44.657" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:39.655" endtime="20200402 22:03:44.657"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:03:44.680" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:03:44.657" endtime="20200402 22:03:44.681"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:03:44.681" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:03:44.681" endtime="20200402 22:03:44.681"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:03:44.682" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4374' </msg>
<status status="PASS" starttime="20200402 22:03:44.681" endtime="20200402 22:03:44.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:49.690" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:44.689" endtime="20200402 22:03:49.690"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:03:49.718" level="INFO">${Total_Likes} = 1.2K</msg>
<status status="PASS" starttime="20200402 22:03:49.690" endtime="20200402 22:03:49.718"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:03:49.719" level="INFO">${Total_Likes} = 1.2K</msg>
<status status="PASS" starttime="20200402 22:03:49.718" endtime="20200402 22:03:49.719"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:49.719" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1.2K' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:49.719" endtime="20200402 22:03:49.726"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:54.728" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:49.727" endtime="20200402 22:03:54.728"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:03:54.755" level="INFO">${Total_Dis_Likes} = 73</msg>
<status status="PASS" starttime="20200402 22:03:54.728" endtime="20200402 22:03:54.755"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:03:54.755" level="INFO">${Total_Dis_Likes} = 73</msg>
<status status="PASS" starttime="20200402 22:03:54.755" endtime="20200402 22:03:54.755"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:54.756" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='73' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:54.756" endtime="20200402 22:03:54.762"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:03:59.763" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:54.762" endtime="20200402 22:03:59.763"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:03:59.788" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:03:59.763" endtime="20200402 22:03:59.788"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:03:59.788" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:03:59.788" endtime="20200402 22:03:59.788"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:03:59.789" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:03:59.788" endtime="20200402 22:03:59.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:04:04.796" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:03:59.795" endtime="20200402 22:04:04.796"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:04:04.822" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:04:04.796" endtime="20200402 22:04:04.823"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:04:04.823" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:04:04.823" endtime="20200402 22:04:04.823"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:04:04.824" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:04:04.823" endtime="20200402 22:04:04.831"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:04:04.831" endtime="20200402 22:04:06.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:04:21.513" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:04:06.512" endtime="20200402 22:04:21.513"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:04:21.514" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:04:21.513" endtime="20200402 22:04:21.604"></status>
</kw>
<status status="PASS" starttime="20200402 22:04:21.513" endtime="20200402 22:04:21.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:04:31.605" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:04:21.604" endtime="20200402 22:04:31.605"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:04:31.633" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:04:31.605" endtime="20200402 22:04:31.633"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:04:31.634" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:04:31.634" endtime="20200402 22:04:31.634"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:04:31.635" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:04:31.634" endtime="20200402 22:04:31.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:04:36.642" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:04:31.641" endtime="20200402 22:04:36.642"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:04:36.679" level="INFO">${Description} = 'Morning Joe' breaks down the day’s biggest stories. Watch on MSNBC weekdays from 6-9 a.m. ET. 

» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news and in-depth a...</msg>
<status status="PASS" starttime="20200402 22:04:36.642" endtime="20200402 22:04:36.679"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:04:36.680" level="INFO">${Description} = ''Morning Joe'' breaks down the day’s biggest stories. Watch on MSNBC weekdays from 6-9 a.m. ET. 

» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news and in-depth...</msg>
<status status="PASS" starttime="20200402 22:04:36.679" endtime="20200402 22:04:36.680"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:04:36.680" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '''Morning Joe'' breaks down the day’s biggest stories. Watch on MSNBC weekdays from 6-9 a.m. ET. 

» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news and in-depth analysis of the headlines, as well as informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc' where id=4374 </msg>
<status status="PASS" starttime="20200402 22:04:36.680" endtime="20200402 22:04:36.686"></status>
</kw>
<status status="PASS" starttime="20200402 22:03:11.569" endtime="20200402 22:04:36.686"></status>
</kw>
<status status="PASS" starttime="20200402 22:03:11.569" endtime="20200402 22:04:36.686"></status>
</kw>
<status status="PASS" starttime="20200402 22:02:41.390" endtime="20200402 22:04:36.686"></status>
</kw>
<msg timestamp="20200402 22:04:36.687" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:02:41.390" endtime="20200402 22:04:36.687"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:04:36.687" level="INFO">${Count2} = 43</msg>
<status status="PASS" starttime="20200402 22:04:36.687" endtime="20200402 22:04:36.687"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:04:36.688" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:04:36.687" endtime="20200402 22:04:36.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:04:36.688" endtime="20200402 22:04:36.760"></status>
</kw>
<status status="PASS" starttime="20200402 22:04:36.688" endtime="20200402 22:04:36.760"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:04:36.761" endtime="20200402 22:04:36.766"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:04:41.767" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:04:36.766" endtime="20200402 22:04:41.767"></status>
</kw>
<status status="PASS" starttime="20200402 22:02:31.388" endtime="20200402 22:04:41.767"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;50a37576-bed7-4d1e-aabf-d4711f823b64&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:04:51.767" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:04:41.767" endtime="20200402 22:04:51.767"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:04:51.767" endtime="20200402 22:04:51.767"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:04:56.769" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:04:51.768" endtime="20200402 22:04:56.769"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:04:56.800" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump's 'Nasty' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:04:56.769" endtime="20200402 22:04:56.800"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:04:56.801" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:04:56.800" endtime="20200402 22:04:56.801"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:04:56.801" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:04:56.801" endtime="20200402 22:04:56.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:01.809" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:04:56.807" endtime="20200402 22:05:01.809"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:05:01.809" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:05:01.811" level="INFO">${list} = ((4375,),)</msg>
<status status="PASS" starttime="20200402 22:05:01.809" endtime="20200402 22:05:01.811"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:05:01.811" endtime="20200402 22:05:01.811"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:05:01.812" level="INFO">${list} = [4375]</msg>
<status status="PASS" starttime="20200402 22:05:01.811" endtime="20200402 22:05:01.812"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:05:01.812" level="INFO">${Count3} = 4375</msg>
<status status="PASS" starttime="20200402 22:05:01.812" endtime="20200402 22:05:01.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:06.814" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:01.813" endtime="20200402 22:05:06.814"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:05:06.842" level="INFO">${Total_View} = No views</msg>
<status status="PASS" starttime="20200402 22:05:06.814" endtime="20200402 22:05:06.842"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:05:06.843" level="INFO">${Total_View} = No views</msg>
<status status="PASS" starttime="20200402 22:05:06.843" endtime="20200402 22:05:06.843"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:06.844" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= 'No views' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:06.843" endtime="20200402 22:05:06.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:11.851" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:06.850" endtime="20200402 22:05:11.851"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:05:11.880" level="INFO">${Video_Rendered_Before} = 20 hours ago</msg>
<status status="PASS" starttime="20200402 22:05:11.851" endtime="20200402 22:05:11.880"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:05:11.881" level="INFO">${Video_Rendered_Before} = 20 hours ago</msg>
<status status="PASS" starttime="20200402 22:05:11.880" endtime="20200402 22:05:11.881"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:11.881" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '20 hours ago' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:11.881" endtime="20200402 22:05:11.889"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:16.889" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:11.889" endtime="20200402 22:05:16.889"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:05:16.909" level="INFO">${Duration} = 4 minutes, 10 seconds</msg>
<status status="PASS" starttime="20200402 22:05:16.889" endtime="20200402 22:05:16.909"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:05:16.909" level="INFO">${Duration} = 4 minutes, 10 seconds</msg>
<status status="PASS" starttime="20200402 22:05:16.909" endtime="20200402 22:05:16.909"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:16.910" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '4 minutes, 10 seconds' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:16.910" endtime="20200402 22:05:16.915"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:21.917" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:16.916" endtime="20200402 22:05:21.917"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:05:21.936" level="INFO">${URL} = https://www.youtube.com/watch?v=YBVB7lS05oQ</msg>
<status status="PASS" starttime="20200402 22:05:21.917" endtime="20200402 22:05:21.936"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:05:21.937" level="INFO">${URL} = https://www.youtube.com/watch?v=YBVB7lS05oQ</msg>
<status status="PASS" starttime="20200402 22:05:21.936" endtime="20200402 22:05:21.937"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:21.937" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=YBVB7lS05oQ' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:21.937" endtime="20200402 22:05:21.943"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:05:21.944" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:05:21.944" endtime="20200402 22:05:22.322"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:05:22.322" endtime="20200402 22:05:22.329"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:05:32.344" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:05:22.329" endtime="20200402 22:05:32.344"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:05:32.344" level="INFO">Opening url 'https://www.youtube.com/watch?v=YBVB7lS05oQ'</msg>
<status status="PASS" starttime="20200402 22:05:32.344" endtime="20200402 22:05:34.958"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:05:44.959" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:05:34.959" endtime="20200402 22:05:44.959"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:05:44.986" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:05:44.959" endtime="20200402 22:05:44.986"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:05:44.987" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:05:44.986" endtime="20200402 22:05:44.987"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:44.987" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:44.987" endtime="20200402 22:05:44.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:49.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:44.994" endtime="20200402 22:05:49.996"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:05:50.021" level="INFO">${Full_View_Count} = 5 views</msg>
<status status="PASS" starttime="20200402 22:05:49.996" endtime="20200402 22:05:50.021"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:05:50.022" level="INFO">${Full_View_Count} = 5 views</msg>
<status status="PASS" starttime="20200402 22:05:50.021" endtime="20200402 22:05:50.022"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:05:50.022" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='5 views' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:05:50.022" endtime="20200402 22:05:50.028"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:05:55.030" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:50.028" endtime="20200402 22:05:55.030"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:05:55.054" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:05:55.030" endtime="20200402 22:05:55.054"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:05:55.054" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:05:55.054" endtime="20200402 22:05:55.054"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:05:55.055" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4375' </msg>
<status status="PASS" starttime="20200402 22:05:55.054" endtime="20200402 22:05:55.060"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:00.063" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:05:55.061" endtime="20200402 22:06:00.063"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:06:00.091" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:06:00.063" endtime="20200402 22:06:00.091"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:06:00.092" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:06:00.091" endtime="20200402 22:06:00.092"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:00.092" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:00.092" endtime="20200402 22:06:00.098"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:05.099" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:06:00.098" endtime="20200402 22:06:05.099"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:06:05.124" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:06:05.099" endtime="20200402 22:06:05.124"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:06:05.125" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:06:05.124" endtime="20200402 22:06:05.125"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:05.125" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:05.125" endtime="20200402 22:06:05.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:10.133" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:06:05.132" endtime="20200402 22:06:10.133"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:06:10.159" level="INFO">${Total_Subscribers} = 21.4K subscribers</msg>
<status status="PASS" starttime="20200402 22:06:10.133" endtime="20200402 22:06:10.159"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:06:10.160" level="INFO">${Total_Subscribers} = 21.4K subscribers</msg>
<status status="PASS" starttime="20200402 22:06:10.159" endtime="20200402 22:06:10.160"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:10.160" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '21.4K subscribers' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:10.160" endtime="20200402 22:06:10.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:15.168" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:06:10.167" endtime="20200402 22:06:15.168"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:06:15.194" level="INFO">${Channel_Name} = Victor Sampovsky Buyer</msg>
<status status="PASS" starttime="20200402 22:06:15.168" endtime="20200402 22:06:15.194"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:06:15.195" level="INFO">${Channel_Name} = Victor Sampovsky Buyer</msg>
<status status="PASS" starttime="20200402 22:06:15.194" endtime="20200402 22:06:15.195"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:15.195" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Victor Sampovsky Buyer' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:15.195" endtime="20200402 22:06:15.202"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:06:15.202" endtime="20200402 22:06:16.430"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:06:31.432" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:06:16.431" endtime="20200402 22:06:31.432"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:06:31.433" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:06:31.433" endtime="20200402 22:06:31.578"></status>
</kw>
<status status="PASS" starttime="20200402 22:06:31.432" endtime="20200402 22:06:31.578"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:06:41.580" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:06:31.578" endtime="20200402 22:06:41.580"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:06:41.610" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:06:41.580" endtime="20200402 22:06:41.610"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:06:41.611" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:06:41.610" endtime="20200402 22:06:41.611"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:41.611" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:41.611" endtime="20200402 22:06:41.618"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:46.619" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:06:41.618" endtime="20200402 22:06:46.619"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:06:46.643" level="INFO">${Description} = PBS NewsHour's Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a 'nasty question.' Aired on 3/16/2020.
» Subscribe to...</msg>
<status status="PASS" starttime="20200402 22:06:46.619" endtime="20200402 22:06:46.643"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:06:46.643" level="INFO">${Description} = PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe...</msg>
<status status="PASS" starttime="20200402 22:06:46.643" endtime="20200402 22:06:46.643"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:06:46.644" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe to MSNBC: 

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: 
Subscribe to MSNBC Newsletter: 
Find MSNBC on Facebook: 
Follow MSNBC on Twitter: 
Follow MSNBC on Instagram: 

Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC' where id=4375 </msg>
<status status="PASS" starttime="20200402 22:06:46.644" endtime="20200402 22:06:46.650"></status>
</kw>
<status status="PASS" starttime="20200402 22:05:21.943" endtime="20200402 22:06:46.650"></status>
</kw>
<status status="PASS" starttime="20200402 22:05:21.943" endtime="20200402 22:06:46.650"></status>
</kw>
<status status="PASS" starttime="20200402 22:04:51.768" endtime="20200402 22:06:46.650"></status>
</kw>
<msg timestamp="20200402 22:06:46.650" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:04:51.768" endtime="20200402 22:06:46.650"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:06:46.651" level="INFO">${Count2} = 44</msg>
<status status="PASS" starttime="20200402 22:06:46.650" endtime="20200402 22:06:46.651"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:06:46.651" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:06:46.651" endtime="20200402 22:06:46.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:06:46.652" endtime="20200402 22:06:46.712"></status>
</kw>
<status status="PASS" starttime="20200402 22:06:46.651" endtime="20200402 22:06:46.712"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:06:46.712" endtime="20200402 22:06:46.719"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:06:51.720" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:06:46.719" endtime="20200402 22:06:51.720"></status>
</kw>
<status status="PASS" starttime="20200402 22:04:41.767" endtime="20200402 22:06:51.720"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;977dc467-23cf-4666-85b9-1036969508ab&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:07:01.733" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:06:51.720" endtime="20200402 22:07:01.733"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:07:01.733" endtime="20200402 22:07:01.733"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:06.736" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:01.734" endtime="20200402 22:07:06.736"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:07:06.788" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump's 'Nasty' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:07:06.736" endtime="20200402 22:07:06.788"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:07:06.789" level="INFO">${Title} = Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:07:06.789" endtime="20200402 22:07:06.789"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:07:06.789" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:07:06.789" endtime="20200402 22:07:06.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:11.796" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:06.795" endtime="20200402 22:07:11.796"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:07:11.796" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:07:11.798" level="INFO">${list} = ((4376,),)</msg>
<status status="PASS" starttime="20200402 22:07:11.796" endtime="20200402 22:07:11.798"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:07:11.798" endtime="20200402 22:07:11.798"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:07:11.799" level="INFO">${list} = [4376]</msg>
<status status="PASS" starttime="20200402 22:07:11.798" endtime="20200402 22:07:11.799"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:07:11.799" level="INFO">${Count3} = 4376</msg>
<status status="PASS" starttime="20200402 22:07:11.799" endtime="20200402 22:07:11.799"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:16.800" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:11.800" endtime="20200402 22:07:16.800"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:07:16.832" level="INFO">${Total_View} = 5 views</msg>
<status status="PASS" starttime="20200402 22:07:16.800" endtime="20200402 22:07:16.832"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:07:16.833" level="INFO">${Total_View} = 5 views</msg>
<status status="PASS" starttime="20200402 22:07:16.832" endtime="20200402 22:07:16.833"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:16.833" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '5 views' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:16.833" endtime="20200402 22:07:16.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:21.841" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:16.841" endtime="20200402 22:07:21.841"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:07:21.868" level="INFO">${Video_Rendered_Before} = 20 hours ago</msg>
<status status="PASS" starttime="20200402 22:07:21.841" endtime="20200402 22:07:21.868"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:07:21.869" level="INFO">${Video_Rendered_Before} = 20 hours ago</msg>
<status status="PASS" starttime="20200402 22:07:21.869" endtime="20200402 22:07:21.869"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:21.869" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '20 hours ago' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:21.869" endtime="20200402 22:07:21.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:26.876" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:21.876" endtime="20200402 22:07:26.876"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:07:26.895" level="INFO">${Duration} = 4 minutes, 10 seconds</msg>
<status status="PASS" starttime="20200402 22:07:26.876" endtime="20200402 22:07:26.895"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:07:26.896" level="INFO">${Duration} = 4 minutes, 10 seconds</msg>
<status status="PASS" starttime="20200402 22:07:26.896" endtime="20200402 22:07:26.896"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:26.896" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '4 minutes, 10 seconds' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:26.896" endtime="20200402 22:07:26.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:31.902" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:26.902" endtime="20200402 22:07:31.902"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:07:31.924" level="INFO">${URL} = https://www.youtube.com/watch?v=VL5WzzfZp64</msg>
<status status="PASS" starttime="20200402 22:07:31.902" endtime="20200402 22:07:31.924"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:07:31.924" level="INFO">${URL} = https://www.youtube.com/watch?v=VL5WzzfZp64</msg>
<status status="PASS" starttime="20200402 22:07:31.924" endtime="20200402 22:07:31.924"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:31.925" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=VL5WzzfZp64' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:31.924" endtime="20200402 22:07:31.931"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:07:31.933" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:07:31.932" endtime="20200402 22:07:32.309"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:07:32.309" endtime="20200402 22:07:32.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:07:42.319" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:07:32.316" endtime="20200402 22:07:42.319"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:07:42.319" level="INFO">Opening url 'https://www.youtube.com/watch?v=VL5WzzfZp64'</msg>
<status status="PASS" starttime="20200402 22:07:42.319" endtime="20200402 22:07:44.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:07:54.539" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:07:44.539" endtime="20200402 22:07:54.539"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:07:54.567" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:07:54.539" endtime="20200402 22:07:54.567"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:07:54.567" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:07:54.567" endtime="20200402 22:07:54.567"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:54.568" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:54.567" endtime="20200402 22:07:54.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:07:59.575" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:54.574" endtime="20200402 22:07:59.575"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:07:59.600" level="INFO">${Full_View_Count} = 19 views</msg>
<status status="PASS" starttime="20200402 22:07:59.575" endtime="20200402 22:07:59.600"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:07:59.601" level="INFO">${Full_View_Count} = 19 views</msg>
<status status="PASS" starttime="20200402 22:07:59.600" endtime="20200402 22:07:59.601"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:07:59.601" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='19 views' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:07:59.601" endtime="20200402 22:07:59.608"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:04.609" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:07:59.608" endtime="20200402 22:08:04.609"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:08:04.631" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:08:04.609" endtime="20200402 22:08:04.632"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:08:04.632" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:08:04.632" endtime="20200402 22:08:04.632"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:08:04.633" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4376' </msg>
<status status="PASS" starttime="20200402 22:08:04.632" endtime="20200402 22:08:04.639"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:09.639" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:04.639" endtime="20200402 22:08:09.639"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:08:09.666" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:08:09.639" endtime="20200402 22:08:09.666"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:08:09.667" level="INFO">${Total_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:08:09.666" endtime="20200402 22:08:09.667"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:09.667" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='0' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:09.667" endtime="20200402 22:08:09.673"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:14.674" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:09.673" endtime="20200402 22:08:14.674"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:08:14.699" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:08:14.674" endtime="20200402 22:08:14.699"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:08:14.700" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:08:14.700" endtime="20200402 22:08:14.700"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:14.701" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:14.700" endtime="20200402 22:08:14.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:19.708" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:14.707" endtime="20200402 22:08:19.708"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:08:19.734" level="INFO">${Total_Subscribers} = 21.4K subscribers</msg>
<status status="PASS" starttime="20200402 22:08:19.708" endtime="20200402 22:08:19.734"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:08:19.734" level="INFO">${Total_Subscribers} = 21.4K subscribers</msg>
<status status="PASS" starttime="20200402 22:08:19.734" endtime="20200402 22:08:19.734"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:19.735" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '21.4K subscribers' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:19.734" endtime="20200402 22:08:19.741"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:24.742" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:19.741" endtime="20200402 22:08:24.742"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:08:24.788" level="INFO">${Channel_Name} = Victor Sampovsky Buyer</msg>
<status status="PASS" starttime="20200402 22:08:24.742" endtime="20200402 22:08:24.788"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:08:24.789" level="INFO">${Channel_Name} = Victor Sampovsky Buyer</msg>
<status status="PASS" starttime="20200402 22:08:24.788" endtime="20200402 22:08:24.789"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:24.789" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Victor Sampovsky Buyer' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:24.789" endtime="20200402 22:08:24.796"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:08:24.796" endtime="20200402 22:08:25.909"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:08:40.911" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:08:25.910" endtime="20200402 22:08:40.911"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:08:40.912" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:08:40.912" endtime="20200402 22:08:41.023"></status>
</kw>
<status status="PASS" starttime="20200402 22:08:40.911" endtime="20200402 22:08:41.023"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:08:51.024" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:08:41.023" endtime="20200402 22:08:51.024"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:08:51.051" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:08:51.024" endtime="20200402 22:08:51.051"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:08:51.052" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:08:51.051" endtime="20200402 22:08:51.052"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:51.052" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:51.052" endtime="20200402 22:08:51.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:08:56.061" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:51.058" endtime="20200402 22:08:56.061"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:08:56.220" level="INFO">${Description} = PBS NewsHour's Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a 'nasty question.' Aired on 3/16/2020.
» Subscribe to...</msg>
<status status="PASS" starttime="20200402 22:08:56.061" endtime="20200402 22:08:56.220"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:08:56.221" level="INFO">${Description} = PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe...</msg>
<status status="PASS" starttime="20200402 22:08:56.220" endtime="20200402 22:08:56.221"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:08:56.221" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'PBS NewsHour''s Yamiche Alcindor reacts to footage of the president last week calling her inquiry about the 2018 dismantling of a pandemic unit as a ''nasty question.'' Aired on 3/16/2020.
» Subscribe to MSNBC: 

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: 
Subscribe to MSNBC Newsletter: 
Find MSNBC on Facebook: 
Follow MSNBC on Twitter: 
Follow MSNBC on Instagram: 

Reporter Yamiche Alcindor Reacts To Trump''s ''Nasty'' Comment | Morning Joe | MSNBC' where id=4376 </msg>
<status status="PASS" starttime="20200402 22:08:56.221" endtime="20200402 22:08:56.227"></status>
</kw>
<status status="PASS" starttime="20200402 22:07:31.932" endtime="20200402 22:08:56.227"></status>
</kw>
<status status="PASS" starttime="20200402 22:07:31.931" endtime="20200402 22:08:56.227"></status>
</kw>
<status status="PASS" starttime="20200402 22:07:01.734" endtime="20200402 22:08:56.227"></status>
</kw>
<msg timestamp="20200402 22:08:56.227" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:07:01.733" endtime="20200402 22:08:56.227"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:08:56.228" level="INFO">${Count2} = 45</msg>
<status status="PASS" starttime="20200402 22:08:56.227" endtime="20200402 22:08:56.228"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:08:56.228" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:08:56.228" endtime="20200402 22:08:56.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:08:56.229" endtime="20200402 22:08:56.303"></status>
</kw>
<status status="PASS" starttime="20200402 22:08:56.229" endtime="20200402 22:08:56.303"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:08:56.303" endtime="20200402 22:08:56.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:01.315" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:08:56.313" endtime="20200402 22:09:01.315"></status>
</kw>
<status status="PASS" starttime="20200402 22:06:51.720" endtime="20200402 22:09:01.315"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;247980f2-2078-4755-8a13-b244de7713a7&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:09:11.317" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:09:01.315" endtime="20200402 22:09:11.317"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:09:11.317" endtime="20200402 22:09:11.318"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:16.320" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:11.318" endtime="20200402 22:09:16.320"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:09:16.352" level="INFO">${Title} = TRUMP GIVES PELOSI A BACKHANDED COMPLIMENT AFTER HER INTERVIEW WITH 'MORNING JOE'</msg>
<status status="PASS" starttime="20200402 22:09:16.320" endtime="20200402 22:09:16.352"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:09:16.352" level="INFO">${Title} = TRUMP GIVES PELOSI A BACKHANDED COMPLIMENT AFTER HER INTERVIEW WITH ''MORNING JOE''</msg>
<status status="PASS" starttime="20200402 22:09:16.352" endtime="20200402 22:09:16.352"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:09:16.353" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('TRUMP GIVES PELOSI A BACKHANDED COMPLIMENT AFTER HER INTERVIEW WITH ''MORNING JOE''') </msg>
<status status="PASS" starttime="20200402 22:09:16.352" endtime="20200402 22:09:16.358"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:21.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:16.358" endtime="20200402 22:09:21.360"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:09:21.360" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:09:21.362" level="INFO">${list} = ((4377,),)</msg>
<status status="PASS" starttime="20200402 22:09:21.360" endtime="20200402 22:09:21.362"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:09:21.362" endtime="20200402 22:09:21.362"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:09:21.363" level="INFO">${list} = [4377]</msg>
<status status="PASS" starttime="20200402 22:09:21.362" endtime="20200402 22:09:21.363"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:09:21.363" level="INFO">${Count3} = 4377</msg>
<status status="PASS" starttime="20200402 22:09:21.363" endtime="20200402 22:09:21.363"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:26.366" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:21.363" endtime="20200402 22:09:26.366"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:09:26.393" level="INFO">${Total_View} = 65 views</msg>
<status status="PASS" starttime="20200402 22:09:26.366" endtime="20200402 22:09:26.393"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:09:26.394" level="INFO">${Total_View} = 65 views</msg>
<status status="PASS" starttime="20200402 22:09:26.393" endtime="20200402 22:09:26.394"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:09:26.394" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '65 views' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:09:26.394" endtime="20200402 22:09:26.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:31.402" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:26.401" endtime="20200402 22:09:31.402"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:09:31.429" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:09:31.402" endtime="20200402 22:09:31.430"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:09:31.430" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:09:31.430" endtime="20200402 22:09:31.430"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:09:31.431" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:09:31.430" endtime="20200402 22:09:31.437"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:36.437" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:31.437" endtime="20200402 22:09:36.437"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:09:36.459" level="INFO">${Duration} = 1 minute, 50 seconds</msg>
<status status="PASS" starttime="20200402 22:09:36.437" endtime="20200402 22:09:36.459"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:09:36.459" level="INFO">${Duration} = 1 minute, 50 seconds</msg>
<status status="PASS" starttime="20200402 22:09:36.459" endtime="20200402 22:09:36.459"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:09:36.460" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '1 minute, 50 seconds' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:09:36.460" endtime="20200402 22:09:36.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:09:41.466" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:09:36.466" endtime="20200402 22:09:41.466"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:09:41.501" level="INFO">${URL} = https://www.youtube.com/watch?v=19sHk8BWlXg</msg>
<status status="PASS" starttime="20200402 22:09:41.466" endtime="20200402 22:09:41.501"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:09:41.502" level="INFO">${URL} = https://www.youtube.com/watch?v=19sHk8BWlXg</msg>
<status status="PASS" starttime="20200402 22:09:41.502" endtime="20200402 22:09:41.502"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:09:41.502" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=19sHk8BWlXg' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:09:41.502" endtime="20200402 22:09:41.509"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:09:41.510" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:09:41.510" endtime="20200402 22:09:41.899"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:09:41.899" endtime="20200402 22:09:41.906"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:09:51.910" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:09:41.906" endtime="20200402 22:09:51.910"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:09:51.910" level="INFO">Opening url 'https://www.youtube.com/watch?v=19sHk8BWlXg'</msg>
<status status="PASS" starttime="20200402 22:09:51.910" endtime="20200402 22:09:54.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:10:04.273" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:09:54.270" endtime="20200402 22:10:04.273"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:10:04.301" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:10:04.273" endtime="20200402 22:10:04.301"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:10:04.301" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:10:04.301" endtime="20200402 22:10:04.301"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:04.302" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:04.302" endtime="20200402 22:10:04.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:09.309" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:04.307" endtime="20200402 22:10:09.309"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:10:09.334" level="INFO">${Full_View_Count} = 82 views</msg>
<status status="PASS" starttime="20200402 22:10:09.309" endtime="20200402 22:10:09.334"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:10:09.334" level="INFO">${Full_View_Count} = 82 views</msg>
<status status="PASS" starttime="20200402 22:10:09.334" endtime="20200402 22:10:09.335"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:09.335" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='82 views' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:09.335" endtime="20200402 22:10:09.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:14.343" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:09.341" endtime="20200402 22:10:14.343"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:10:14.366" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:10:14.343" endtime="20200402 22:10:14.366"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:10:14.367" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:10:14.366" endtime="20200402 22:10:14.367"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:10:14.367" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4377' </msg>
<status status="PASS" starttime="20200402 22:10:14.367" endtime="20200402 22:10:14.373"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:19.375" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:14.373" endtime="20200402 22:10:19.375"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:10:19.401" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 22:10:19.375" endtime="20200402 22:10:19.401"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:10:19.402" level="INFO">${Total_Likes} = 5</msg>
<status status="PASS" starttime="20200402 22:10:19.402" endtime="20200402 22:10:19.402"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:19.403" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='5' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:19.402" endtime="20200402 22:10:19.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:24.410" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:19.408" endtime="20200402 22:10:24.410"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:10:24.435" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:10:24.410" endtime="20200402 22:10:24.436"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:10:24.436" level="INFO">${Total_Dis_Likes} = 0</msg>
<status status="PASS" starttime="20200402 22:10:24.436" endtime="20200402 22:10:24.436"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:24.437" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='0' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:24.436" endtime="20200402 22:10:24.442"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:29.444" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:24.442" endtime="20200402 22:10:29.444"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:10:29.466" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 22:10:29.444" endtime="20200402 22:10:29.466"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:10:29.467" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 22:10:29.466" endtime="20200402 22:10:29.467"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:29.467" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:29.467" endtime="20200402 22:10:29.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:10:34.475" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:10:29.474" endtime="20200402 22:10:34.475"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:10:34.500" level="INFO">${Channel_Name} = Inquisitor US</msg>
<status status="PASS" starttime="20200402 22:10:34.475" endtime="20200402 22:10:34.500"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:10:34.500" level="INFO">${Channel_Name} = Inquisitor US</msg>
<status status="PASS" starttime="20200402 22:10:34.500" endtime="20200402 22:10:34.500"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:10:34.501" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'Inquisitor US' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:10:34.501" endtime="20200402 22:10:34.507"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:10:34.507" endtime="20200402 22:10:35.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:10:50.615" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:10:35.614" endtime="20200402 22:10:50.615"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:10:50.616" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:10:50.615" endtime="20200402 22:10:50.728"></status>
</kw>
<status status="PASS" starttime="20200402 22:10:50.615" endtime="20200402 22:10:50.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:11:00.729" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:10:50.729" endtime="20200402 22:11:00.729"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:11:00.757" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:11:00.729" endtime="20200402 22:11:00.757"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:11:00.758" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:11:00.758" endtime="20200402 22:11:00.758"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:00.759" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:11:00.758" endtime="20200402 22:11:00.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:05.764" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:00.764" endtime="20200402 22:11:05.764"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:11:05.807" level="INFO">${Description} = Thank You For Watching!
Support our channel with your activity: Share this video,  put your likes, and leave your comment

On Tuesday, President Donald Trump gave Democratic Speaker of the House Nancy...</msg>
<status status="PASS" starttime="20200402 22:11:05.764" endtime="20200402 22:11:05.807"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:11:05.808" level="INFO">${Description} = Thank You For Watching!
Support our channel with your activity: Share this video,  put your likes, and leave your comment

On Tuesday, President Donald Trump gave Democratic Speaker of the House Nancy...</msg>
<status status="PASS" starttime="20200402 22:11:05.807" endtime="20200402 22:11:05.808"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:05.808" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Thank You For Watching!
Support our channel with your activity: Share this video,  put your likes, and leave your comment

On Tuesday, President Donald Trump gave Democratic Speaker of the House Nancy Pelosi a backhanded compliment when he said that her interview on MSNBC''s ''Morning Joe'' "wasn''t bad."

“I watched a portion of low rated (very) Morning Psycho (Joe) this Morning in order to see what Nancy Pelosi had to say, [and] what moves she was planning to further hurt our Country,” President Trump tweeted. “Actually, other than her usual complaining that I’m a terrible person, she wasn’t bad.”' where id=4377 </msg>
<status status="PASS" starttime="20200402 22:11:05.808" endtime="20200402 22:11:05.814"></status>
</kw>
<status status="PASS" starttime="20200402 22:09:41.509" endtime="20200402 22:11:05.814"></status>
</kw>
<status status="PASS" starttime="20200402 22:09:41.509" endtime="20200402 22:11:05.814"></status>
</kw>
<status status="PASS" starttime="20200402 22:09:11.318" endtime="20200402 22:11:05.814"></status>
</kw>
<msg timestamp="20200402 22:11:05.815" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:09:11.318" endtime="20200402 22:11:05.815"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:11:05.815" level="INFO">${Count2} = 46</msg>
<status status="PASS" starttime="20200402 22:11:05.815" endtime="20200402 22:11:05.815"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:11:05.816" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:11:05.815" endtime="20200402 22:11:05.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:11:05.816" endtime="20200402 22:11:05.882"></status>
</kw>
<status status="PASS" starttime="20200402 22:11:05.816" endtime="20200402 22:11:05.882"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:11:05.882" endtime="20200402 22:11:05.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:10.888" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:05.888" endtime="20200402 22:11:10.888"></status>
</kw>
<status status="PASS" starttime="20200402 22:09:01.315" endtime="20200402 22:11:10.888"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;c1119167-0e7f-49c3-9a29-614766524e54&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:11:20.888" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:11:10.888" endtime="20200402 22:11:20.888"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:11:20.888" endtime="20200402 22:11:20.889"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:25.891" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:20.889" endtime="20200402 22:11:25.891"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:11:25.922" level="INFO">${Title} = This Morning - According to Joe</msg>
<status status="PASS" starttime="20200402 22:11:25.891" endtime="20200402 22:11:25.922"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:11:25.922" level="INFO">${Title} = This Morning - According to Joe</msg>
<status status="PASS" starttime="20200402 22:11:25.922" endtime="20200402 22:11:25.922"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:11:25.923" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('This Morning - According to Joe') </msg>
<status status="PASS" starttime="20200402 22:11:25.922" endtime="20200402 22:11:25.929"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:30.929" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:25.929" endtime="20200402 22:11:30.929"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:11:30.929" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:11:30.931" level="INFO">${list} = ((4378,),)</msg>
<status status="PASS" starttime="20200402 22:11:30.929" endtime="20200402 22:11:30.931"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:11:30.931" endtime="20200402 22:11:30.931"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:11:30.932" level="INFO">${list} = [4378]</msg>
<status status="PASS" starttime="20200402 22:11:30.931" endtime="20200402 22:11:30.932"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:11:30.932" level="INFO">${Count3} = 4378</msg>
<status status="PASS" starttime="20200402 22:11:30.932" endtime="20200402 22:11:30.932"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:35.933" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:30.933" endtime="20200402 22:11:35.933"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:11:35.966" level="INFO">${Total_View} = 168 views</msg>
<status status="PASS" starttime="20200402 22:11:35.933" endtime="20200402 22:11:35.966"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:11:35.967" level="INFO">${Total_View} = 168 views</msg>
<status status="PASS" starttime="20200402 22:11:35.966" endtime="20200402 22:11:35.967"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:35.967" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '168 views' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:11:35.967" endtime="20200402 22:11:35.973"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:40.973" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:35.973" endtime="20200402 22:11:40.973"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:11:41.000" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:11:40.973" endtime="20200402 22:11:41.000"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:11:41.001" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:11:41.000" endtime="20200402 22:11:41.001"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:41.001" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:11:41.001" endtime="20200402 22:11:41.007"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:46.008" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:41.007" endtime="20200402 22:11:46.008"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:11:46.029" level="INFO">${Duration} = 16 minutes</msg>
<status status="PASS" starttime="20200402 22:11:46.008" endtime="20200402 22:11:46.029"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:11:46.030" level="INFO">${Duration} = 16 minutes</msg>
<status status="PASS" starttime="20200402 22:11:46.030" endtime="20200402 22:11:46.030"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:46.030" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '16 minutes' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:11:46.030" endtime="20200402 22:11:46.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:11:51.037" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:11:46.037" endtime="20200402 22:11:51.037"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:11:51.056" level="INFO">${URL} = https://www.youtube.com/watch?v=OC-oyPgivTA</msg>
<status status="PASS" starttime="20200402 22:11:51.037" endtime="20200402 22:11:51.056"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:11:51.057" level="INFO">${URL} = https://www.youtube.com/watch?v=OC-oyPgivTA</msg>
<status status="PASS" starttime="20200402 22:11:51.057" endtime="20200402 22:11:51.057"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:11:51.058" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=OC-oyPgivTA' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:11:51.057" endtime="20200402 22:11:51.064"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:11:51.065" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:11:51.064" endtime="20200402 22:11:51.445"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:11:51.445" endtime="20200402 22:11:51.452"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:12:01.465" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:11:51.452" endtime="20200402 22:12:01.465"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:12:01.465" level="INFO">Opening url 'https://www.youtube.com/watch?v=OC-oyPgivTA'</msg>
<status status="PASS" starttime="20200402 22:12:01.465" endtime="20200402 22:12:04.347"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:12:14.349" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:12:04.347" endtime="20200402 22:12:14.349"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:12:14.375" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:12:14.349" endtime="20200402 22:12:14.375"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:12:14.376" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:12:14.375" endtime="20200402 22:12:14.376"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:14.376" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:14.376" endtime="20200402 22:12:14.383"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:19.384" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:14.383" endtime="20200402 22:12:19.384"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:12:19.411" level="INFO">${Full_View_Count} = 209 views</msg>
<status status="PASS" starttime="20200402 22:12:19.384" endtime="20200402 22:12:19.411"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:12:19.411" level="INFO">${Full_View_Count} = 209 views</msg>
<status status="PASS" starttime="20200402 22:12:19.411" endtime="20200402 22:12:19.411"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:19.412" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='209 views' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:19.411" endtime="20200402 22:12:19.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:24.418" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:19.418" endtime="20200402 22:12:24.418"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:12:24.441" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:12:24.418" endtime="20200402 22:12:24.441"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:12:24.442" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:12:24.441" endtime="20200402 22:12:24.442"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:12:24.442" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4378' </msg>
<status status="PASS" starttime="20200402 22:12:24.442" endtime="20200402 22:12:24.448"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:29.450" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:24.449" endtime="20200402 22:12:29.450"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:12:29.477" level="INFO">${Total_Likes} = 27</msg>
<status status="PASS" starttime="20200402 22:12:29.450" endtime="20200402 22:12:29.477"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:12:29.477" level="INFO">${Total_Likes} = 27</msg>
<status status="PASS" starttime="20200402 22:12:29.477" endtime="20200402 22:12:29.477"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:29.478" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='27' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:29.477" endtime="20200402 22:12:29.484"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:34.484" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:29.484" endtime="20200402 22:12:34.484"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:12:34.510" level="INFO">${Total_Dis_Likes} = 6</msg>
<status status="PASS" starttime="20200402 22:12:34.484" endtime="20200402 22:12:34.510"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:12:34.510" level="INFO">${Total_Dis_Likes} = 6</msg>
<status status="PASS" starttime="20200402 22:12:34.510" endtime="20200402 22:12:34.510"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:34.511" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='6' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:34.510" endtime="20200402 22:12:34.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:39.518" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:34.517" endtime="20200402 22:12:39.518"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:12:39.543" level="INFO">${Total_Subscribers} = 1.77K subscribers</msg>
<status status="PASS" starttime="20200402 22:12:39.518" endtime="20200402 22:12:39.543"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:12:39.543" level="INFO">${Total_Subscribers} = 1.77K subscribers</msg>
<status status="PASS" starttime="20200402 22:12:39.543" endtime="20200402 22:12:39.543"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:39.544" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '1.77K subscribers' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:39.544" endtime="20200402 22:12:39.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:12:44.551" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:12:39.550" endtime="20200402 22:12:44.551"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:12:44.577" level="INFO">${Channel_Name} = According To Joe</msg>
<status status="PASS" starttime="20200402 22:12:44.551" endtime="20200402 22:12:44.577"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:12:44.577" level="INFO">${Channel_Name} = According To Joe</msg>
<status status="PASS" starttime="20200402 22:12:44.577" endtime="20200402 22:12:44.577"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:12:44.578" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'According To Joe' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:12:44.577" endtime="20200402 22:12:44.584"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:12:44.584" endtime="20200402 22:12:45.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:13:00.625" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:12:45.623" endtime="20200402 22:13:00.625"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:13:00.626" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20200402 22:13:01.144" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-48.png"&gt;&lt;img src="selenium-screenshot-48.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200402 22:13:00.654" endtime="20200402 22:13:01.145"></status>
</kw>
<msg timestamp="20200402 22:13:01.145" level="FAIL">ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=80.0.3987.149)
</msg>
<status status="FAIL" starttime="20200402 22:13:00.625" endtime="20200402 22:13:01.146"></status>
</kw>
<status status="PASS" starttime="20200402 22:13:00.625" endtime="20200402 22:13:01.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:13:11.146" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:13:01.146" endtime="20200402 22:13:11.146"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:13:11.173" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:13:11.146" endtime="20200402 22:13:11.173"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:13:11.173" level="INFO">${Category} = People &amp; Blogs</msg>
<status status="PASS" starttime="20200402 22:13:11.173" endtime="20200402 22:13:11.173"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:13:11.174" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'People &amp; Blogs' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:13:11.174" endtime="20200402 22:13:11.181"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:16.182" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:11.181" endtime="20200402 22:13:16.182"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:13:16.277" level="INFO">${Description} = </msg>
<status status="PASS" starttime="20200402 22:13:16.182" endtime="20200402 22:13:16.277"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:13:16.277" level="INFO">${Description} = </msg>
<status status="PASS" starttime="20200402 22:13:16.277" endtime="20200402 22:13:16.277"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:13:16.278" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '' where id=4378 </msg>
<status status="PASS" starttime="20200402 22:13:16.278" endtime="20200402 22:13:16.284"></status>
</kw>
<status status="PASS" starttime="20200402 22:11:51.064" endtime="20200402 22:13:16.284"></status>
</kw>
<status status="PASS" starttime="20200402 22:11:51.064" endtime="20200402 22:13:16.284"></status>
</kw>
<status status="PASS" starttime="20200402 22:11:20.889" endtime="20200402 22:13:16.284"></status>
</kw>
<msg timestamp="20200402 22:13:16.284" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:11:20.889" endtime="20200402 22:13:16.284"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:13:16.285" level="INFO">${Count2} = 47</msg>
<status status="PASS" starttime="20200402 22:13:16.285" endtime="20200402 22:13:16.285"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:13:16.286" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:13:16.285" endtime="20200402 22:13:16.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:13:16.286" endtime="20200402 22:13:16.404"></status>
</kw>
<status status="PASS" starttime="20200402 22:13:16.286" endtime="20200402 22:13:16.404"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:13:16.405" endtime="20200402 22:13:16.411"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:21.412" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:16.411" endtime="20200402 22:13:21.412"></status>
</kw>
<status status="PASS" starttime="20200402 22:11:10.888" endtime="20200402 22:13:21.412"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;b0336ad0-74f6-467c-8de2-6451ae869d7d&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:13:31.413" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:13:21.412" endtime="20200402 22:13:31.413"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:13:31.413" endtime="20200402 22:13:31.414"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:36.416" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:31.414" endtime="20200402 22:13:36.416"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:13:36.446" level="INFO">${Title} = Jonathan Karl: Covering Briefings Is 'Incredibly Important' | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:13:36.416" endtime="20200402 22:13:36.447"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:13:36.447" level="INFO">${Title} = Jonathan Karl: Covering Briefings Is ''Incredibly Important'' | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:13:36.447" endtime="20200402 22:13:36.447"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:13:36.448" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Jonathan Karl: Covering Briefings Is ''Incredibly Important'' | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:13:36.447" endtime="20200402 22:13:36.454"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:41.454" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:36.454" endtime="20200402 22:13:41.454"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:13:41.454" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:13:41.456" level="INFO">${list} = ((4379,),)</msg>
<status status="PASS" starttime="20200402 22:13:41.454" endtime="20200402 22:13:41.456"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:13:41.456" endtime="20200402 22:13:41.456"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:13:41.457" level="INFO">${list} = [4379]</msg>
<status status="PASS" starttime="20200402 22:13:41.456" endtime="20200402 22:13:41.457"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:13:41.457" level="INFO">${Count3} = 4379</msg>
<status status="PASS" starttime="20200402 22:13:41.457" endtime="20200402 22:13:41.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:46.458" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:41.457" endtime="20200402 22:13:46.458"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:13:46.485" level="INFO">${Total_View} = 276K views</msg>
<status status="PASS" starttime="20200402 22:13:46.458" endtime="20200402 22:13:46.486"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:13:46.486" level="INFO">${Total_View} = 276K views</msg>
<status status="PASS" starttime="20200402 22:13:46.486" endtime="20200402 22:13:46.486"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:13:46.487" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '276K views' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:13:46.486" endtime="20200402 22:13:46.493"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:51.494" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:46.494" endtime="20200402 22:13:51.494"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:13:51.522" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:13:51.494" endtime="20200402 22:13:51.522"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:13:51.523" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:13:51.523" endtime="20200402 22:13:51.523"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:13:51.524" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:13:51.523" endtime="20200402 22:13:51.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:13:56.531" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:51.530" endtime="20200402 22:13:56.531"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:13:56.553" level="INFO">${Duration} = 14 minutes, 31 seconds</msg>
<status status="PASS" starttime="20200402 22:13:56.531" endtime="20200402 22:13:56.553"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:13:56.554" level="INFO">${Duration} = 14 minutes, 31 seconds</msg>
<status status="PASS" starttime="20200402 22:13:56.553" endtime="20200402 22:13:56.554"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:13:56.554" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '14 minutes, 31 seconds' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:13:56.554" endtime="20200402 22:13:56.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:01.560" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:13:56.560" endtime="20200402 22:14:01.560"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:14:01.580" level="INFO">${URL} = https://www.youtube.com/watch?v=oVSfpiGnfmc</msg>
<status status="PASS" starttime="20200402 22:14:01.560" endtime="20200402 22:14:01.580"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:14:01.580" level="INFO">${URL} = https://www.youtube.com/watch?v=oVSfpiGnfmc</msg>
<status status="PASS" starttime="20200402 22:14:01.580" endtime="20200402 22:14:01.580"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:01.581" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=oVSfpiGnfmc' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:01.580" endtime="20200402 22:14:01.586"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:14:01.588" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:14:01.587" endtime="20200402 22:14:01.975"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:14:01.975" endtime="20200402 22:14:01.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:14:11.987" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:14:01.982" endtime="20200402 22:14:11.987"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:14:11.987" level="INFO">Opening url 'https://www.youtube.com/watch?v=oVSfpiGnfmc'</msg>
<status status="PASS" starttime="20200402 22:14:11.987" endtime="20200402 22:14:15.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:14:25.160" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:14:15.160" endtime="20200402 22:14:25.160"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:14:25.187" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:14:25.160" endtime="20200402 22:14:25.187"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:14:25.187" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:14:25.187" endtime="20200402 22:14:25.187"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:25.188" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:25.188" endtime="20200402 22:14:25.194"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:30.195" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:25.194" endtime="20200402 22:14:30.195"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:14:30.223" level="INFO">${Full_View_Count} = 306,996 views</msg>
<status status="PASS" starttime="20200402 22:14:30.195" endtime="20200402 22:14:30.223"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:14:30.223" level="INFO">${Full_View_Count} = 306,996 views</msg>
<status status="PASS" starttime="20200402 22:14:30.223" endtime="20200402 22:14:30.223"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:30.224" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='306,996 views' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:30.224" endtime="20200402 22:14:30.230"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:35.232" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:30.230" endtime="20200402 22:14:35.232"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:14:35.256" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:14:35.232" endtime="20200402 22:14:35.256"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:14:35.257" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:14:35.257" endtime="20200402 22:14:35.257"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:14:35.257" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4379' </msg>
<status status="PASS" starttime="20200402 22:14:35.257" endtime="20200402 22:14:35.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:40.266" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:35.264" endtime="20200402 22:14:40.266"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:14:40.293" level="INFO">${Total_Likes} = 2.2K</msg>
<status status="PASS" starttime="20200402 22:14:40.266" endtime="20200402 22:14:40.293"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:14:40.293" level="INFO">${Total_Likes} = 2.2K</msg>
<status status="PASS" starttime="20200402 22:14:40.293" endtime="20200402 22:14:40.293"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:40.294" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='2.2K' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:40.293" endtime="20200402 22:14:40.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:45.300" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:40.300" endtime="20200402 22:14:45.300"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:14:45.326" level="INFO">${Total_Dis_Likes} = 206</msg>
<status status="PASS" starttime="20200402 22:14:45.300" endtime="20200402 22:14:45.327"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:14:45.327" level="INFO">${Total_Dis_Likes} = 206</msg>
<status status="PASS" starttime="20200402 22:14:45.327" endtime="20200402 22:14:45.327"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:45.328" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='206' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:45.327" endtime="20200402 22:14:45.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:50.335" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:45.334" endtime="20200402 22:14:50.335"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:14:50.361" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:14:50.335" endtime="20200402 22:14:50.361"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:14:50.361" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:14:50.361" endtime="20200402 22:14:50.361"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:50.362" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:50.362" endtime="20200402 22:14:50.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:14:55.370" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:14:50.369" endtime="20200402 22:14:55.370"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:14:55.396" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:14:55.370" endtime="20200402 22:14:55.396"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:14:55.397" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:14:55.396" endtime="20200402 22:14:55.397"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:14:55.397" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:14:55.397" endtime="20200402 22:14:55.403"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:14:55.403" endtime="20200402 22:14:57.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:15:12.119" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:14:57.118" endtime="20200402 22:15:12.119"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:15:12.120" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:15:12.119" endtime="20200402 22:15:12.245"></status>
</kw>
<status status="PASS" starttime="20200402 22:15:12.119" endtime="20200402 22:15:12.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:15:22.248" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:15:12.245" endtime="20200402 22:15:22.248"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:15:22.275" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:15:22.248" endtime="20200402 22:15:22.275"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:15:22.276" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:15:22.276" endtime="20200402 22:15:22.276"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:15:22.277" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:15:22.276" endtime="20200402 22:15:22.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:15:27.283" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:22.283" endtime="20200402 22:15:27.283"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:15:27.325" level="INFO">${Description} = ABC News' Chief WH Correspondent Jonathan Karl discusses the president's attacks on reporters during daily coronavirus taskforce briefings and why covering the briefings is essential for the public. A...</msg>
<status status="PASS" starttime="20200402 22:15:27.283" endtime="20200402 22:15:27.325"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:15:27.326" level="INFO">${Description} = ABC News'' Chief WH Correspondent Jonathan Karl discusses the president''s attacks on reporters during daily coronavirus taskforce briefings and why covering the briefings is essential for the public....</msg>
<status status="PASS" starttime="20200402 22:15:27.325" endtime="20200402 22:15:27.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:15:27.326" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'ABC News'' Chief WH Correspondent Jonathan Karl discusses the president''s attacks on reporters during daily coronavirus taskforce briefings and why covering the briefings is essential for the public. Aired on 4/1/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Jonathan Karl: Covering Briefings Is ''Incredibly Important'' | Morning Joe | MSNBC' where id=4379 </msg>
<status status="PASS" starttime="20200402 22:15:27.326" endtime="20200402 22:15:27.332"></status>
</kw>
<status status="PASS" starttime="20200402 22:14:01.587" endtime="20200402 22:15:27.332"></status>
</kw>
<status status="PASS" starttime="20200402 22:14:01.587" endtime="20200402 22:15:27.332"></status>
</kw>
<status status="PASS" starttime="20200402 22:13:31.414" endtime="20200402 22:15:27.332"></status>
</kw>
<msg timestamp="20200402 22:15:27.332" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:13:31.414" endtime="20200402 22:15:27.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:15:27.333" level="INFO">${Count2} = 48</msg>
<status status="PASS" starttime="20200402 22:15:27.333" endtime="20200402 22:15:27.333"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:15:27.333" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:15:27.333" endtime="20200402 22:15:27.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:15:27.334" endtime="20200402 22:15:27.391"></status>
</kw>
<status status="PASS" starttime="20200402 22:15:27.334" endtime="20200402 22:15:27.392"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:15:27.392" endtime="20200402 22:15:27.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:15:32.401" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:27.398" endtime="20200402 22:15:32.401"></status>
</kw>
<status status="PASS" starttime="20200402 22:13:21.412" endtime="20200402 22:15:32.401"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;5d62eb4d-052a-4186-9a3f-24dc7937a14e&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:15:42.405" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:15:32.401" endtime="20200402 22:15:42.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:15:42.405" endtime="20200402 22:15:42.405"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:15:47.408" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:42.407" endtime="20200402 22:15:47.408"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:15:47.439" level="INFO">${Title} = Mike Barnicle: Deconstructing Government Is Not The Answer | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:15:47.408" endtime="20200402 22:15:47.439"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:15:47.440" level="INFO">${Title} = Mike Barnicle: Deconstructing Government Is Not The Answer | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:15:47.440" endtime="20200402 22:15:47.440"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:15:47.440" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Mike Barnicle: Deconstructing Government Is Not The Answer | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:15:47.440" endtime="20200402 22:15:47.446"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:15:52.447" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:47.447" endtime="20200402 22:15:52.447"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:15:52.447" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:15:52.449" level="INFO">${list} = ((4380,),)</msg>
<status status="PASS" starttime="20200402 22:15:52.447" endtime="20200402 22:15:52.449"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:15:52.449" endtime="20200402 22:15:52.449"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:15:52.450" level="INFO">${list} = [4380]</msg>
<status status="PASS" starttime="20200402 22:15:52.449" endtime="20200402 22:15:52.450"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:15:52.450" level="INFO">${Count3} = 4380</msg>
<status status="PASS" starttime="20200402 22:15:52.450" endtime="20200402 22:15:52.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:15:57.452" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:52.450" endtime="20200402 22:15:57.452"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:15:57.479" level="INFO">${Total_View} = 120K views</msg>
<status status="PASS" starttime="20200402 22:15:57.452" endtime="20200402 22:15:57.479"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:15:57.480" level="INFO">${Total_View} = 120K views</msg>
<status status="PASS" starttime="20200402 22:15:57.479" endtime="20200402 22:15:57.480"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:15:57.480" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '120K views' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:15:57.480" endtime="20200402 22:15:57.487"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:02.487" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:15:57.487" endtime="20200402 22:16:02.487"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:16:02.516" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:16:02.487" endtime="20200402 22:16:02.516"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:16:02.517" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:16:02.517" endtime="20200402 22:16:02.517"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:02.517" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:02.517" endtime="20200402 22:16:02.524"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:07.525" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:02.524" endtime="20200402 22:16:07.525"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:16:07.545" level="INFO">${Duration} = 10 minutes, 53 seconds</msg>
<status status="PASS" starttime="20200402 22:16:07.525" endtime="20200402 22:16:07.545"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:16:07.546" level="INFO">${Duration} = 10 minutes, 53 seconds</msg>
<status status="PASS" starttime="20200402 22:16:07.545" endtime="20200402 22:16:07.546"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:07.546" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '10 minutes, 53 seconds' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:07.546" endtime="20200402 22:16:07.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:12.554" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:07.552" endtime="20200402 22:16:12.554"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:16:12.573" level="INFO">${URL} = https://www.youtube.com/watch?v=uZfjzYxaB_s</msg>
<status status="PASS" starttime="20200402 22:16:12.554" endtime="20200402 22:16:12.573"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:16:12.574" level="INFO">${URL} = https://www.youtube.com/watch?v=uZfjzYxaB_s</msg>
<status status="PASS" starttime="20200402 22:16:12.574" endtime="20200402 22:16:12.574"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:12.574" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=uZfjzYxaB_s' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:12.574" endtime="20200402 22:16:12.581"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:16:12.583" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:16:12.583" endtime="20200402 22:16:12.960"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:16:12.961" endtime="20200402 22:16:12.967"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:16:22.972" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:16:12.968" endtime="20200402 22:16:22.972"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:16:22.972" level="INFO">Opening url 'https://www.youtube.com/watch?v=uZfjzYxaB_s'</msg>
<status status="PASS" starttime="20200402 22:16:22.972" endtime="20200402 22:16:25.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:16:35.823" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:16:25.821" endtime="20200402 22:16:35.823"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:16:35.849" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:16:35.823" endtime="20200402 22:16:35.849"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:16:35.850" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:16:35.850" endtime="20200402 22:16:35.850"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:35.851" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:35.850" endtime="20200402 22:16:35.857"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:40.857" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:35.857" endtime="20200402 22:16:40.857"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:16:40.883" level="INFO">${Full_View_Count} = 121,733 views</msg>
<status status="PASS" starttime="20200402 22:16:40.857" endtime="20200402 22:16:40.883"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:16:40.884" level="INFO">${Full_View_Count} = 121,733 views</msg>
<status status="PASS" starttime="20200402 22:16:40.884" endtime="20200402 22:16:40.884"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:40.884" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='121,733 views' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:40.884" endtime="20200402 22:16:40.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:45.892" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:40.891" endtime="20200402 22:16:45.892"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:16:45.917" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:16:45.892" endtime="20200402 22:16:45.917"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:16:45.917" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:16:45.917" endtime="20200402 22:16:45.917"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:16:45.918" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4380' </msg>
<status status="PASS" starttime="20200402 22:16:45.917" endtime="20200402 22:16:45.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:50.926" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:45.925" endtime="20200402 22:16:50.926"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:16:53.399" level="INFO">${Total_Likes} = 1.4K</msg>
<status status="PASS" starttime="20200402 22:16:50.926" endtime="20200402 22:16:53.399"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:16:53.400" level="INFO">${Total_Likes} = 1.4K</msg>
<status status="PASS" starttime="20200402 22:16:53.400" endtime="20200402 22:16:53.400"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:53.400" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1.4K' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:53.400" endtime="20200402 22:16:53.407"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:16:58.407" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:53.407" endtime="20200402 22:16:58.407"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:16:58.433" level="INFO">${Total_Dis_Likes} = 66</msg>
<status status="PASS" starttime="20200402 22:16:58.407" endtime="20200402 22:16:58.433"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:16:58.433" level="INFO">${Total_Dis_Likes} = 66</msg>
<status status="PASS" starttime="20200402 22:16:58.433" endtime="20200402 22:16:58.434"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:16:58.434" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='66' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:16:58.434" endtime="20200402 22:16:58.440"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:17:03.441" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:16:58.440" endtime="20200402 22:17:03.441"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:17:03.466" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:17:03.441" endtime="20200402 22:17:03.466"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:17:03.466" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:17:03.466" endtime="20200402 22:17:03.466"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:17:03.467" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:17:03.466" endtime="20200402 22:17:03.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:17:08.475" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:17:03.474" endtime="20200402 22:17:08.475"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:17:08.547" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:17:08.475" endtime="20200402 22:17:08.547"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:17:08.548" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:17:08.547" endtime="20200402 22:17:08.548"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:17:08.548" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:17:08.548" endtime="20200402 22:17:08.555"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:17:08.555" endtime="20200402 22:17:10.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:17:25.479" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:17:10.478" endtime="20200402 22:17:25.479"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:17:25.480" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:17:25.479" endtime="20200402 22:17:25.586"></status>
</kw>
<status status="PASS" starttime="20200402 22:17:25.479" endtime="20200402 22:17:25.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:17:35.588" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:17:25.586" endtime="20200402 22:17:35.588"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:17:35.615" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:17:35.588" endtime="20200402 22:17:35.615"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:17:35.616" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:17:35.615" endtime="20200402 22:17:35.616"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:17:35.616" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:17:35.616" endtime="20200402 22:17:35.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:17:40.623" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:17:35.622" endtime="20200402 22:17:40.623"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:17:40.664" level="INFO">${Description} = As governors across the country are challenging the Trump WH's notion that states are well-equipped to handle the coronavirus crisis, Mike Barnicle weighs in on why government is crucial in times of c...</msg>
<status status="PASS" starttime="20200402 22:17:40.623" endtime="20200402 22:17:40.664"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:17:40.664" level="INFO">${Description} = As governors across the country are challenging the Trump WH''s notion that states are well-equipped to handle the coronavirus crisis, Mike Barnicle weighs in on why government is crucial in times of ...</msg>
<status status="PASS" starttime="20200402 22:17:40.664" endtime="20200402 22:17:40.665"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:17:40.665" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'As governors across the country are challenging the Trump WH''s notion that states are well-equipped to handle the coronavirus crisis, Mike Barnicle weighs in on why government is crucial in times of crisis. Aired on 4/1/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Mike Barnicle: Deconstructing Government Is Not The Answer | Morning Joe | MSNBC' where id=4380 </msg>
<status status="PASS" starttime="20200402 22:17:40.665" endtime="20200402 22:17:40.671"></status>
</kw>
<status status="PASS" starttime="20200402 22:16:12.582" endtime="20200402 22:17:40.671"></status>
</kw>
<status status="PASS" starttime="20200402 22:16:12.581" endtime="20200402 22:17:40.671"></status>
</kw>
<status status="PASS" starttime="20200402 22:15:42.406" endtime="20200402 22:17:40.672"></status>
</kw>
<msg timestamp="20200402 22:17:40.672" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:15:42.406" endtime="20200402 22:17:40.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:17:40.672" level="INFO">${Count2} = 49</msg>
<status status="PASS" starttime="20200402 22:17:40.672" endtime="20200402 22:17:40.672"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:17:40.673" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:17:40.673" endtime="20200402 22:17:40.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:17:40.674" endtime="20200402 22:17:40.733"></status>
</kw>
<status status="PASS" starttime="20200402 22:17:40.673" endtime="20200402 22:17:40.733"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:17:40.733" endtime="20200402 22:17:40.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:17:45.740" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:17:40.739" endtime="20200402 22:17:45.740"></status>
</kw>
<status status="PASS" starttime="20200402 22:15:32.401" endtime="20200402 22:17:45.740"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;5589c8d4-f5ab-47f1-839f-471caf6fd995&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:17:55.742" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:17:45.740" endtime="20200402 22:17:55.742"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:17:55.742" endtime="20200402 22:17:55.743"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:00.745" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:17:55.743" endtime="20200402 22:18:00.745"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:18:00.775" level="INFO">${Title} = President Gives Nancy Pelosi a Backhanded Compliment After Her Interview with (Morning Joe)</msg>
<status status="PASS" starttime="20200402 22:18:00.745" endtime="20200402 22:18:00.776"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:18:00.776" level="INFO">${Title} = President Gives Nancy Pelosi a Backhanded Compliment After Her Interview with (Morning Joe)</msg>
<status status="PASS" starttime="20200402 22:18:00.776" endtime="20200402 22:18:00.776"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:18:00.777" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('President Gives Nancy Pelosi a Backhanded Compliment After Her Interview with (Morning Joe)') </msg>
<status status="PASS" starttime="20200402 22:18:00.776" endtime="20200402 22:18:00.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:05.784" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:00.782" endtime="20200402 22:18:05.784"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:18:05.784" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:18:05.786" level="INFO">${list} = ((4381,),)</msg>
<status status="PASS" starttime="20200402 22:18:05.784" endtime="20200402 22:18:05.786"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:18:05.786" endtime="20200402 22:18:05.786"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:18:05.787" level="INFO">${list} = [4381]</msg>
<status status="PASS" starttime="20200402 22:18:05.786" endtime="20200402 22:18:05.787"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:18:05.787" level="INFO">${Count3} = 4381</msg>
<status status="PASS" starttime="20200402 22:18:05.787" endtime="20200402 22:18:05.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:10.788" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:05.788" endtime="20200402 22:18:10.788"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:18:10.816" level="INFO">${Total_View} = 1.2K views</msg>
<status status="PASS" starttime="20200402 22:18:10.788" endtime="20200402 22:18:10.816"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:18:10.816" level="INFO">${Total_View} = 1.2K views</msg>
<status status="PASS" starttime="20200402 22:18:10.816" endtime="20200402 22:18:10.816"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:10.817" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '1.2K views' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:10.817" endtime="20200402 22:18:10.823"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:15.825" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:10.824" endtime="20200402 22:18:15.825"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:18:15.853" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:18:15.825" endtime="20200402 22:18:15.853"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:18:15.853" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:18:15.853" endtime="20200402 22:18:15.853"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:15.854" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:15.854" endtime="20200402 22:18:15.860"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:20.862" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:15.860" endtime="20200402 22:18:20.862"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:18:20.884" level="INFO">${Duration} = 2 minutes, 34 seconds</msg>
<status status="PASS" starttime="20200402 22:18:20.862" endtime="20200402 22:18:20.884"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:18:20.885" level="INFO">${Duration} = 2 minutes, 34 seconds</msg>
<status status="PASS" starttime="20200402 22:18:20.884" endtime="20200402 22:18:20.885"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:20.885" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '2 minutes, 34 seconds' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:20.885" endtime="20200402 22:18:20.891"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:25.893" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:20.891" endtime="20200402 22:18:25.893"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:18:25.913" level="INFO">${URL} = https://www.youtube.com/watch?v=bcu0mX2A3RU</msg>
<status status="PASS" starttime="20200402 22:18:25.893" endtime="20200402 22:18:25.913"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:18:25.913" level="INFO">${URL} = https://www.youtube.com/watch?v=bcu0mX2A3RU</msg>
<status status="PASS" starttime="20200402 22:18:25.913" endtime="20200402 22:18:25.913"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:25.914" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=bcu0mX2A3RU' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:25.913" endtime="20200402 22:18:25.920"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:18:25.921" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:18:25.921" endtime="20200402 22:18:26.306"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:18:26.306" endtime="20200402 22:18:26.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:18:36.326" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:18:26.313" endtime="20200402 22:18:36.326"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:18:36.326" level="INFO">Opening url 'https://www.youtube.com/watch?v=bcu0mX2A3RU'</msg>
<status status="PASS" starttime="20200402 22:18:36.326" endtime="20200402 22:18:39.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:18:49.111" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:18:39.108" endtime="20200402 22:18:49.111"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:18:49.267" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:18:49.111" endtime="20200402 22:18:49.268"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:18:49.268" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:18:49.268" endtime="20200402 22:18:49.268"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:49.269" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:49.268" endtime="20200402 22:18:49.275"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:54.276" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:49.275" endtime="20200402 22:18:54.276"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:18:54.304" level="INFO">${Full_View_Count} = 1,563 views</msg>
<status status="PASS" starttime="20200402 22:18:54.276" endtime="20200402 22:18:54.304"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:18:54.305" level="INFO">${Full_View_Count} = 1,563 views</msg>
<status status="PASS" starttime="20200402 22:18:54.304" endtime="20200402 22:18:54.305"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:18:54.305" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='1,563 views' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:18:54.305" endtime="20200402 22:18:54.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:18:59.312" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:54.312" endtime="20200402 22:18:59.312"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:18:59.337" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:18:59.312" endtime="20200402 22:18:59.337"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:18:59.338" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:18:59.338" endtime="20200402 22:18:59.338"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:18:59.338" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4381' </msg>
<status status="PASS" starttime="20200402 22:18:59.338" endtime="20200402 22:18:59.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:04.346" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:18:59.345" endtime="20200402 22:19:04.346"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:19:04.373" level="INFO">${Total_Likes} = 181</msg>
<status status="PASS" starttime="20200402 22:19:04.346" endtime="20200402 22:19:04.373"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:19:04.374" level="INFO">${Total_Likes} = 181</msg>
<status status="PASS" starttime="20200402 22:19:04.374" endtime="20200402 22:19:04.374"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:04.374" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='181' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:04.374" endtime="20200402 22:19:04.381"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:09.384" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:19:04.382" endtime="20200402 22:19:09.384"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:19:09.411" level="INFO">${Total_Dis_Likes} = 2</msg>
<status status="PASS" starttime="20200402 22:19:09.384" endtime="20200402 22:19:09.411"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:19:09.411" level="INFO">${Total_Dis_Likes} = 2</msg>
<status status="PASS" starttime="20200402 22:19:09.411" endtime="20200402 22:19:09.411"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:09.412" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='2' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:09.411" endtime="20200402 22:19:09.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:14.421" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:19:09.418" endtime="20200402 22:19:14.421"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:19:14.443" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 22:19:14.421" endtime="20200402 22:19:14.443"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:19:14.444" level="INFO">${Total_Subscribers} = </msg>
<status status="PASS" starttime="20200402 22:19:14.444" endtime="20200402 22:19:14.444"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:14.444" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:14.444" endtime="20200402 22:19:14.451"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:19.452" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:19:14.451" endtime="20200402 22:19:19.452"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:19:19.477" level="INFO">${Channel_Name} = The Conservative Network</msg>
<status status="PASS" starttime="20200402 22:19:19.452" endtime="20200402 22:19:19.478"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:19:19.478" level="INFO">${Channel_Name} = The Conservative Network</msg>
<status status="PASS" starttime="20200402 22:19:19.478" endtime="20200402 22:19:19.478"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:19.479" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'The Conservative Network' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:19.478" endtime="20200402 22:19:19.486"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:19:19.486" endtime="20200402 22:19:20.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:19:35.693" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:19:20.692" endtime="20200402 22:19:35.693"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:19:35.694" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:19:35.693" endtime="20200402 22:19:35.792"></status>
</kw>
<status status="PASS" starttime="20200402 22:19:35.693" endtime="20200402 22:19:35.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:19:45.793" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:19:35.793" endtime="20200402 22:19:45.793"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:19:45.821" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:19:45.793" endtime="20200402 22:19:45.821"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:19:45.821" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:19:45.821" endtime="20200402 22:19:45.821"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:45.822" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:45.822" endtime="20200402 22:19:45.828"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:50.828" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:19:45.828" endtime="20200402 22:19:50.828"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:19:50.860" level="INFO">${Description} = #TheConservativeNetwork
Thanks For Watching 
Subscribe Please</msg>
<status status="PASS" starttime="20200402 22:19:50.828" endtime="20200402 22:19:50.860"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:19:50.860" level="INFO">${Description} = #TheConservativeNetwork
Thanks For Watching 
Subscribe Please</msg>
<status status="PASS" starttime="20200402 22:19:50.860" endtime="20200402 22:19:50.860"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:19:50.861" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '#TheConservativeNetwork
Thanks For Watching 
Subscribe Please' where id=4381 </msg>
<status status="PASS" starttime="20200402 22:19:50.861" endtime="20200402 22:19:50.867"></status>
</kw>
<status status="PASS" starttime="20200402 22:18:25.920" endtime="20200402 22:19:50.867"></status>
</kw>
<status status="PASS" starttime="20200402 22:18:25.920" endtime="20200402 22:19:50.868"></status>
</kw>
<status status="PASS" starttime="20200402 22:17:55.743" endtime="20200402 22:19:50.868"></status>
</kw>
<msg timestamp="20200402 22:19:50.868" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:17:55.743" endtime="20200402 22:19:50.868"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:19:50.868" level="INFO">${Count2} = 50</msg>
<status status="PASS" starttime="20200402 22:19:50.868" endtime="20200402 22:19:50.868"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:19:50.869" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:19:50.869" endtime="20200402 22:19:50.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:19:50.869" endtime="20200402 22:19:50.944"></status>
</kw>
<status status="PASS" starttime="20200402 22:19:50.869" endtime="20200402 22:19:50.944"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:19:50.944" endtime="20200402 22:19:50.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:19:55.952" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:19:50.951" endtime="20200402 22:19:55.952"></status>
</kw>
<status status="PASS" starttime="20200402 22:17:45.740" endtime="20200402 22:19:55.952"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;718349e0-e019-44c8-b43a-0370369516a9&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:20:05.953" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:19:55.952" endtime="20200402 22:20:05.953"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<status status="PASS" starttime="20200402 22:20:05.953" endtime="20200402 22:20:05.954"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_Main_Page</arg>
<arg>${Count2}</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<kw name="Extracting_Details_From_Main_Page">
<arguments>
<arg>${Count2}</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:10.956" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:05.955" endtime="20200402 22:20:10.956"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;div#dismissable&gt;div.text-wrapper.style-scope&gt;div#meta&gt;div#title-wrapper&gt;h3&gt;a&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:20:10.988" level="INFO">${Title} = Senators Seek Federal Government To Take Over Medical Supply Chain | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:20:10.956" endtime="20200402 22:20:10.988"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Title}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20200402 22:20:10.989" level="INFO">${Title} = Senators Seek Federal Government To Take Over Medical Supply Chain | Morning Joe | MSNBC</msg>
<status status="PASS" starttime="20200402 22:20:10.989" endtime="20200402 22:20:10.989"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('${Title}')</arg>
</arguments>
<msg timestamp="20200402 22:20:10.990" level="INFO">Executing : Execute SQL String  |  INSERT INTO nbcu_pilot.Youtube_Morning_Joe (`Title`) VALUES ('Senators Seek Federal Government To Take Over Medical Supply Chain | Morning Joe | MSNBC') </msg>
<status status="PASS" starttime="20200402 22:20:10.990" endtime="20200402 22:20:10.995"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:15.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:10.995" endtime="20200402 22:20:15.996"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select max(id) from nbcu_pilot.Youtube_Morning_Joe;</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:20:15.996" level="INFO">Executing : Query  |  select max(id) from nbcu_pilot.Youtube_Morning_Joe; </msg>
<msg timestamp="20200402 22:20:15.998" level="INFO">${list} = ((4382,),)</msg>
<status status="PASS" starttime="20200402 22:20:15.996" endtime="20200402 22:20:15.998"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<status status="PASS" starttime="20200402 22:20:15.998" endtime="20200402 22:20:15.998"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[x[0] for x in ${list}]</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20200402 22:20:15.999" level="INFO">${list} = [4382]</msg>
<status status="PASS" starttime="20200402 22:20:15.998" endtime="20200402 22:20:15.999"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Count3}</var>
</assign>
<msg timestamp="20200402 22:20:15.999" level="INFO">${Count3} = 4382</msg>
<status status="PASS" starttime="20200402 22:20:15.999" endtime="20200402 22:20:15.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:21.001" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:15.999" endtime="20200402 22:20:21.001"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:20:21.028" level="INFO">${Total_View} = 96K views</msg>
<status status="PASS" starttime="20200402 22:20:21.001" endtime="20200402 22:20:21.028"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_View}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_View}</var>
</assign>
<msg timestamp="20200402 22:20:21.029" level="INFO">${Total_View} = 96K views</msg>
<status status="PASS" starttime="20200402 22:20:21.028" endtime="20200402 22:20:21.029"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_View= '${Total_View}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:20:21.029" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_View= '96K views' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:20:21.029" endtime="20200402 22:20:21.036"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:26.037" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:21.036" endtime="20200402 22:20:26.037"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;div&gt;#meta&gt;ytd-video-meta-block&gt;#metadata&gt;#metadata-line&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:20:26.065" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:20:26.037" endtime="20200402 22:20:26.065"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Video_Rendered_Before}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Video_Rendered_Before}</var>
</assign>
<msg timestamp="20200402 22:20:26.065" level="INFO">${Video_Rendered_Before} = 1 day ago</msg>
<status status="PASS" starttime="20200402 22:20:26.065" endtime="20200402 22:20:26.065"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '${Video_Rendered_Before}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:20:26.065" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Video_Rendered_Before= '1 day ago' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:20:26.065" endtime="20200402 22:20:26.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:31.065" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:26.065" endtime="20200402 22:20:31.065"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail&gt;#overlays&gt;ytd-thumbnail-overlay-time-status-renderer&gt;span</arg>
<arg>aria-label</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:20:31.086" level="INFO">${Duration} = 7 minutes, 13 seconds</msg>
<status status="PASS" starttime="20200402 22:20:31.065" endtime="20200402 22:20:31.086"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Duration}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Duration}</var>
</assign>
<msg timestamp="20200402 22:20:31.088" level="INFO">${Duration} = 7 minutes, 13 seconds</msg>
<status status="PASS" starttime="20200402 22:20:31.086" endtime="20200402 22:20:31.088"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Duration= '${Duration}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:20:31.088" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Duration= '7 minutes, 13 seconds' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:20:31.088" endtime="20200402 22:20:31.093"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:20:36.095" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:20:31.093" endtime="20200402 22:20:36.095"></status>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<arguments>
<arg>css=div#contents&gt;ytd-video-renderer:nth-child(${Count2})&gt;#dismissable&gt;ytd-thumbnail&gt;#thumbnail</arg>
<arg>href</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:20:36.114" level="INFO">${URL} = https://www.youtube.com/watch?v=Q-c33vhQ-oA</msg>
<status status="PASS" starttime="20200402 22:20:36.095" endtime="20200402 22:20:36.114"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${URL}</var>
</assign>
<msg timestamp="20200402 22:20:36.114" level="INFO">${URL} = https://www.youtube.com/watch?v=Q-c33vhQ-oA</msg>
<status status="PASS" starttime="20200402 22:20:36.114" endtime="20200402 22:20:36.114"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set URL= '${URL}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:20:36.115" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set URL= 'https://www.youtube.com/watch?v=Q-c33vhQ-oA' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:20:36.115" endtime="20200402 22:20:36.121"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Extracting_Details_From_URL</arg>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Extracting_Details_From_URL">
<arguments>
<arg>${URL}</arg>
<arg>${Count3}</arg>
</arguments>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>window.open()</arg>
</arguments>
<msg timestamp="20200402 22:20:36.122" level="INFO">Executing JavaScript:
window.open()
Without any arguments.</msg>
<status status="PASS" starttime="20200402 22:20:36.121" endtime="20200402 22:20:36.491"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>NEW</arg>
</arguments>
<status status="PASS" starttime="20200402 22:20:36.491" endtime="20200402 22:20:36.498"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:20:46.507" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:20:36.498" endtime="20200402 22:20:46.507"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20200402 22:20:46.507" level="INFO">Opening url 'https://www.youtube.com/watch?v=Q-c33vhQ-oA'</msg>
<status status="PASS" starttime="20200402 22:20:46.507" endtime="20200402 22:20:50.011"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:21:00.013" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:20:50.011" endtime="20200402 22:21:00.013"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#date&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:21:00.040" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:21:00.013" endtime="20200402 22:21:00.040"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Date}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Date}</var>
</assign>
<msg timestamp="20200402 22:21:00.041" level="INFO">${Date} = Apr 1, 2020</msg>
<status status="PASS" starttime="20200402 22:21:00.040" endtime="20200402 22:21:00.041"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Date= '${Date}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:00.041" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Date= 'Apr 1, 2020' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:00.041" endtime="20200402 22:21:00.049"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:05.050" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:00.049" endtime="20200402 22:21:05.050"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(1)</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:21:05.077" level="INFO">${Full_View_Count} = 97,026 views</msg>
<status status="PASS" starttime="20200402 22:21:05.050" endtime="20200402 22:21:05.077"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Full_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Full_View_Count}</var>
</assign>
<msg timestamp="20200402 22:21:05.078" level="INFO">${Full_View_Count} = 97,026 views</msg>
<status status="PASS" starttime="20200402 22:21:05.077" endtime="20200402 22:21:05.078"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='${Full_View_Count}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:05.078" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Full_View_Count ='97,026 views' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:05.078" endtime="20200402 22:21:05.085"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:10.086" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:05.085" endtime="20200402 22:21:10.086"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#count&gt;yt-view-count-renderer&gt;span:nth-child(2)</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:21:10.111" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:21:10.086" endtime="20200402 22:21:10.111"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Short_View_Count}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Short_View_Count}</var>
</assign>
<msg timestamp="20200402 22:21:10.112" level="INFO">${Short_View_Count} = </msg>
<status status="PASS" starttime="20200402 22:21:10.111" endtime="20200402 22:21:10.112"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '${Short_View_Count}' where id='${Count3}'</arg>
</arguments>
<msg timestamp="20200402 22:21:10.112" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Short_View_Count= '' where id='4382' </msg>
<status status="PASS" starttime="20200402 22:21:10.112" endtime="20200402 22:21:10.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:15.119" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:10.118" endtime="20200402 22:21:15.119"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(1)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:21:15.145" level="INFO">${Total_Likes} = 1.3K</msg>
<status status="PASS" starttime="20200402 22:21:15.119" endtime="20200402 22:21:15.145"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Likes}</var>
</assign>
<msg timestamp="20200402 22:21:15.146" level="INFO">${Total_Likes} = 1.3K</msg>
<status status="PASS" starttime="20200402 22:21:15.146" endtime="20200402 22:21:15.146"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='${Total_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:15.146" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Likes ='1.3K' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:15.146" endtime="20200402 22:21:15.152"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:20.154" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:15.153" endtime="20200402 22:21:20.154"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#top-level-buttons&gt;ytd-toggle-button-renderer:nth-child(2)&gt;a&gt;yt-formatted-string#text</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:21:20.183" level="INFO">${Total_Dis_Likes} = 73</msg>
<status status="PASS" starttime="20200402 22:21:20.154" endtime="20200402 22:21:20.183"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Dis_Likes}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Dis_Likes}</var>
</assign>
<msg timestamp="20200402 22:21:20.183" level="INFO">${Total_Dis_Likes} = 73</msg>
<status status="PASS" starttime="20200402 22:21:20.183" endtime="20200402 22:21:20.184"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='${Total_Dis_Likes}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:20.184" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Dislikes ='73' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:20.184" endtime="20200402 22:21:20.191"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:25.192" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:20.191" endtime="20200402 22:21:25.192"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#owner-sub-count</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:21:25.217" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:21:25.192" endtime="20200402 22:21:25.217"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Total_Subscribers}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Total_Subscribers}</var>
</assign>
<msg timestamp="20200402 22:21:25.218" level="INFO">${Total_Subscribers} = 2.64M subscribers</msg>
<status status="PASS" starttime="20200402 22:21:25.217" endtime="20200402 22:21:25.218"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '${Total_Subscribers}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:25.218" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Total_Subscribers= '2.64M subscribers' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:25.218" endtime="20200402 22:21:25.225"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:21:30.226" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:25.225" endtime="20200402 22:21:30.226"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=#channel-name&gt;#container&gt;#text-container&gt;yt-formatted-string&gt;a</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:21:30.254" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:21:30.226" endtime="20200402 22:21:30.254"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Channel_Name}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Channel_Name}</var>
</assign>
<msg timestamp="20200402 22:21:30.254" level="INFO">${Channel_Name} = MSNBC</msg>
<status status="PASS" starttime="20200402 22:21:30.254" endtime="20200402 22:21:30.254"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= '${Channel_Name}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:30.255" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Name= 'MSNBC' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:30.254" endtime="20200402 22:21:30.261"></status>
</kw>
<kw name="Reload Page" library="SeleniumLibrary">
<doc>Simulates user reloading page.</doc>
<status status="PASS" starttime="20200402 22:21:30.261" endtime="20200402 22:21:31.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20200402 22:21:46.525" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20200402 22:21:31.523" endtime="20200402 22:21:46.525"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Click Element</arg>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css=yt-formatted-string[slot='more-button']</arg>
</arguments>
<msg timestamp="20200402 22:21:46.526" level="INFO">Clicking element 'css=yt-formatted-string[slot='more-button']'.</msg>
<status status="PASS" starttime="20200402 22:21:46.525" endtime="20200402 22:21:46.629"></status>
</kw>
<status status="PASS" starttime="20200402 22:21:46.525" endtime="20200402 22:21:46.629"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:21:56.631" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:21:46.630" endtime="20200402 22:21:56.631"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=ytd-metadata-row-renderer&gt;div#content&gt;yt-formatted-string&gt;a[dir='auto']</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:21:56.657" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:21:56.631" endtime="20200402 22:21:56.658"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Category}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Category}</var>
</assign>
<msg timestamp="20200402 22:21:56.658" level="INFO">${Category} = News &amp; Politics</msg>
<status status="PASS" starttime="20200402 22:21:56.658" endtime="20200402 22:21:56.658"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Category= '${Category}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:21:56.659" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Category= 'News &amp; Politics' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:21:56.658" endtime="20200402 22:21:56.665"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:22:01.666" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:21:56.665" endtime="20200402 22:22:01.666"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>css=div#description&gt;yt-formatted-string</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:22:01.708" level="INFO">${Description} = Sen. Chris Murphy, D-Conn., along with Sen. Brian Schatz, D-Hawaii, have introduced legislation requiring the federal government to take over the medical supply chain. Sen. Murphy joins Morning Joe to...</msg>
<status status="PASS" starttime="20200402 22:22:01.666" endtime="20200402 22:22:01.708"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${Description}</arg>
<arg>'</arg>
<arg>''</arg>
</arguments>
<assign>
<var>${Description}</var>
</assign>
<msg timestamp="20200402 22:22:01.708" level="INFO">${Description} = Sen. Chris Murphy, D-Conn., along with Sen. Brian Schatz, D-Hawaii, have introduced legislation requiring the federal government to take over the medical supply chain. Sen. Murphy joins Morning Joe to...</msg>
<status status="PASS" starttime="20200402 22:22:01.708" endtime="20200402 22:22:01.708"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= '${Description}' where id=${Count3}</arg>
</arguments>
<msg timestamp="20200402 22:22:01.709" level="INFO">Executing : Execute SQL String  |  update nbcu_pilot.Youtube_Morning_Joe set Channel_Description= 'Sen. Chris Murphy, D-Conn., along with Sen. Brian Schatz, D-Hawaii, have introduced legislation requiring the federal government to take over the medical supply chain. Sen. Murphy joins Morning Joe to discuss. Aired on 4/1/2020.
» Subscribe to MSNBC: http://on.msnbc.com/SubscribeTomsnbc

MSNBC delivers breaking news, in-depth analysis of politics headlines, as well as commentary and informed perspectives. Find video clips and segments from The Rachel Maddow Show, Morning Joe, Meet the Press Daily, The Beat with Ari Melber, Deadline: White House with Nicolle Wallace, Hardball, All In, Last Word, 11th Hour, and more.

Connect with MSNBC Online
Visit msnbc.com: http://on.msnbc.com/Readmsnbc
Subscribe to MSNBC Newsletter: http://MSNBC.com/NewslettersYouTube
Find MSNBC on Facebook: http://on.msnbc.com/Likemsnbc
Follow MSNBC on Twitter: http://on.msnbc.com/Followmsnbc
Follow MSNBC on Instagram: http://on.msnbc.com/Instamsnbc

Senators Seek Federal Government To Take Over Medical Supply Chain | Morning Joe | MSNBC' where id=4382 </msg>
<status status="PASS" starttime="20200402 22:22:01.708" endtime="20200402 22:22:01.715"></status>
</kw>
<status status="PASS" starttime="20200402 22:20:36.121" endtime="20200402 22:22:01.716"></status>
</kw>
<status status="PASS" starttime="20200402 22:20:36.121" endtime="20200402 22:22:01.716"></status>
</kw>
<status status="PASS" starttime="20200402 22:20:05.954" endtime="20200402 22:22:01.716"></status>
</kw>
<msg timestamp="20200402 22:22:01.716" level="INFO">${bool} = ('PASS', None)</msg>
<status status="PASS" starttime="20200402 22:20:05.954" endtime="20200402 22:22:01.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Count2}+1</arg>
</arguments>
<assign>
<var>${Count2}</var>
</assign>
<msg timestamp="20200402 22:22:01.716" level="INFO">${Count2} = 51</msg>
<status status="PASS" starttime="20200402 22:22:01.716" endtime="20200402 22:22:01.716"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${bool}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${bool}</var>
</assign>
<msg timestamp="20200402 22:22:01.717" level="INFO">${bool} = PASS</msg>
<status status="PASS" starttime="20200402 22:22:01.717" endtime="20200402 22:22:01.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bool}'=='PASS'</arg>
<arg>Close Window</arg>
</arguments>
<kw name="Close Window" library="SeleniumLibrary">
<doc>Closes currently opened and selected browser window/tab.</doc>
<status status="PASS" starttime="20200402 22:22:01.717" endtime="20200402 22:22:01.782"></status>
</kw>
<status status="PASS" starttime="20200402 22:22:01.717" endtime="20200402 22:22:01.782"></status>
</kw>
<kw name="Select Window" library="SeleniumLibrary">
<doc>DEPRECATED in SeleniumLibrary 4.0. , use `Switch Window` instead.</doc>
<arguments>
<arg>Main</arg>
</arguments>
<status status="PASS" starttime="20200402 22:22:01.782" endtime="20200402 22:22:01.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20200402 22:22:06.788" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20200402 22:22:01.788" endtime="20200402 22:22:06.788"></status>
</kw>
<status status="PASS" starttime="20200402 22:19:55.952" endtime="20200402 22:22:06.788"></status>
</kw>
<kw name="${j} = &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;3469783c058a03a961b37a6674e5370f&quot;, element=&quot;d47bdb6d-1486-4e6b-b7e2-b8d5ac230554&quot;)&gt;" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20200402 22:22:16.791" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200402 22:22:06.788" endtime="20200402 22:22:16.791"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${Count2}==51</arg>
</arguments>
<msg timestamp="20200402 22:22:16.792" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200402 22:22:16.791" endtime="20200402 22:22:16.792"></status>
</kw>
<status status="PASS" starttime="20200402 22:22:06.788" endtime="20200402 22:22:16.792"></status>
</kw>
<status status="PASS" starttime="20200402 20:31:02.261" endtime="20200402 22:22:16.792"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200402 22:22:16.792" endtime="20200402 22:22:19.055"></status>
</kw>
<status status="PASS" starttime="20200402 20:30:04.145" endtime="20200402 22:22:19.055" critical="yes"></status>
</test>
<status status="PASS" starttime="20200402 20:30:03.255" endtime="20200402 22:22:19.055"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Youtube Morning Joe">Youtube Morning Joe</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
